{"version":3,"sources":["../node_modules/reactstrap/es/ListGroup.js","../node_modules/reactstrap/es/ListGroupItem.js","../node_modules/lodash.isobject/index.js","../node_modules/chart.js/dist/Chart.js","../node_modules/reactstrap/es/Row.js","../node_modules/reactstrap/es/Card.js","../node_modules/reactstrap/es/CardBody.js","../node_modules/react-chartjs-2/es/index.js","../node_modules/lodash/keyBy.js","../node_modules/lodash/_baseAssignValue.js","../node_modules/lodash/_defineProperty.js","../node_modules/lodash/_createAggregator.js","../node_modules/lodash/_arrayAggregator.js","../node_modules/lodash/_baseAggregator.js","../node_modules/reactstrap/es/Col.js","../node_modules/reactstrap/es/CardHeader.js"],"names":["_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","_babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_1__","react__WEBPACK_IMPORTED_MODULE_2__","react__WEBPACK_IMPORTED_MODULE_2___default","n","prop_types__WEBPACK_IMPORTED_MODULE_3__","prop_types__WEBPACK_IMPORTED_MODULE_3___default","classnames__WEBPACK_IMPORTED_MODULE_4__","classnames__WEBPACK_IMPORTED_MODULE_4___default","_utils__WEBPACK_IMPORTED_MODULE_5__","propTypes","tag","flush","a","bool","className","string","cssModule","object","ListGroup","props","Tag","attributes","Object","classes","createElement","defaultProps","__webpack_exports__","active","disabled","color","action","any","handleDisabledOnClick","e","preventDefault","ListGroupItem","onClick","module","exports","value","type","moment","hasOwnProperty","conversions","rgb2hsl","rgb2hsv","rgb2hwb","rgb2cmyk","rgb2keyword","rgb2xyz","rgb2lab","rgb2lch","args","lab2lch","hsl2rgb","hsl2hsv","hsl","h","s","l","hsl2hwb","hsl2cmyk","hsl2keyword","hsv2rgb","hsv2hsl","hsv","sl","v","hsv2hwb","hsv2cmyk","hsv2keyword","hwb2rgb","hwb2hsl","hwb2hsv","hwb2cmyk","hwb2keyword","cmyk2rgb","cmyk2hsl","cmyk2hsv","cmyk2hwb","cmyk2keyword","keyword2rgb","keyword2hsl","keyword2hsv","keyword2hwb","keyword2cmyk","keyword2lab","keyword2xyz","xyz2rgb","xyz2lab","xyz2lch","lab2xyz","lab2rgb","lch2lab","lch2xyz","lch2rgb","rgb","r","g","b","min","Math","max","delta","w","k","reverseKeywords","JSON","stringify","pow","x","y","z","xyz","t1","t2","t3","val","i","hi","floor","f","p","q","t","hwb","wh","bl","ratio","cmyk","c","m","lab","y2","hr","atan2","PI","sqrt","lch","cos","sin","keyword","cssKeywords","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","key","convert","Converter","func","arg","Array","prototype","slice","call","arguments","pair","exec","from","to","undefined","length","round","this","convs","routeSpace","space","values","getValues","setValues","vals","fspace","forEach","colorConvert","colorName","colorString","getRgba","getHsla","getRgb","rgba","getHsl","hsla","getHwb","getAlpha","hexString","hexDouble","rgbString","alpha","rgbaString","percentString","percentaString","hslString","hslaString","hwbString","reverseNames","match","hexAlpha","parseInt","parseFloat","scale","isNaN","num","str","toString","toUpperCase","name","Color","obj","valid","lightness","whiteness","isValid","setSpace","rgbArray","hslArray","hsvArray","hwbArray","concat","cmykArray","rgbaArray","hslaArray","setChannel","hue","saturation","saturationv","blackness","rgbNumber","luminosity","lum","chan","contrast","color2","lum1","lum2","level","contrastRatio","dark","light","negate","lighten","darken","saturate","desaturate","whiten","blacken","greyscale","clearer","opaquer","rotate","degrees","mix","mixinColor","weight","w1","w2","toJSON","clone","result","source","target","prop","console","error","spaces","maxes","charAt","capped","chans","sname","index","svalues","window","chartjsColor","helpers","noop","uid","id","isNullOrUndef","isArray","substr","isObject","isFinite","_isFinite","_x","apply","Number","valueOrDefault","defaultValue","valueAtIndexOrDefault","callback","fn","thisArg","each","loopable","reverse","len","keys","arrayEquals","a0","a1","ilen","v0","v1","map","klen","_merger","options","tval","sval","merge","_mergerIf","mergeIf","sources","merger","extend","setFn","inherits","extensions","me","ChartElement","constructor","Surrogate","__super__","helpers_core","callCallback","indexOf","array","item","fromIndex","getValueOrDefault","getValueAtIndexOrDefault","effects","linear","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easeInSine","easeOutSine","easeInOutSine","easeInExpo","easeOutExpo","easeInOutExpo","easeInCirc","easeOutCirc","easeInOutCirc","easeInElastic","asin","easeOutElastic","easeInOutElastic","easeInBack","easeOutBack","easeInOutBack","easeInBounce","easeOutBounce","easeInOutBounce","helpers_easing","easingEffects","RAD_PER_DEG","DOUBLE_PI","HALF_PI","QUARTER_PI","TWO_THIRDS_PI","exports$1","clear","chart","ctx","clearRect","width","height","roundedRect","radius","left","top","right","bottom","moveTo","arc","closePath","rect","drawPoint","style","rotation","xOffset","yOffset","size","cornerRadius","rad","beginPath","lineTo","SQRT1_2","fill","stroke","drawImage","_isPointInArea","point","area","clipArea","save","clip","unclipArea","restore","previous","flip","stepped","steppedLine","midpoint","tension","bezierCurveTo","controlPointPreviousX","controlPointNextX","controlPointPreviousY","controlPointNextY","helpers_canvas","drawRoundedRectangle","defaults","_set","scope","defaultColor","defaultFontColor","defaultFontFamily","defaultFontSize","defaultFontStyle","defaultLineHeight","showLines","core_defaults","helpers_options","toLineHeight","matches","toPadding","_parseFont","globalDefaults","global","fontSize","font","family","fontFamily","lineHeight","fontStyle","toFontString","resolve","inputs","context","helpers$1","easing","canvas","Element","configuration","initialize","hidden","pivot","_view","_model","_start","transition","ease","model","start","view","actual","origin","c0","c1","interpolate","tooltipPosition","hasValue","isNumber","core_element","exports$2","currentStep","numSteps","render","onAnimationProgress","onAnimationComplete","core_animation","defineProperty","get","set","animation","duration","onProgress","onComplete","core_animations","animations","request","addAnimation","lazy","startTime","Date","now","animating","push","requestAnimationFrame","cancelAnimation","findIndex","splice","requestAnimFrame","startDigest","advance","nextStep","arrayEvents","unlistenArrayEvents","listener","stub","_chartjs","listeners","DatasetController","datasetIndex","datasetElementType","dataElementType","linkScales","addElements","updateIndex","meta","getMeta","dataset","getDataset","xAxisID","scales","xAxes","yAxisID","yAxes","data","datasets","getDatasetMeta","getScaleForId","scaleID","_getValueScaleId","_getIndexScaleId","_getValueScale","_getIndexScale","reset","update","destroy","_data","createMetaDataset","_chart","_datasetIndex","createMetaData","_index","metaData","addElementAndReset","element","updateElement","buildOrUpdateElements","isExtensible","configurable","enumerable","method","base","res","resyncElements","easingValue","elements","draw","removeHoverStyle","$previousStyle","setHoverStyle","custom","getHoverColor","backgroundColor","borderColor","borderWidth","hoverBackgroundColor","hoverBorderColor","hoverBorderWidth","numMeta","numData","insertElements","count","onDataPush","onDataPop","pop","onDataShift","shift","onDataSplice","onDataUnshift","core_datasetController","borderAlign","element_arc","inLabelRange","mouseX","vm","hoverRadius","inRange","chartX","chartY","pointRelativePosition","getAngleFromPoint","angle","distance","startAngle","endAngle","betweenAngles","withinRadius","innerRadius","outerRadius","getCenterPoint","halfAngle","halfRadius","getArea","centreAngle","rangeFromCentre","angleMargin","sA","eA","pixelMargin","fillStyle","lineWidth","lineJoin","strokeStyle","valueOrDefault$1","line","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","capBezierPoints","element_line","current","currentVM","spanGaps","points","_children","globalOptionLineElements","lastDrawnIndex","_loop","lineCap","setLineDash","lineDashOffset","previousItem","skip","valueOrDefault$2","defaultColor$1","xRange","abs","hitRadius","pointStyle","element_point","mouseY","inXRange","inYRange","padding","chartArea","defaultColor$2","isVertical","getBarBounds","x1","x2","y1","half","swap","orig","v2","parseBorderWidth","maxW","maxH","edge","borderSkipped","horizontal","parseBorderSkipped","_inRange","skipX","skipY","bounds","rectangle","element_rectangle","rects","border","outer","inner","boundingRects","fillRect","Arc","Line","Point","Rectangle","resolve$1","hover","mode","categoryPercentage","barPercentage","offset","gridLines","offsetGridLines","controller_bar","stack","bar","_ruler","getRuler","_resolveElementOptions","_xScale","_yScale","datasetLabel","label","labels","_updateElementGeometry","vscale","getBasePixel","isHorizontal","ruler","vpixels","calculateBarValuePixels","ipixels","calculateBarIndexPixels","head","center","_getStacks","last","stacked","stacks","isDatasetVisible","getStackCount","getStackIndex","stackCount","end","pixels","getPixelForValue","barThickness","prev","curr","ticks","getTicks","getPixelForTick","computeMinSampleSize","imeta","ivalue","getRightValue","minBarLength","controller","range","next","percent","chunk","computeFlexCategoryTraits","thickness","computeFitCategoryTraits","stackIndex","maxBarThickness","Infinity","dataIndex","valueOrDefault$3","resolve$2","position","tooltips","callbacks","title","dataPoint","xLabel","yLabel","controller_bubble","xScale","yScale","dsIndex","getPixelForDecimal","NaN","_options","resolve$3","valueOrDefault$4","animateRotate","animateScale","legendCallback","text","join","legend","generateLabels","ds","arcOpts","bw","legendItem","cutoutPercentage","circumference","tooltipItem","dataLabel","controller_doughnut","getRingIndex","ringIndex","j","opts","availableWidth","availableHeight","minSize","arcs","chartWeight","_getRingWeight","contains0","contains90","contains180","contains270","cutout","getMaxBorderWidth","radiusLength","_getVisibleDatasetWeightTotal","offsetX","offsetY","total","calculateTotal","_getRingWeightOffset","animationOpts","centerX","centerY","calculateCircumference","hoverWidth","ringWeightOffset","dataSetIndex","axis","controller_horizontalBar","valueOrDefault$5","resolve$4","isPointInArea","lineEnabled","showLine","controller_line","lineTension","_scale","_resolveLineOptions","updateBezierControlPoints","lineModel","_resolvePointOptions","calculatePointY","ELEMENT_OPTIONS","elementOptions","dsMeta","sumPos","sumNeg","stackedRightValue","rightValue","controlPoints","capControlPoint","pt","filter","cubicInterpolationMode","splineCurveMonotone","splineCurve","nextItem","halfBorderWidth","resolve$5","angleLines","display","circular","pointLabels","beginAtZero","controller_polarArea","starts","_starts","angles","_angles","_updateRadius","countVisibleElements","_computeAngle","getVisibleDatasetCount","xCenter","yCenter","datasetStartAngle","getDistanceFromCenterForValue","resetRadius","doughnut","controller_pie","valueOrDefault$6","resolve$6","controller_radar","pointPosition","getPointPositionForValue","controllers","bubble","horizontalBar","polarArea","pie","radar","scatter","getRelativePosition","native","parseVisibleItems","handler","jlen","getIntersectItems","getNearestItems","intersect","distanceMetric","minDistance","POSITIVE_INFINITY","nearestItems","getDistanceMetricForAxis","useX","useY","pt1","pt2","deltaX","deltaY","indexMode","items","core_interaction","modes","single","x-axis","nearest","intersectsItem","filterByPosition","where","sortByWeight","_tmpIndex_","sort","addSizeByPosition","boxes","box","layout","core_layouts","addBox","fullWidth","removeBox","layoutItem","configure","layoutOptions","leftPadding","rightPadding","topPadding","bottomPadding","leftBoxes","rightBoxes","topBoxes","bottomBoxes","chartAreaBoxes","maxPadding","verticalBoxes","horizontalBoxes","outerBoxes","chartWidth","chartHeight","chartAreaWidth","verticalBoxWidth","maxChartAreaWidth","maxChartAreaHeight","outerBoxSizes","minBoxSizes","getPadding","boxPadding","findMaxPadding","fitBox","minBoxSize","findNextWhere","scaleMargin","leftPaddingAddition","topPaddingAddition","newMaxChartAreaHeight","newMaxChartAreaWidth","placeBox","minBox","stylesheet","freeze","default","EXPANDO_KEY","CSS_SIZE_MONITOR","CSS_PREFIX","CSS_RENDER_MONITOR","CSS_RENDER_ANIMATION","ANIMATION_START_EVENTS","EVENT_TYPES","touchstart","touchmove","touchend","pointerenter","pointerdown","pointermove","pointerup","pointerleave","pointerout","readUsedSize","property","getStyle","eventListenerOptions","supports","addEventListener","passive","addListener","node","removeListener","removeEventListener","createEvent","nativeEvent","createDiv","cls","el","document","addResizeListener","expando","resizer","expand","shrink","appendChild","_reset","scrollLeft","scrollTop","onScroll","bind","createResizer","ticking","throttled","container","maintainAspectRatio","parentNode","clientWidth","proxy","renderProxy","animationName","reflow","offsetParent","classList","add","watchForRender","insertBefore","firstChild","removeResizeListener","remove","unwatchForRender","removeChild","platform_dom$2","disableCSSInjection","_enabled","_ensureLoaded","_loaded","platform","css","_style","setAttribute","getElementsByTagName","createTextNode","injectCSS","acquireContext","config","getElementById","getContext","renderHeight","getAttribute","renderWidth","initial","displayWidth","aspectRatio","displayHeight","initCanvas","releaseContext","removeAttribute","proxies","event","pos","fromNativeEvent","addEvent","removeEvent","implementation","plugins","core_plugins","_plugins","_cacheId","register","plugin","unregister","idx","getAll","notify","hook","descriptor","params","descriptors","cache","$plugins","_invalidate","core_scaleService","constructors","registerScaleType","scaleConstructor","scaleDefaults","getScaleConstructor","getScaleDefaults","updateScaleDefaults","additions","addScalesToLayout","valueOrDefault$7","enabled","titleFontStyle","titleSpacing","titleMarginBottom","titleFontColor","titleAlign","bodySpacing","bodyFontColor","bodyAlign","footerFontStyle","footerSpacing","footerMarginTop","footerFontColor","footerAlign","yPadding","xPadding","caretPadding","caretSize","multiKeyBackground","displayColors","beforeTitle","tooltipItems","labelCount","afterTitle","beforeBody","beforeLabel","labelColor","activeElement","labelTextColor","afterLabel","afterBody","beforeFooter","footer","afterFooter","positioners","average","eventPosition","nearestElement","d","distanceBetweenPoints","tp","pushOrConcat","toPush","splitNewlines","String","split","createTooltipItem","indexScale","valueScale","getLabelForIndex","getBaseModel","tooltipOpts","xAlign","yAlign","_bodyFontFamily","bodyFontFamily","_bodyFontStyle","bodyFontStyle","_bodyAlign","bodyFontSize","_titleFontFamily","titleFontFamily","_titleFontStyle","titleFontSize","_titleAlign","_footerFontFamily","footerFontFamily","_footerFontStyle","footerFontSize","_footerAlign","opacity","legendColorBackground","getAlignedX","align","getBeforeAfterBodyLines","exports$3","_lastActive","getTitle","lines","getBeforeBody","getBody","bodyItems","bodyItem","before","after","getAfterBody","getFooter","changed","existingModel","_active","alignment","backgroundPoint","tooltipSize","caretX","caretY","labelColors","labelTextColors","_eventPosition","itemSort","body","dataPoints","tooltip","combinedBodyLength","reduce","titleLineCount","footerLineCount","widthPadding","maxLineWidth","measureText","fontString","getTooltipSize","lf","rf","olf","orf","yf","midX","midY","determineAlignment","paddingAndSize","radiusAndPadding","getBackgroundPoint","drawCaret","tooltipPoint","caretPosition","getCaretPosition","x3","y3","ptX","ptY","tmp","drawTitle","textAlign","textBaseline","fillText","drawBody","textColor","drawColorBoxes","xLinePadding","colorX","fillLineOfText","strokeRect","drawFooter","drawBackground","quadraticCurveTo","hasTooltipContent","globalAlpha","handleEvent","getElementsAtEventForMode","positioners_1","core_tooltip","valueOrDefault$8","mergeScaleConfig","slen","mergeConfig","positionIsHorizontal","events","onHover","animationDuration","responsive","responsiveAnimationDuration","Chart","construct","initConfig","_bufferedRender","instances","retinaScale","devicePixelRatio","bindEvents","resize","ensureScalesHaveIDs","buildOrUpdateScales","initToolTip","stop","silent","newWidth","getMaximumWidth","newHeight","getMaximumHeight","newSize","onResize","scalesOptions","scaleOptions","xAxisOptions","yAxisOptions","updated","dtype","dposition","isDefault","scaleType","scaleClass","mergeTicksOptions","hasUpdated","buildOrUpdateControllers","newControllers","destroyDatasetMeta","ControllerClass","Error","resetElements","newOptions","updateConfig","updateLayout","updateDatasets","lastActive","_bufferedRequest","updateDataset","animationOptions","animationObject","easingFunction","stepDecimal","drawDatasets","_drawTooltip","drawDataset","getElementAtEvent","getElementsAtEvent","getElementsAtXAxis","getDatasetAtEvent","_meta","generateLegend","unbindEvents","toBase64Image","toDataURL","_chartInstance","_listeners","eventHandler","updateHoverStyle","bufferedRequest","hoverOptions","core_controller","abstract","DateAdapter","Controller","types","configMerge","scaleMerge","formats","parse","format","diff","startOf","endOf","_create","override","members","core_adapters","_date","core_ticks","formatters","tickValue","logDelta","log10","tickString","maxTick","logTick","toExponential","numDecimal","toFixed","logarithmic","remain","valueOrDefault$9","labelsFromTicks","computeTextSize","tick","longestText","drawBorder","drawOnChartArea","drawTicks","tickMarkLength","zeroLineWidth","zeroLineColor","zeroLineBorderDash","zeroLineBorderDashOffset","scaleLabel","labelString","minRotation","maxRotation","mirror","autoSkip","autoSkipPadding","labelOffset","minor","major","core_scale","paddingLeft","paddingTop","paddingRight","paddingBottom","_ticks","beforeUpdate","maxWidth","maxHeight","margins","_maxLabelLines","longestLabelWidth","longestTextCache","beforeSetDimensions","setDimensions","afterSetDimensions","beforeDataLimits","determineDataLimits","afterDataLimits","beforeBuildTicks","buildTicks","afterBuildTicks","beforeTickToLabelConversion","convertTicksToLabels","afterTickToLabelConversion","beforeCalculateTickRotation","calculateTickRotation","afterCalculateTickRotation","beforeFit","fit","afterFit","afterUpdate","tickOpts","userCallback","tickFont","labelRotation","cosRotation","originalLabelWidth","labelWidth","tickWidth","angleRadians","toRadians","scaleLabelOpts","gridLineOpts","_isVisible","parseFont","isFullWidth","scaleLabelFont","scaleLabelPadding","deltaHeight","largestTextWidth","tallestLabelHeightInLines","numberOfLabelLines","lineSpace","tickPadding","sinRotation","labelHeight","firstLabelWidth","lastLabelWidth","offsetLeft","offsetRight","handleMargins","rawValue","getValueForPixel","innerWidth","pixel","finalVal","innerHeight","decimal","valueOffset","getBaseValue","_autoSkip","optionTicks","tickCount","skipRatio","maxTicks","maxTicksLimit","ticksLength","_tickSize","axisLength","PaddingBottom","rot","borderValue","tickStart","tickEnd","optionMajorTicks","isRotated","isMirrored","tickFontColor","fontColor","majorTickFontColor","majorTickFont","tl","scaleLabelFontColor","labelRotationRadians","itemsToDraw","axisWidth","alignPixel","_alignPixel","lineColor","tx1","ty1","tx2","ty2","labelX","labelY","textOffset","zeroLineIndex","lineValue","getPixelForGridLine","labelYOffset","labelXOffset","glWidth","glColor","glBorderDash","glBorderDashOffset","itemToDraw","translate","scaleLabelX","scaleLabelY","halfLineHeight","isLeft","firstLineWidth","lastLineWidth","scale_category","getLabels","xLabels","yLabels","minIndex","maxIndex","valueCategory","offsetAmt","valueWidth","widthOffset","valueHeight","heightOffset","horz","valueDimension","_defaults","scale_linearbase","handleTickRangeOptions","minSign","sign","maxSign","setMin","suggestedMin","setMax","suggestedMax","getTickLimit","stepSize","ceil","_computeTickLimit","handleDirectionalChanges","numericGeneratorOptions","precision","fixedStepSize","generationOptions","dataRange","factor","niceMin","niceMax","numSpaces","unit","maxNumSpaces","rmin","rmax","spacing","niceNum","_decimalPlaces","almostWhole","almostEquals","generateTicks","ticksAsNumbers","defaultConfig$1","scale_linear","IDMatches","hasStacks","valuesPerStack","positiveValues","negativeValues","relativePoints","valuesForType","minVal","maxVal","innerDimension","_defaults$1","valueOrDefault$a","defaultConfig$2","nonNegativeOrDefault","scale_logarithmic","minNotZero","exp","significand","tickVal","endExp","endSignificand","lastTick","generateTicks$1","tickValues","_getFirstTickValue","firstTickValue","_defaults$2","valueOrDefault$b","valueAtIndexOrDefault$1","resolve$7","defaultConfig$3","animate","showLabelBackdrop","backdropColor","backdropPaddingY","backdropPaddingX","getValueCount","getTickBackdropHeight","determineLimits","getTextAlignForAngle","adjustPointPositionForLabelHeight","textSize","numberOrZero","param","scale_radialLinear","drawingArea","NEGATIVE_INFINITY","plFont","furthestLimits","furthestAngles","_pointLabelSizes","valueCount","getPointPosition","getIndexAngle","toDegrees","hLimits","vLimits","setReductions","fitWithPointLabels","setCenterPoint","largestPossibleRadius","radiusReductionLeft","radiusReductionRight","radiusReductionTop","radiusReductionBottom","leftMovement","rightMovement","topMovement","bottomMovement","maxRight","maxLeft","maxTop","maxBottom","angleMultiplier","startAngleRadians","scalingFactor","distanceFromCenter","thisAngle","getBasePosition","angleLineOpts","pointLabelOpts","tickBackdropHeight","outerDistance","outerPosition","extra","pointLabelPosition","pointLabelFontColor","drawPointLabels","yCenterOffset","drawRadiusLine","_defaults$3","valueOrDefault$c","MIN_INTEGER","MIN_SAFE_INTEGER","MAX_INTEGER","MAX_SAFE_INTEGER","INTERVALS","millisecond","common","steps","second","minute","hour","day","week","month","quarter","year","UNITS","sorter","arrayUnique","hash","out","interpolate$1","table","skey","tkey","mid","i0","i1","lo","lookup","span","toTimestamp","input","adapter","_adapter","time","parser","determineMajorUnit","generate","capacity","timeOpts","minUnit","interval","determineUnitForAutoTicks","unitStepSize","weekday","isoWeekday","majorTicksEnabled","first","milliseconds","determineStepSize","scale_time","adapters","date","warn","displayFormats","timestamp","timestamps","dataLabels","_horizontal","_table","_timestamps","getLabelCapacity","_unit","determineUnitForFormatting","_majorUnit","distribution","buildLookupTable","_offsets","computeOffsets","majorUnit","ticksFromTimestamps","tooltipFormat","datetime","tickFormatFunction","minorFormat","majorFormat","majorTime","majorTickOpts","formatter","getPixelForOffset","isReverse","getLabelWidth","ticksOpts","tickLabelWidth","tickFontSize","exampleTime","exampleLabel","_defaults$4","displayFormat","category","radialLinear","FORMATS","_id","valueOf","_format","amount","as","filler","propagate","mappers","visible","boundary","decodeFill","computeBoundary","scaleBottom","scaleTop","scaleZero","resolveTarget","visited","createMapper","isDrawable","drawArea","curve0","curve1","len0","len1","plugin_filler","afterDatasetsUpdate","$filler","mapper","beforeDatasetDraw","loop","p0","p1","d0","d1","doFill","noop$1","valueOrDefault$d","getBoxWidth","labelOpts","usePointStyle","boxWidth","ci","onLeave","lineDash","Legend","legendHitBoxes","_hoveredItem","doughnutMode","beforeBuildLabels","buildLabels","afterBuildLabels","legendItems","labelFont","hitboxes","lineWidths","totalHeight","vPadding","columnWidths","totalWidth","currentColWidth","currentColHeight","itemHeight","itemWidth","lineDefault","legendWidth","cursor","textWidth","SQRT2","drawLegendBox","halfFontSize","xLeft","yMiddle","_getLegendItemAt","hitBox","lh","hoveredItem","createNewLegendAndAttach","legendOpts","plugin_legend","_element","beforeInit","afterEvent","noop$2","Title","lineCount","fontOpts","titleX","titleY","createNewTitleBlockAndAttach","titleOpts","titleBlock","parseMaxStyle","styleValue","parentProperty","valueInPixels","isConstrainedValue","getConstraintDimension","domNode","maxStyle","percentageProperty","defaultView","_getParentNode","constrainedNode","getComputedStyle","constrainedContainer","hasCNode","hasCContainer","infinity","collection","filterCallback","filtered","arrayToSearch","startIndex","currentItem","findPreviousWhere","epsilon","rounded","exponent","log","LOG10E","powerOf10","isPowerOf10","radians","centrePoint","anglePoint","distanceFromXCenter","distanceFromYCenter","radialDistanceFromCenter","aliasPixel","pixelWidth","currentDevicePixelRatio","halfWidth","firstPoint","middlePoint","afterPoint","d01","d12","s01","s12","fa","fb","EPSILON","pointBefore","pointCurrent","pointAfter","alphaK","betaK","tauK","squaredMagnitude","pointsWithTangents","deltaK","mK","pointsLen","slopeDeltaX","fraction","webkitRequestAnimationFrame","mozRequestAnimationFrame","oRequestAnimationFrame","msRequestAnimationFrame","setTimeout","evt","originalEvent","srcElement","boundingRect","getBoundingClientRect","touches","clientX","clientY","getConstraintWidth","getConstraintHeight","_calculatePadding","parentDimension","parent","host","cw","clientHeight","ch","currentStyle","getPropertyValue","forceRatio","pixelRatio","pixelSize","arrayOfThings","gc","garbageCollect","longest","thing","nestedThing","gcLen","numberOfLines","CanvasGradient","colorValue","CanvasPattern","core_helpers","_adapters","Animation","animationService","Interaction","layouts","Scale","scaleService","Ticks","Tooltip","src","pluginService","PluginBase","canvasHelpers","layoutService","LinearScaleBase","klass","cfg","toLowerCase","factory","noGutters","form","Row","inverse","block","outline","innerRef","oneOfType","Card","ref","CardBody","process","Doughnut","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","chart_js__WEBPACK_IMPORTED_MODULE_2__","chart_js__WEBPACK_IMPORTED_MODULE_2___default","lodash_isEqual__WEBPACK_IMPORTED_MODULE_3__","lodash_isEqual__WEBPACK_IMPORTED_MODULE_3___default","lodash_keyBy__WEBPACK_IMPORTED_MODULE_4__","lodash_keyBy__WEBPACK_IMPORTED_MODULE_4___default","_extends","assign","_objectWithoutProperties","_classCallCheck","instance","Constructor","TypeError","_possibleConstructorReturn","self","ReferenceError","_inherits","subClass","superClass","create","writable","setPrototypeOf","__proto__","NODE_ENV","PUBLIC_URL","ChartComponent","_React$Component","_temp","_this","_len","_key","handleOnClick","chartInstance","_this$props","onElementsClick","componentWillMount","componentDidMount","renderChart","componentDidUpdate","redraw","destroyChart","updateChart","shouldComponentUpdate","nextProps","_props","nextData","transformDataProp","shadowDataProp","componentWillUnmount","memoizeDataProps","saveCurrentDatasets","checkDatasets","isDev","usingCustomKeyProvider","datasetKeyProvider","getLabelAsKey","multipleDatasets","shouldWarn","getCurrentDatasets","_this2","_this3","currentDatasets","nextDatasets","currentDatasetsIndexed","pid","otherProps","rest","_props2","_props3","Component","isRequired","number","arrayOf","propName","componentName","_React$Component2","_this5","_ref","_React$Component3","Pie","_this7","_ref2","_React$Component4","_this9","_ref3","_React$Component5","Bar","_this11","_ref4","_React$Component6","HorizontalBar","_this13","_ref5","_React$Component7","Radar","_this15","_ref6","_React$Component8","Polar","_this17","_ref7","_React$Component9","Bubble","_this19","_ref8","_React$Component10","Scatter","_this21","_ref9","baseAssignValue","keyBy","createAggregator","getNative","arrayAggregator","baseAggregator","baseIteratee","setter","initializer","iteratee","accumulator","baseEach","lodash_isobject__WEBPACK_IMPORTED_MODULE_2__","lodash_isobject__WEBPACK_IMPORTED_MODULE_2___default","react__WEBPACK_IMPORTED_MODULE_3__","react__WEBPACK_IMPORTED_MODULE_3___default","prop_types__WEBPACK_IMPORTED_MODULE_4__","prop_types__WEBPACK_IMPORTED_MODULE_4___default","classnames__WEBPACK_IMPORTED_MODULE_5__","classnames__WEBPACK_IMPORTED_MODULE_5___default","_utils__WEBPACK_IMPORTED_MODULE_6__","stringOrNumberProp","columnProps","shape","pull","order","xs","sm","md","lg","xl","widths","getColumnSizeClass","isXs","colWidth","colSize","Col","colClasses","columnProp","_classNames","colSizeInterfix","colClass","_colClass","CardHeader"],"mappings":"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","file":"static/js/35.b2556af7.chunk.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  flush: PropTypes.bool,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'ul'\n};\n\nvar ListGroup = function ListGroup(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      Tag = props.tag,\n      flush = props.flush,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"tag\", \"flush\"]);\n\n  var classes = mapToCssModules(classNames(className, 'list-group', flush ? 'list-group-flush' : false), cssModule);\n  return React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nListGroup.propTypes = propTypes;\nListGroup.defaultProps = defaultProps;\nexport default ListGroup;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  active: PropTypes.bool,\n  disabled: PropTypes.bool,\n  color: PropTypes.string,\n  action: PropTypes.bool,\n  className: PropTypes.any,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'li'\n};\n\nvar handleDisabledOnClick = function handleDisabledOnClick(e) {\n  e.preventDefault();\n};\n\nvar ListGroupItem = function ListGroupItem(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      Tag = props.tag,\n      active = props.active,\n      disabled = props.disabled,\n      action = props.action,\n      color = props.color,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"tag\", \"active\", \"disabled\", \"action\", \"color\"]);\n\n  var classes = mapToCssModules(classNames(className, active ? 'active' : false, disabled ? 'disabled' : false, action ? 'list-group-item-action' : false, color ? \"list-group-item-\" + color : false, 'list-group-item'), cssModule); // Prevent click event when disabled.\n\n  if (disabled) {\n    attributes.onClick = handleDisabledOnClick;\n  }\n\n  return React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nListGroupItem.propTypes = propTypes;\nListGroupItem.defaultProps = defaultProps;\nexport default ListGroupItem;","/**\n * lodash 3.0.2 (Custom Build) <https://lodash.com/>\n * Build: `lodash modern modularize exports=\"npm\" -o ./`\n * Copyright 2012-2015 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2015 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <https://lodash.com/license>\n */\n\n/**\n * Checks if `value` is the [language type](https://es5.github.io/#x8) of `Object`.\n * (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(1);\n * // => false\n */\nfunction isObject(value) {\n  // Avoid a V8 JIT bug in Chrome 19-20.\n  // See https://code.google.com/p/v8/issues/detail?id=2291 for more details.\n  var type = typeof value;\n  return !!value && (type == 'object' || type == 'function');\n}\n\nmodule.exports = isObject;","/*!\n * Chart.js v2.8.0\n * https://www.chartjs.org\n * (c) 2019 Chart.js Contributors\n * Released under the MIT License\n */\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory(function () {\n    try {\n      return require('moment');\n    } catch (e) {}\n  }()) : typeof define === 'function' && define.amd ? define(['require'], function (require) {\n    return factory(function () {\n      try {\n        return require('moment');\n      } catch (e) {}\n    }());\n  }) : global.Chart = factory(global.moment);\n})(this, function (moment) {\n  'use strict';\n\n  moment = moment && moment.hasOwnProperty('default') ? moment['default'] : moment;\n  /* MIT license */\n\n  var conversions = {\n    rgb2hsl: rgb2hsl,\n    rgb2hsv: rgb2hsv,\n    rgb2hwb: rgb2hwb,\n    rgb2cmyk: rgb2cmyk,\n    rgb2keyword: rgb2keyword,\n    rgb2xyz: rgb2xyz,\n    rgb2lab: rgb2lab,\n    rgb2lch: rgb2lch,\n    hsl2rgb: hsl2rgb,\n    hsl2hsv: hsl2hsv,\n    hsl2hwb: hsl2hwb,\n    hsl2cmyk: hsl2cmyk,\n    hsl2keyword: hsl2keyword,\n    hsv2rgb: hsv2rgb,\n    hsv2hsl: hsv2hsl,\n    hsv2hwb: hsv2hwb,\n    hsv2cmyk: hsv2cmyk,\n    hsv2keyword: hsv2keyword,\n    hwb2rgb: hwb2rgb,\n    hwb2hsl: hwb2hsl,\n    hwb2hsv: hwb2hsv,\n    hwb2cmyk: hwb2cmyk,\n    hwb2keyword: hwb2keyword,\n    cmyk2rgb: cmyk2rgb,\n    cmyk2hsl: cmyk2hsl,\n    cmyk2hsv: cmyk2hsv,\n    cmyk2hwb: cmyk2hwb,\n    cmyk2keyword: cmyk2keyword,\n    keyword2rgb: keyword2rgb,\n    keyword2hsl: keyword2hsl,\n    keyword2hsv: keyword2hsv,\n    keyword2hwb: keyword2hwb,\n    keyword2cmyk: keyword2cmyk,\n    keyword2lab: keyword2lab,\n    keyword2xyz: keyword2xyz,\n    xyz2rgb: xyz2rgb,\n    xyz2lab: xyz2lab,\n    xyz2lch: xyz2lch,\n    lab2xyz: lab2xyz,\n    lab2rgb: lab2rgb,\n    lab2lch: lab2lch,\n    lch2lab: lch2lab,\n    lch2xyz: lch2xyz,\n    lch2rgb: lch2rgb\n  };\n\n  function rgb2hsl(rgb) {\n    var r = rgb[0] / 255,\n        g = rgb[1] / 255,\n        b = rgb[2] / 255,\n        min = Math.min(r, g, b),\n        max = Math.max(r, g, b),\n        delta = max - min,\n        h,\n        s,\n        l;\n    if (max == min) h = 0;else if (r == max) h = (g - b) / delta;else if (g == max) h = 2 + (b - r) / delta;else if (b == max) h = 4 + (r - g) / delta;\n    h = Math.min(h * 60, 360);\n    if (h < 0) h += 360;\n    l = (min + max) / 2;\n    if (max == min) s = 0;else if (l <= 0.5) s = delta / (max + min);else s = delta / (2 - max - min);\n    return [h, s * 100, l * 100];\n  }\n\n  function rgb2hsv(rgb) {\n    var r = rgb[0],\n        g = rgb[1],\n        b = rgb[2],\n        min = Math.min(r, g, b),\n        max = Math.max(r, g, b),\n        delta = max - min,\n        h,\n        s,\n        v;\n    if (max == 0) s = 0;else s = delta / max * 1000 / 10;\n    if (max == min) h = 0;else if (r == max) h = (g - b) / delta;else if (g == max) h = 2 + (b - r) / delta;else if (b == max) h = 4 + (r - g) / delta;\n    h = Math.min(h * 60, 360);\n    if (h < 0) h += 360;\n    v = max / 255 * 1000 / 10;\n    return [h, s, v];\n  }\n\n  function rgb2hwb(rgb) {\n    var r = rgb[0],\n        g = rgb[1],\n        b = rgb[2],\n        h = rgb2hsl(rgb)[0],\n        w = 1 / 255 * Math.min(r, Math.min(g, b)),\n        b = 1 - 1 / 255 * Math.max(r, Math.max(g, b));\n    return [h, w * 100, b * 100];\n  }\n\n  function rgb2cmyk(rgb) {\n    var r = rgb[0] / 255,\n        g = rgb[1] / 255,\n        b = rgb[2] / 255,\n        c,\n        m,\n        y,\n        k;\n    k = Math.min(1 - r, 1 - g, 1 - b);\n    c = (1 - r - k) / (1 - k) || 0;\n    m = (1 - g - k) / (1 - k) || 0;\n    y = (1 - b - k) / (1 - k) || 0;\n    return [c * 100, m * 100, y * 100, k * 100];\n  }\n\n  function rgb2keyword(rgb) {\n    return reverseKeywords[JSON.stringify(rgb)];\n  }\n\n  function rgb2xyz(rgb) {\n    var r = rgb[0] / 255,\n        g = rgb[1] / 255,\n        b = rgb[2] / 255; // assume sRGB\n\n    r = r > 0.04045 ? Math.pow((r + 0.055) / 1.055, 2.4) : r / 12.92;\n    g = g > 0.04045 ? Math.pow((g + 0.055) / 1.055, 2.4) : g / 12.92;\n    b = b > 0.04045 ? Math.pow((b + 0.055) / 1.055, 2.4) : b / 12.92;\n    var x = r * 0.4124 + g * 0.3576 + b * 0.1805;\n    var y = r * 0.2126 + g * 0.7152 + b * 0.0722;\n    var z = r * 0.0193 + g * 0.1192 + b * 0.9505;\n    return [x * 100, y * 100, z * 100];\n  }\n\n  function rgb2lab(rgb) {\n    var xyz = rgb2xyz(rgb),\n        x = xyz[0],\n        y = xyz[1],\n        z = xyz[2],\n        l,\n        a,\n        b;\n    x /= 95.047;\n    y /= 100;\n    z /= 108.883;\n    x = x > 0.008856 ? Math.pow(x, 1 / 3) : 7.787 * x + 16 / 116;\n    y = y > 0.008856 ? Math.pow(y, 1 / 3) : 7.787 * y + 16 / 116;\n    z = z > 0.008856 ? Math.pow(z, 1 / 3) : 7.787 * z + 16 / 116;\n    l = 116 * y - 16;\n    a = 500 * (x - y);\n    b = 200 * (y - z);\n    return [l, a, b];\n  }\n\n  function rgb2lch(args) {\n    return lab2lch(rgb2lab(args));\n  }\n\n  function hsl2rgb(hsl) {\n    var h = hsl[0] / 360,\n        s = hsl[1] / 100,\n        l = hsl[2] / 100,\n        t1,\n        t2,\n        t3,\n        rgb,\n        val;\n\n    if (s == 0) {\n      val = l * 255;\n      return [val, val, val];\n    }\n\n    if (l < 0.5) t2 = l * (1 + s);else t2 = l + s - l * s;\n    t1 = 2 * l - t2;\n    rgb = [0, 0, 0];\n\n    for (var i = 0; i < 3; i++) {\n      t3 = h + 1 / 3 * -(i - 1);\n      t3 < 0 && t3++;\n      t3 > 1 && t3--;\n      if (6 * t3 < 1) val = t1 + (t2 - t1) * 6 * t3;else if (2 * t3 < 1) val = t2;else if (3 * t3 < 2) val = t1 + (t2 - t1) * (2 / 3 - t3) * 6;else val = t1;\n      rgb[i] = val * 255;\n    }\n\n    return rgb;\n  }\n\n  function hsl2hsv(hsl) {\n    var h = hsl[0],\n        s = hsl[1] / 100,\n        l = hsl[2] / 100,\n        sv,\n        v;\n\n    if (l === 0) {\n      // no need to do calc on black\n      // also avoids divide by 0 error\n      return [0, 0, 0];\n    }\n\n    l *= 2;\n    s *= l <= 1 ? l : 2 - l;\n    v = (l + s) / 2;\n    sv = 2 * s / (l + s);\n    return [h, sv * 100, v * 100];\n  }\n\n  function hsl2hwb(args) {\n    return rgb2hwb(hsl2rgb(args));\n  }\n\n  function hsl2cmyk(args) {\n    return rgb2cmyk(hsl2rgb(args));\n  }\n\n  function hsl2keyword(args) {\n    return rgb2keyword(hsl2rgb(args));\n  }\n\n  function hsv2rgb(hsv) {\n    var h = hsv[0] / 60,\n        s = hsv[1] / 100,\n        v = hsv[2] / 100,\n        hi = Math.floor(h) % 6;\n    var f = h - Math.floor(h),\n        p = 255 * v * (1 - s),\n        q = 255 * v * (1 - s * f),\n        t = 255 * v * (1 - s * (1 - f)),\n        v = 255 * v;\n\n    switch (hi) {\n      case 0:\n        return [v, t, p];\n\n      case 1:\n        return [q, v, p];\n\n      case 2:\n        return [p, v, t];\n\n      case 3:\n        return [p, q, v];\n\n      case 4:\n        return [t, p, v];\n\n      case 5:\n        return [v, p, q];\n    }\n  }\n\n  function hsv2hsl(hsv) {\n    var h = hsv[0],\n        s = hsv[1] / 100,\n        v = hsv[2] / 100,\n        sl,\n        l;\n    l = (2 - s) * v;\n    sl = s * v;\n    sl /= l <= 1 ? l : 2 - l;\n    sl = sl || 0;\n    l /= 2;\n    return [h, sl * 100, l * 100];\n  }\n\n  function hsv2hwb(args) {\n    return rgb2hwb(hsv2rgb(args));\n  }\n\n  function hsv2cmyk(args) {\n    return rgb2cmyk(hsv2rgb(args));\n  }\n\n  function hsv2keyword(args) {\n    return rgb2keyword(hsv2rgb(args));\n  } // http://dev.w3.org/csswg/css-color/#hwb-to-rgb\n\n\n  function hwb2rgb(hwb) {\n    var h = hwb[0] / 360,\n        wh = hwb[1] / 100,\n        bl = hwb[2] / 100,\n        ratio = wh + bl,\n        i,\n        v,\n        f,\n        n; // wh + bl cant be > 1\n\n    if (ratio > 1) {\n      wh /= ratio;\n      bl /= ratio;\n    }\n\n    i = Math.floor(6 * h);\n    v = 1 - bl;\n    f = 6 * h - i;\n\n    if ((i & 0x01) != 0) {\n      f = 1 - f;\n    }\n\n    n = wh + f * (v - wh); // linear interpolation\n\n    switch (i) {\n      default:\n      case 6:\n      case 0:\n        r = v;\n        g = n;\n        b = wh;\n        break;\n\n      case 1:\n        r = n;\n        g = v;\n        b = wh;\n        break;\n\n      case 2:\n        r = wh;\n        g = v;\n        b = n;\n        break;\n\n      case 3:\n        r = wh;\n        g = n;\n        b = v;\n        break;\n\n      case 4:\n        r = n;\n        g = wh;\n        b = v;\n        break;\n\n      case 5:\n        r = v;\n        g = wh;\n        b = n;\n        break;\n    }\n\n    return [r * 255, g * 255, b * 255];\n  }\n\n  function hwb2hsl(args) {\n    return rgb2hsl(hwb2rgb(args));\n  }\n\n  function hwb2hsv(args) {\n    return rgb2hsv(hwb2rgb(args));\n  }\n\n  function hwb2cmyk(args) {\n    return rgb2cmyk(hwb2rgb(args));\n  }\n\n  function hwb2keyword(args) {\n    return rgb2keyword(hwb2rgb(args));\n  }\n\n  function cmyk2rgb(cmyk) {\n    var c = cmyk[0] / 100,\n        m = cmyk[1] / 100,\n        y = cmyk[2] / 100,\n        k = cmyk[3] / 100,\n        r,\n        g,\n        b;\n    r = 1 - Math.min(1, c * (1 - k) + k);\n    g = 1 - Math.min(1, m * (1 - k) + k);\n    b = 1 - Math.min(1, y * (1 - k) + k);\n    return [r * 255, g * 255, b * 255];\n  }\n\n  function cmyk2hsl(args) {\n    return rgb2hsl(cmyk2rgb(args));\n  }\n\n  function cmyk2hsv(args) {\n    return rgb2hsv(cmyk2rgb(args));\n  }\n\n  function cmyk2hwb(args) {\n    return rgb2hwb(cmyk2rgb(args));\n  }\n\n  function cmyk2keyword(args) {\n    return rgb2keyword(cmyk2rgb(args));\n  }\n\n  function xyz2rgb(xyz) {\n    var x = xyz[0] / 100,\n        y = xyz[1] / 100,\n        z = xyz[2] / 100,\n        r,\n        g,\n        b;\n    r = x * 3.2406 + y * -1.5372 + z * -0.4986;\n    g = x * -0.9689 + y * 1.8758 + z * 0.0415;\n    b = x * 0.0557 + y * -0.2040 + z * 1.0570; // assume sRGB\n\n    r = r > 0.0031308 ? 1.055 * Math.pow(r, 1.0 / 2.4) - 0.055 : r = r * 12.92;\n    g = g > 0.0031308 ? 1.055 * Math.pow(g, 1.0 / 2.4) - 0.055 : g = g * 12.92;\n    b = b > 0.0031308 ? 1.055 * Math.pow(b, 1.0 / 2.4) - 0.055 : b = b * 12.92;\n    r = Math.min(Math.max(0, r), 1);\n    g = Math.min(Math.max(0, g), 1);\n    b = Math.min(Math.max(0, b), 1);\n    return [r * 255, g * 255, b * 255];\n  }\n\n  function xyz2lab(xyz) {\n    var x = xyz[0],\n        y = xyz[1],\n        z = xyz[2],\n        l,\n        a,\n        b;\n    x /= 95.047;\n    y /= 100;\n    z /= 108.883;\n    x = x > 0.008856 ? Math.pow(x, 1 / 3) : 7.787 * x + 16 / 116;\n    y = y > 0.008856 ? Math.pow(y, 1 / 3) : 7.787 * y + 16 / 116;\n    z = z > 0.008856 ? Math.pow(z, 1 / 3) : 7.787 * z + 16 / 116;\n    l = 116 * y - 16;\n    a = 500 * (x - y);\n    b = 200 * (y - z);\n    return [l, a, b];\n  }\n\n  function xyz2lch(args) {\n    return lab2lch(xyz2lab(args));\n  }\n\n  function lab2xyz(lab) {\n    var l = lab[0],\n        a = lab[1],\n        b = lab[2],\n        x,\n        y,\n        z,\n        y2;\n\n    if (l <= 8) {\n      y = l * 100 / 903.3;\n      y2 = 7.787 * (y / 100) + 16 / 116;\n    } else {\n      y = 100 * Math.pow((l + 16) / 116, 3);\n      y2 = Math.pow(y / 100, 1 / 3);\n    }\n\n    x = x / 95.047 <= 0.008856 ? x = 95.047 * (a / 500 + y2 - 16 / 116) / 7.787 : 95.047 * Math.pow(a / 500 + y2, 3);\n    z = z / 108.883 <= 0.008859 ? z = 108.883 * (y2 - b / 200 - 16 / 116) / 7.787 : 108.883 * Math.pow(y2 - b / 200, 3);\n    return [x, y, z];\n  }\n\n  function lab2lch(lab) {\n    var l = lab[0],\n        a = lab[1],\n        b = lab[2],\n        hr,\n        h,\n        c;\n    hr = Math.atan2(b, a);\n    h = hr * 360 / 2 / Math.PI;\n\n    if (h < 0) {\n      h += 360;\n    }\n\n    c = Math.sqrt(a * a + b * b);\n    return [l, c, h];\n  }\n\n  function lab2rgb(args) {\n    return xyz2rgb(lab2xyz(args));\n  }\n\n  function lch2lab(lch) {\n    var l = lch[0],\n        c = lch[1],\n        h = lch[2],\n        a,\n        b,\n        hr;\n    hr = h / 360 * 2 * Math.PI;\n    a = c * Math.cos(hr);\n    b = c * Math.sin(hr);\n    return [l, a, b];\n  }\n\n  function lch2xyz(args) {\n    return lab2xyz(lch2lab(args));\n  }\n\n  function lch2rgb(args) {\n    return lab2rgb(lch2lab(args));\n  }\n\n  function keyword2rgb(keyword) {\n    return cssKeywords[keyword];\n  }\n\n  function keyword2hsl(args) {\n    return rgb2hsl(keyword2rgb(args));\n  }\n\n  function keyword2hsv(args) {\n    return rgb2hsv(keyword2rgb(args));\n  }\n\n  function keyword2hwb(args) {\n    return rgb2hwb(keyword2rgb(args));\n  }\n\n  function keyword2cmyk(args) {\n    return rgb2cmyk(keyword2rgb(args));\n  }\n\n  function keyword2lab(args) {\n    return rgb2lab(keyword2rgb(args));\n  }\n\n  function keyword2xyz(args) {\n    return rgb2xyz(keyword2rgb(args));\n  }\n\n  var cssKeywords = {\n    aliceblue: [240, 248, 255],\n    antiquewhite: [250, 235, 215],\n    aqua: [0, 255, 255],\n    aquamarine: [127, 255, 212],\n    azure: [240, 255, 255],\n    beige: [245, 245, 220],\n    bisque: [255, 228, 196],\n    black: [0, 0, 0],\n    blanchedalmond: [255, 235, 205],\n    blue: [0, 0, 255],\n    blueviolet: [138, 43, 226],\n    brown: [165, 42, 42],\n    burlywood: [222, 184, 135],\n    cadetblue: [95, 158, 160],\n    chartreuse: [127, 255, 0],\n    chocolate: [210, 105, 30],\n    coral: [255, 127, 80],\n    cornflowerblue: [100, 149, 237],\n    cornsilk: [255, 248, 220],\n    crimson: [220, 20, 60],\n    cyan: [0, 255, 255],\n    darkblue: [0, 0, 139],\n    darkcyan: [0, 139, 139],\n    darkgoldenrod: [184, 134, 11],\n    darkgray: [169, 169, 169],\n    darkgreen: [0, 100, 0],\n    darkgrey: [169, 169, 169],\n    darkkhaki: [189, 183, 107],\n    darkmagenta: [139, 0, 139],\n    darkolivegreen: [85, 107, 47],\n    darkorange: [255, 140, 0],\n    darkorchid: [153, 50, 204],\n    darkred: [139, 0, 0],\n    darksalmon: [233, 150, 122],\n    darkseagreen: [143, 188, 143],\n    darkslateblue: [72, 61, 139],\n    darkslategray: [47, 79, 79],\n    darkslategrey: [47, 79, 79],\n    darkturquoise: [0, 206, 209],\n    darkviolet: [148, 0, 211],\n    deeppink: [255, 20, 147],\n    deepskyblue: [0, 191, 255],\n    dimgray: [105, 105, 105],\n    dimgrey: [105, 105, 105],\n    dodgerblue: [30, 144, 255],\n    firebrick: [178, 34, 34],\n    floralwhite: [255, 250, 240],\n    forestgreen: [34, 139, 34],\n    fuchsia: [255, 0, 255],\n    gainsboro: [220, 220, 220],\n    ghostwhite: [248, 248, 255],\n    gold: [255, 215, 0],\n    goldenrod: [218, 165, 32],\n    gray: [128, 128, 128],\n    green: [0, 128, 0],\n    greenyellow: [173, 255, 47],\n    grey: [128, 128, 128],\n    honeydew: [240, 255, 240],\n    hotpink: [255, 105, 180],\n    indianred: [205, 92, 92],\n    indigo: [75, 0, 130],\n    ivory: [255, 255, 240],\n    khaki: [240, 230, 140],\n    lavender: [230, 230, 250],\n    lavenderblush: [255, 240, 245],\n    lawngreen: [124, 252, 0],\n    lemonchiffon: [255, 250, 205],\n    lightblue: [173, 216, 230],\n    lightcoral: [240, 128, 128],\n    lightcyan: [224, 255, 255],\n    lightgoldenrodyellow: [250, 250, 210],\n    lightgray: [211, 211, 211],\n    lightgreen: [144, 238, 144],\n    lightgrey: [211, 211, 211],\n    lightpink: [255, 182, 193],\n    lightsalmon: [255, 160, 122],\n    lightseagreen: [32, 178, 170],\n    lightskyblue: [135, 206, 250],\n    lightslategray: [119, 136, 153],\n    lightslategrey: [119, 136, 153],\n    lightsteelblue: [176, 196, 222],\n    lightyellow: [255, 255, 224],\n    lime: [0, 255, 0],\n    limegreen: [50, 205, 50],\n    linen: [250, 240, 230],\n    magenta: [255, 0, 255],\n    maroon: [128, 0, 0],\n    mediumaquamarine: [102, 205, 170],\n    mediumblue: [0, 0, 205],\n    mediumorchid: [186, 85, 211],\n    mediumpurple: [147, 112, 219],\n    mediumseagreen: [60, 179, 113],\n    mediumslateblue: [123, 104, 238],\n    mediumspringgreen: [0, 250, 154],\n    mediumturquoise: [72, 209, 204],\n    mediumvioletred: [199, 21, 133],\n    midnightblue: [25, 25, 112],\n    mintcream: [245, 255, 250],\n    mistyrose: [255, 228, 225],\n    moccasin: [255, 228, 181],\n    navajowhite: [255, 222, 173],\n    navy: [0, 0, 128],\n    oldlace: [253, 245, 230],\n    olive: [128, 128, 0],\n    olivedrab: [107, 142, 35],\n    orange: [255, 165, 0],\n    orangered: [255, 69, 0],\n    orchid: [218, 112, 214],\n    palegoldenrod: [238, 232, 170],\n    palegreen: [152, 251, 152],\n    paleturquoise: [175, 238, 238],\n    palevioletred: [219, 112, 147],\n    papayawhip: [255, 239, 213],\n    peachpuff: [255, 218, 185],\n    peru: [205, 133, 63],\n    pink: [255, 192, 203],\n    plum: [221, 160, 221],\n    powderblue: [176, 224, 230],\n    purple: [128, 0, 128],\n    rebeccapurple: [102, 51, 153],\n    red: [255, 0, 0],\n    rosybrown: [188, 143, 143],\n    royalblue: [65, 105, 225],\n    saddlebrown: [139, 69, 19],\n    salmon: [250, 128, 114],\n    sandybrown: [244, 164, 96],\n    seagreen: [46, 139, 87],\n    seashell: [255, 245, 238],\n    sienna: [160, 82, 45],\n    silver: [192, 192, 192],\n    skyblue: [135, 206, 235],\n    slateblue: [106, 90, 205],\n    slategray: [112, 128, 144],\n    slategrey: [112, 128, 144],\n    snow: [255, 250, 250],\n    springgreen: [0, 255, 127],\n    steelblue: [70, 130, 180],\n    tan: [210, 180, 140],\n    teal: [0, 128, 128],\n    thistle: [216, 191, 216],\n    tomato: [255, 99, 71],\n    turquoise: [64, 224, 208],\n    violet: [238, 130, 238],\n    wheat: [245, 222, 179],\n    white: [255, 255, 255],\n    whitesmoke: [245, 245, 245],\n    yellow: [255, 255, 0],\n    yellowgreen: [154, 205, 50]\n  };\n  var reverseKeywords = {};\n\n  for (var key in cssKeywords) {\n    reverseKeywords[JSON.stringify(cssKeywords[key])] = key;\n  }\n\n  var convert = function convert() {\n    return new Converter();\n  };\n\n  for (var func in conversions) {\n    // export Raw versions\n    convert[func + \"Raw\"] = function (func) {\n      // accept array or plain args\n      return function (arg) {\n        if (typeof arg == \"number\") arg = Array.prototype.slice.call(arguments);\n        return conversions[func](arg);\n      };\n    }(func);\n\n    var pair = /(\\w+)2(\\w+)/.exec(func),\n        from = pair[1],\n        to = pair[2]; // export rgb2hsl and [\"rgb\"][\"hsl\"]\n\n    convert[from] = convert[from] || {};\n\n    convert[from][to] = convert[func] = function (func) {\n      return function (arg) {\n        if (typeof arg == \"number\") arg = Array.prototype.slice.call(arguments);\n        var val = conversions[func](arg);\n        if (typeof val == \"string\" || val === undefined) return val; // keyword\n\n        for (var i = 0; i < val.length; i++) {\n          val[i] = Math.round(val[i]);\n        }\n\n        return val;\n      };\n    }(func);\n  }\n  /* Converter does lazy conversion and caching */\n\n\n  var Converter = function Converter() {\n    this.convs = {};\n  };\n  /* Either get the values for a space or\n    set the values for a space, depending on args */\n\n\n  Converter.prototype.routeSpace = function (space, args) {\n    var values = args[0];\n\n    if (values === undefined) {\n      // color.rgb()\n      return this.getValues(space);\n    } // color.rgb(10, 10, 10)\n\n\n    if (typeof values == \"number\") {\n      values = Array.prototype.slice.call(args);\n    }\n\n    return this.setValues(space, values);\n  };\n  /* Set the values for a space, invalidating cache */\n\n\n  Converter.prototype.setValues = function (space, values) {\n    this.space = space;\n    this.convs = {};\n    this.convs[space] = values;\n    return this;\n  };\n  /* Get the values for a space. If there's already\n    a conversion for the space, fetch it, otherwise\n    compute it */\n\n\n  Converter.prototype.getValues = function (space) {\n    var vals = this.convs[space];\n\n    if (!vals) {\n      var fspace = this.space,\n          from = this.convs[fspace];\n      vals = convert[fspace][space](from);\n      this.convs[space] = vals;\n    }\n\n    return vals;\n  };\n\n  [\"rgb\", \"hsl\", \"hsv\", \"cmyk\", \"keyword\"].forEach(function (space) {\n    Converter.prototype[space] = function (vals) {\n      return this.routeSpace(space, arguments);\n    };\n  });\n  var colorConvert = convert;\n  var colorName = {\n    \"aliceblue\": [240, 248, 255],\n    \"antiquewhite\": [250, 235, 215],\n    \"aqua\": [0, 255, 255],\n    \"aquamarine\": [127, 255, 212],\n    \"azure\": [240, 255, 255],\n    \"beige\": [245, 245, 220],\n    \"bisque\": [255, 228, 196],\n    \"black\": [0, 0, 0],\n    \"blanchedalmond\": [255, 235, 205],\n    \"blue\": [0, 0, 255],\n    \"blueviolet\": [138, 43, 226],\n    \"brown\": [165, 42, 42],\n    \"burlywood\": [222, 184, 135],\n    \"cadetblue\": [95, 158, 160],\n    \"chartreuse\": [127, 255, 0],\n    \"chocolate\": [210, 105, 30],\n    \"coral\": [255, 127, 80],\n    \"cornflowerblue\": [100, 149, 237],\n    \"cornsilk\": [255, 248, 220],\n    \"crimson\": [220, 20, 60],\n    \"cyan\": [0, 255, 255],\n    \"darkblue\": [0, 0, 139],\n    \"darkcyan\": [0, 139, 139],\n    \"darkgoldenrod\": [184, 134, 11],\n    \"darkgray\": [169, 169, 169],\n    \"darkgreen\": [0, 100, 0],\n    \"darkgrey\": [169, 169, 169],\n    \"darkkhaki\": [189, 183, 107],\n    \"darkmagenta\": [139, 0, 139],\n    \"darkolivegreen\": [85, 107, 47],\n    \"darkorange\": [255, 140, 0],\n    \"darkorchid\": [153, 50, 204],\n    \"darkred\": [139, 0, 0],\n    \"darksalmon\": [233, 150, 122],\n    \"darkseagreen\": [143, 188, 143],\n    \"darkslateblue\": [72, 61, 139],\n    \"darkslategray\": [47, 79, 79],\n    \"darkslategrey\": [47, 79, 79],\n    \"darkturquoise\": [0, 206, 209],\n    \"darkviolet\": [148, 0, 211],\n    \"deeppink\": [255, 20, 147],\n    \"deepskyblue\": [0, 191, 255],\n    \"dimgray\": [105, 105, 105],\n    \"dimgrey\": [105, 105, 105],\n    \"dodgerblue\": [30, 144, 255],\n    \"firebrick\": [178, 34, 34],\n    \"floralwhite\": [255, 250, 240],\n    \"forestgreen\": [34, 139, 34],\n    \"fuchsia\": [255, 0, 255],\n    \"gainsboro\": [220, 220, 220],\n    \"ghostwhite\": [248, 248, 255],\n    \"gold\": [255, 215, 0],\n    \"goldenrod\": [218, 165, 32],\n    \"gray\": [128, 128, 128],\n    \"green\": [0, 128, 0],\n    \"greenyellow\": [173, 255, 47],\n    \"grey\": [128, 128, 128],\n    \"honeydew\": [240, 255, 240],\n    \"hotpink\": [255, 105, 180],\n    \"indianred\": [205, 92, 92],\n    \"indigo\": [75, 0, 130],\n    \"ivory\": [255, 255, 240],\n    \"khaki\": [240, 230, 140],\n    \"lavender\": [230, 230, 250],\n    \"lavenderblush\": [255, 240, 245],\n    \"lawngreen\": [124, 252, 0],\n    \"lemonchiffon\": [255, 250, 205],\n    \"lightblue\": [173, 216, 230],\n    \"lightcoral\": [240, 128, 128],\n    \"lightcyan\": [224, 255, 255],\n    \"lightgoldenrodyellow\": [250, 250, 210],\n    \"lightgray\": [211, 211, 211],\n    \"lightgreen\": [144, 238, 144],\n    \"lightgrey\": [211, 211, 211],\n    \"lightpink\": [255, 182, 193],\n    \"lightsalmon\": [255, 160, 122],\n    \"lightseagreen\": [32, 178, 170],\n    \"lightskyblue\": [135, 206, 250],\n    \"lightslategray\": [119, 136, 153],\n    \"lightslategrey\": [119, 136, 153],\n    \"lightsteelblue\": [176, 196, 222],\n    \"lightyellow\": [255, 255, 224],\n    \"lime\": [0, 255, 0],\n    \"limegreen\": [50, 205, 50],\n    \"linen\": [250, 240, 230],\n    \"magenta\": [255, 0, 255],\n    \"maroon\": [128, 0, 0],\n    \"mediumaquamarine\": [102, 205, 170],\n    \"mediumblue\": [0, 0, 205],\n    \"mediumorchid\": [186, 85, 211],\n    \"mediumpurple\": [147, 112, 219],\n    \"mediumseagreen\": [60, 179, 113],\n    \"mediumslateblue\": [123, 104, 238],\n    \"mediumspringgreen\": [0, 250, 154],\n    \"mediumturquoise\": [72, 209, 204],\n    \"mediumvioletred\": [199, 21, 133],\n    \"midnightblue\": [25, 25, 112],\n    \"mintcream\": [245, 255, 250],\n    \"mistyrose\": [255, 228, 225],\n    \"moccasin\": [255, 228, 181],\n    \"navajowhite\": [255, 222, 173],\n    \"navy\": [0, 0, 128],\n    \"oldlace\": [253, 245, 230],\n    \"olive\": [128, 128, 0],\n    \"olivedrab\": [107, 142, 35],\n    \"orange\": [255, 165, 0],\n    \"orangered\": [255, 69, 0],\n    \"orchid\": [218, 112, 214],\n    \"palegoldenrod\": [238, 232, 170],\n    \"palegreen\": [152, 251, 152],\n    \"paleturquoise\": [175, 238, 238],\n    \"palevioletred\": [219, 112, 147],\n    \"papayawhip\": [255, 239, 213],\n    \"peachpuff\": [255, 218, 185],\n    \"peru\": [205, 133, 63],\n    \"pink\": [255, 192, 203],\n    \"plum\": [221, 160, 221],\n    \"powderblue\": [176, 224, 230],\n    \"purple\": [128, 0, 128],\n    \"rebeccapurple\": [102, 51, 153],\n    \"red\": [255, 0, 0],\n    \"rosybrown\": [188, 143, 143],\n    \"royalblue\": [65, 105, 225],\n    \"saddlebrown\": [139, 69, 19],\n    \"salmon\": [250, 128, 114],\n    \"sandybrown\": [244, 164, 96],\n    \"seagreen\": [46, 139, 87],\n    \"seashell\": [255, 245, 238],\n    \"sienna\": [160, 82, 45],\n    \"silver\": [192, 192, 192],\n    \"skyblue\": [135, 206, 235],\n    \"slateblue\": [106, 90, 205],\n    \"slategray\": [112, 128, 144],\n    \"slategrey\": [112, 128, 144],\n    \"snow\": [255, 250, 250],\n    \"springgreen\": [0, 255, 127],\n    \"steelblue\": [70, 130, 180],\n    \"tan\": [210, 180, 140],\n    \"teal\": [0, 128, 128],\n    \"thistle\": [216, 191, 216],\n    \"tomato\": [255, 99, 71],\n    \"turquoise\": [64, 224, 208],\n    \"violet\": [238, 130, 238],\n    \"wheat\": [245, 222, 179],\n    \"white\": [255, 255, 255],\n    \"whitesmoke\": [245, 245, 245],\n    \"yellow\": [255, 255, 0],\n    \"yellowgreen\": [154, 205, 50]\n  };\n  /* MIT license */\n\n  var colorString = {\n    getRgba: getRgba,\n    getHsla: getHsla,\n    getRgb: getRgb,\n    getHsl: getHsl,\n    getHwb: getHwb,\n    getAlpha: getAlpha,\n    hexString: hexString,\n    rgbString: rgbString,\n    rgbaString: rgbaString,\n    percentString: percentString,\n    percentaString: percentaString,\n    hslString: hslString,\n    hslaString: hslaString,\n    hwbString: hwbString,\n    keyword: keyword\n  };\n\n  function getRgba(string) {\n    if (!string) {\n      return;\n    }\n\n    var abbr = /^#([a-fA-F0-9]{3,4})$/i,\n        hex = /^#([a-fA-F0-9]{6}([a-fA-F0-9]{2})?)$/i,\n        rgba = /^rgba?\\(\\s*([+-]?\\d+)\\s*,\\s*([+-]?\\d+)\\s*,\\s*([+-]?\\d+)\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)$/i,\n        per = /^rgba?\\(\\s*([+-]?[\\d\\.]+)\\%\\s*,\\s*([+-]?[\\d\\.]+)\\%\\s*,\\s*([+-]?[\\d\\.]+)\\%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)$/i,\n        keyword = /(\\w+)/;\n    var rgb = [0, 0, 0],\n        a = 1,\n        match = string.match(abbr),\n        hexAlpha = \"\";\n\n    if (match) {\n      match = match[1];\n      hexAlpha = match[3];\n\n      for (var i = 0; i < rgb.length; i++) {\n        rgb[i] = parseInt(match[i] + match[i], 16);\n      }\n\n      if (hexAlpha) {\n        a = Math.round(parseInt(hexAlpha + hexAlpha, 16) / 255 * 100) / 100;\n      }\n    } else if (match = string.match(hex)) {\n      hexAlpha = match[2];\n      match = match[1];\n\n      for (var i = 0; i < rgb.length; i++) {\n        rgb[i] = parseInt(match.slice(i * 2, i * 2 + 2), 16);\n      }\n\n      if (hexAlpha) {\n        a = Math.round(parseInt(hexAlpha, 16) / 255 * 100) / 100;\n      }\n    } else if (match = string.match(rgba)) {\n      for (var i = 0; i < rgb.length; i++) {\n        rgb[i] = parseInt(match[i + 1]);\n      }\n\n      a = parseFloat(match[4]);\n    } else if (match = string.match(per)) {\n      for (var i = 0; i < rgb.length; i++) {\n        rgb[i] = Math.round(parseFloat(match[i + 1]) * 2.55);\n      }\n\n      a = parseFloat(match[4]);\n    } else if (match = string.match(keyword)) {\n      if (match[1] == \"transparent\") {\n        return [0, 0, 0, 0];\n      }\n\n      rgb = colorName[match[1]];\n\n      if (!rgb) {\n        return;\n      }\n    }\n\n    for (var i = 0; i < rgb.length; i++) {\n      rgb[i] = scale(rgb[i], 0, 255);\n    }\n\n    if (!a && a != 0) {\n      a = 1;\n    } else {\n      a = scale(a, 0, 1);\n    }\n\n    rgb[3] = a;\n    return rgb;\n  }\n\n  function getHsla(string) {\n    if (!string) {\n      return;\n    }\n\n    var hsl = /^hsla?\\(\\s*([+-]?\\d+)(?:deg)?\\s*,\\s*([+-]?[\\d\\.]+)%\\s*,\\s*([+-]?[\\d\\.]+)%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)/;\n    var match = string.match(hsl);\n\n    if (match) {\n      var alpha = parseFloat(match[4]);\n      var h = scale(parseInt(match[1]), 0, 360),\n          s = scale(parseFloat(match[2]), 0, 100),\n          l = scale(parseFloat(match[3]), 0, 100),\n          a = scale(isNaN(alpha) ? 1 : alpha, 0, 1);\n      return [h, s, l, a];\n    }\n  }\n\n  function getHwb(string) {\n    if (!string) {\n      return;\n    }\n\n    var hwb = /^hwb\\(\\s*([+-]?\\d+)(?:deg)?\\s*,\\s*([+-]?[\\d\\.]+)%\\s*,\\s*([+-]?[\\d\\.]+)%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)/;\n    var match = string.match(hwb);\n\n    if (match) {\n      var alpha = parseFloat(match[4]);\n      var h = scale(parseInt(match[1]), 0, 360),\n          w = scale(parseFloat(match[2]), 0, 100),\n          b = scale(parseFloat(match[3]), 0, 100),\n          a = scale(isNaN(alpha) ? 1 : alpha, 0, 1);\n      return [h, w, b, a];\n    }\n  }\n\n  function getRgb(string) {\n    var rgba = getRgba(string);\n    return rgba && rgba.slice(0, 3);\n  }\n\n  function getHsl(string) {\n    var hsla = getHsla(string);\n    return hsla && hsla.slice(0, 3);\n  }\n\n  function getAlpha(string) {\n    var vals = getRgba(string);\n\n    if (vals) {\n      return vals[3];\n    } else if (vals = getHsla(string)) {\n      return vals[3];\n    } else if (vals = getHwb(string)) {\n      return vals[3];\n    }\n  } // generators\n\n\n  function hexString(rgba, a) {\n    var a = a !== undefined && rgba.length === 3 ? a : rgba[3];\n    return \"#\" + hexDouble(rgba[0]) + hexDouble(rgba[1]) + hexDouble(rgba[2]) + (a >= 0 && a < 1 ? hexDouble(Math.round(a * 255)) : \"\");\n  }\n\n  function rgbString(rgba, alpha) {\n    if (alpha < 1 || rgba[3] && rgba[3] < 1) {\n      return rgbaString(rgba, alpha);\n    }\n\n    return \"rgb(\" + rgba[0] + \", \" + rgba[1] + \", \" + rgba[2] + \")\";\n  }\n\n  function rgbaString(rgba, alpha) {\n    if (alpha === undefined) {\n      alpha = rgba[3] !== undefined ? rgba[3] : 1;\n    }\n\n    return \"rgba(\" + rgba[0] + \", \" + rgba[1] + \", \" + rgba[2] + \", \" + alpha + \")\";\n  }\n\n  function percentString(rgba, alpha) {\n    if (alpha < 1 || rgba[3] && rgba[3] < 1) {\n      return percentaString(rgba, alpha);\n    }\n\n    var r = Math.round(rgba[0] / 255 * 100),\n        g = Math.round(rgba[1] / 255 * 100),\n        b = Math.round(rgba[2] / 255 * 100);\n    return \"rgb(\" + r + \"%, \" + g + \"%, \" + b + \"%)\";\n  }\n\n  function percentaString(rgba, alpha) {\n    var r = Math.round(rgba[0] / 255 * 100),\n        g = Math.round(rgba[1] / 255 * 100),\n        b = Math.round(rgba[2] / 255 * 100);\n    return \"rgba(\" + r + \"%, \" + g + \"%, \" + b + \"%, \" + (alpha || rgba[3] || 1) + \")\";\n  }\n\n  function hslString(hsla, alpha) {\n    if (alpha < 1 || hsla[3] && hsla[3] < 1) {\n      return hslaString(hsla, alpha);\n    }\n\n    return \"hsl(\" + hsla[0] + \", \" + hsla[1] + \"%, \" + hsla[2] + \"%)\";\n  }\n\n  function hslaString(hsla, alpha) {\n    if (alpha === undefined) {\n      alpha = hsla[3] !== undefined ? hsla[3] : 1;\n    }\n\n    return \"hsla(\" + hsla[0] + \", \" + hsla[1] + \"%, \" + hsla[2] + \"%, \" + alpha + \")\";\n  } // hwb is a bit different than rgb(a) & hsl(a) since there is no alpha specific syntax\n  // (hwb have alpha optional & 1 is default value)\n\n\n  function hwbString(hwb, alpha) {\n    if (alpha === undefined) {\n      alpha = hwb[3] !== undefined ? hwb[3] : 1;\n    }\n\n    return \"hwb(\" + hwb[0] + \", \" + hwb[1] + \"%, \" + hwb[2] + \"%\" + (alpha !== undefined && alpha !== 1 ? \", \" + alpha : \"\") + \")\";\n  }\n\n  function keyword(rgb) {\n    return reverseNames[rgb.slice(0, 3)];\n  } // helpers\n\n\n  function scale(num, min, max) {\n    return Math.min(Math.max(min, num), max);\n  }\n\n  function hexDouble(num) {\n    var str = num.toString(16).toUpperCase();\n    return str.length < 2 ? \"0\" + str : str;\n  } //create a list of reverse color names\n\n\n  var reverseNames = {};\n\n  for (var name in colorName) {\n    reverseNames[colorName[name]] = name;\n  }\n  /* MIT license */\n\n\n  var Color = function Color(obj) {\n    if (obj instanceof Color) {\n      return obj;\n    }\n\n    if (!(this instanceof Color)) {\n      return new Color(obj);\n    }\n\n    this.valid = false;\n    this.values = {\n      rgb: [0, 0, 0],\n      hsl: [0, 0, 0],\n      hsv: [0, 0, 0],\n      hwb: [0, 0, 0],\n      cmyk: [0, 0, 0, 0],\n      alpha: 1\n    }; // parse Color() argument\n\n    var vals;\n\n    if (typeof obj === 'string') {\n      vals = colorString.getRgba(obj);\n\n      if (vals) {\n        this.setValues('rgb', vals);\n      } else if (vals = colorString.getHsla(obj)) {\n        this.setValues('hsl', vals);\n      } else if (vals = colorString.getHwb(obj)) {\n        this.setValues('hwb', vals);\n      }\n    } else if (typeof obj === 'object') {\n      vals = obj;\n\n      if (vals.r !== undefined || vals.red !== undefined) {\n        this.setValues('rgb', vals);\n      } else if (vals.l !== undefined || vals.lightness !== undefined) {\n        this.setValues('hsl', vals);\n      } else if (vals.v !== undefined || vals.value !== undefined) {\n        this.setValues('hsv', vals);\n      } else if (vals.w !== undefined || vals.whiteness !== undefined) {\n        this.setValues('hwb', vals);\n      } else if (vals.c !== undefined || vals.cyan !== undefined) {\n        this.setValues('cmyk', vals);\n      }\n    }\n  };\n\n  Color.prototype = {\n    isValid: function isValid() {\n      return this.valid;\n    },\n    rgb: function rgb() {\n      return this.setSpace('rgb', arguments);\n    },\n    hsl: function hsl() {\n      return this.setSpace('hsl', arguments);\n    },\n    hsv: function hsv() {\n      return this.setSpace('hsv', arguments);\n    },\n    hwb: function hwb() {\n      return this.setSpace('hwb', arguments);\n    },\n    cmyk: function cmyk() {\n      return this.setSpace('cmyk', arguments);\n    },\n    rgbArray: function rgbArray() {\n      return this.values.rgb;\n    },\n    hslArray: function hslArray() {\n      return this.values.hsl;\n    },\n    hsvArray: function hsvArray() {\n      return this.values.hsv;\n    },\n    hwbArray: function hwbArray() {\n      var values = this.values;\n\n      if (values.alpha !== 1) {\n        return values.hwb.concat([values.alpha]);\n      }\n\n      return values.hwb;\n    },\n    cmykArray: function cmykArray() {\n      return this.values.cmyk;\n    },\n    rgbaArray: function rgbaArray() {\n      var values = this.values;\n      return values.rgb.concat([values.alpha]);\n    },\n    hslaArray: function hslaArray() {\n      var values = this.values;\n      return values.hsl.concat([values.alpha]);\n    },\n    alpha: function alpha(val) {\n      if (val === undefined) {\n        return this.values.alpha;\n      }\n\n      this.setValues('alpha', val);\n      return this;\n    },\n    red: function red(val) {\n      return this.setChannel('rgb', 0, val);\n    },\n    green: function green(val) {\n      return this.setChannel('rgb', 1, val);\n    },\n    blue: function blue(val) {\n      return this.setChannel('rgb', 2, val);\n    },\n    hue: function hue(val) {\n      if (val) {\n        val %= 360;\n        val = val < 0 ? 360 + val : val;\n      }\n\n      return this.setChannel('hsl', 0, val);\n    },\n    saturation: function saturation(val) {\n      return this.setChannel('hsl', 1, val);\n    },\n    lightness: function lightness(val) {\n      return this.setChannel('hsl', 2, val);\n    },\n    saturationv: function saturationv(val) {\n      return this.setChannel('hsv', 1, val);\n    },\n    whiteness: function whiteness(val) {\n      return this.setChannel('hwb', 1, val);\n    },\n    blackness: function blackness(val) {\n      return this.setChannel('hwb', 2, val);\n    },\n    value: function value(val) {\n      return this.setChannel('hsv', 2, val);\n    },\n    cyan: function cyan(val) {\n      return this.setChannel('cmyk', 0, val);\n    },\n    magenta: function magenta(val) {\n      return this.setChannel('cmyk', 1, val);\n    },\n    yellow: function yellow(val) {\n      return this.setChannel('cmyk', 2, val);\n    },\n    black: function black(val) {\n      return this.setChannel('cmyk', 3, val);\n    },\n    hexString: function hexString() {\n      return colorString.hexString(this.values.rgb);\n    },\n    rgbString: function rgbString() {\n      return colorString.rgbString(this.values.rgb, this.values.alpha);\n    },\n    rgbaString: function rgbaString() {\n      return colorString.rgbaString(this.values.rgb, this.values.alpha);\n    },\n    percentString: function percentString() {\n      return colorString.percentString(this.values.rgb, this.values.alpha);\n    },\n    hslString: function hslString() {\n      return colorString.hslString(this.values.hsl, this.values.alpha);\n    },\n    hslaString: function hslaString() {\n      return colorString.hslaString(this.values.hsl, this.values.alpha);\n    },\n    hwbString: function hwbString() {\n      return colorString.hwbString(this.values.hwb, this.values.alpha);\n    },\n    keyword: function keyword() {\n      return colorString.keyword(this.values.rgb, this.values.alpha);\n    },\n    rgbNumber: function rgbNumber() {\n      var rgb = this.values.rgb;\n      return rgb[0] << 16 | rgb[1] << 8 | rgb[2];\n    },\n    luminosity: function luminosity() {\n      // http://www.w3.org/TR/WCAG20/#relativeluminancedef\n      var rgb = this.values.rgb;\n      var lum = [];\n\n      for (var i = 0; i < rgb.length; i++) {\n        var chan = rgb[i] / 255;\n        lum[i] = chan <= 0.03928 ? chan / 12.92 : Math.pow((chan + 0.055) / 1.055, 2.4);\n      }\n\n      return 0.2126 * lum[0] + 0.7152 * lum[1] + 0.0722 * lum[2];\n    },\n    contrast: function contrast(color2) {\n      // http://www.w3.org/TR/WCAG20/#contrast-ratiodef\n      var lum1 = this.luminosity();\n      var lum2 = color2.luminosity();\n\n      if (lum1 > lum2) {\n        return (lum1 + 0.05) / (lum2 + 0.05);\n      }\n\n      return (lum2 + 0.05) / (lum1 + 0.05);\n    },\n    level: function level(color2) {\n      var contrastRatio = this.contrast(color2);\n\n      if (contrastRatio >= 7.1) {\n        return 'AAA';\n      }\n\n      return contrastRatio >= 4.5 ? 'AA' : '';\n    },\n    dark: function dark() {\n      // YIQ equation from http://24ways.org/2010/calculating-color-contrast\n      var rgb = this.values.rgb;\n      var yiq = (rgb[0] * 299 + rgb[1] * 587 + rgb[2] * 114) / 1000;\n      return yiq < 128;\n    },\n    light: function light() {\n      return !this.dark();\n    },\n    negate: function negate() {\n      var rgb = [];\n\n      for (var i = 0; i < 3; i++) {\n        rgb[i] = 255 - this.values.rgb[i];\n      }\n\n      this.setValues('rgb', rgb);\n      return this;\n    },\n    lighten: function lighten(ratio) {\n      var hsl = this.values.hsl;\n      hsl[2] += hsl[2] * ratio;\n      this.setValues('hsl', hsl);\n      return this;\n    },\n    darken: function darken(ratio) {\n      var hsl = this.values.hsl;\n      hsl[2] -= hsl[2] * ratio;\n      this.setValues('hsl', hsl);\n      return this;\n    },\n    saturate: function saturate(ratio) {\n      var hsl = this.values.hsl;\n      hsl[1] += hsl[1] * ratio;\n      this.setValues('hsl', hsl);\n      return this;\n    },\n    desaturate: function desaturate(ratio) {\n      var hsl = this.values.hsl;\n      hsl[1] -= hsl[1] * ratio;\n      this.setValues('hsl', hsl);\n      return this;\n    },\n    whiten: function whiten(ratio) {\n      var hwb = this.values.hwb;\n      hwb[1] += hwb[1] * ratio;\n      this.setValues('hwb', hwb);\n      return this;\n    },\n    blacken: function blacken(ratio) {\n      var hwb = this.values.hwb;\n      hwb[2] += hwb[2] * ratio;\n      this.setValues('hwb', hwb);\n      return this;\n    },\n    greyscale: function greyscale() {\n      var rgb = this.values.rgb; // http://en.wikipedia.org/wiki/Grayscale#Converting_color_to_grayscale\n\n      var val = rgb[0] * 0.3 + rgb[1] * 0.59 + rgb[2] * 0.11;\n      this.setValues('rgb', [val, val, val]);\n      return this;\n    },\n    clearer: function clearer(ratio) {\n      var alpha = this.values.alpha;\n      this.setValues('alpha', alpha - alpha * ratio);\n      return this;\n    },\n    opaquer: function opaquer(ratio) {\n      var alpha = this.values.alpha;\n      this.setValues('alpha', alpha + alpha * ratio);\n      return this;\n    },\n    rotate: function rotate(degrees) {\n      var hsl = this.values.hsl;\n      var hue = (hsl[0] + degrees) % 360;\n      hsl[0] = hue < 0 ? 360 + hue : hue;\n      this.setValues('hsl', hsl);\n      return this;\n    },\n\n    /**\n     * Ported from sass implementation in C\n     * https://github.com/sass/libsass/blob/0e6b4a2850092356aa3ece07c6b249f0221caced/functions.cpp#L209\n     */\n    mix: function mix(mixinColor, weight) {\n      var color1 = this;\n      var color2 = mixinColor;\n      var p = weight === undefined ? 0.5 : weight;\n      var w = 2 * p - 1;\n      var a = color1.alpha() - color2.alpha();\n      var w1 = ((w * a === -1 ? w : (w + a) / (1 + w * a)) + 1) / 2.0;\n      var w2 = 1 - w1;\n      return this.rgb(w1 * color1.red() + w2 * color2.red(), w1 * color1.green() + w2 * color2.green(), w1 * color1.blue() + w2 * color2.blue()).alpha(color1.alpha() * p + color2.alpha() * (1 - p));\n    },\n    toJSON: function toJSON() {\n      return this.rgb();\n    },\n    clone: function clone() {\n      // NOTE(SB): using node-clone creates a dependency to Buffer when using browserify,\n      // making the final build way to big to embed in Chart.js. So let's do it manually,\n      // assuming that values to clone are 1 dimension arrays containing only numbers,\n      // except 'alpha' which is a number.\n      var result = new Color();\n      var source = this.values;\n      var target = result.values;\n      var value, type;\n\n      for (var prop in source) {\n        if (source.hasOwnProperty(prop)) {\n          value = source[prop];\n          type = {}.toString.call(value);\n\n          if (type === '[object Array]') {\n            target[prop] = value.slice(0);\n          } else if (type === '[object Number]') {\n            target[prop] = value;\n          } else {\n            console.error('unexpected color value:', value);\n          }\n        }\n      }\n\n      return result;\n    }\n  };\n  Color.prototype.spaces = {\n    rgb: ['red', 'green', 'blue'],\n    hsl: ['hue', 'saturation', 'lightness'],\n    hsv: ['hue', 'saturation', 'value'],\n    hwb: ['hue', 'whiteness', 'blackness'],\n    cmyk: ['cyan', 'magenta', 'yellow', 'black']\n  };\n  Color.prototype.maxes = {\n    rgb: [255, 255, 255],\n    hsl: [360, 100, 100],\n    hsv: [360, 100, 100],\n    hwb: [360, 100, 100],\n    cmyk: [100, 100, 100, 100]\n  };\n\n  Color.prototype.getValues = function (space) {\n    var values = this.values;\n    var vals = {};\n\n    for (var i = 0; i < space.length; i++) {\n      vals[space.charAt(i)] = values[space][i];\n    }\n\n    if (values.alpha !== 1) {\n      vals.a = values.alpha;\n    } // {r: 255, g: 255, b: 255, a: 0.4}\n\n\n    return vals;\n  };\n\n  Color.prototype.setValues = function (space, vals) {\n    var values = this.values;\n    var spaces = this.spaces;\n    var maxes = this.maxes;\n    var alpha = 1;\n    var i;\n    this.valid = true;\n\n    if (space === 'alpha') {\n      alpha = vals;\n    } else if (vals.length) {\n      // [10, 10, 10]\n      values[space] = vals.slice(0, space.length);\n      alpha = vals[space.length];\n    } else if (vals[space.charAt(0)] !== undefined) {\n      // {r: 10, g: 10, b: 10}\n      for (i = 0; i < space.length; i++) {\n        values[space][i] = vals[space.charAt(i)];\n      }\n\n      alpha = vals.a;\n    } else if (vals[spaces[space][0]] !== undefined) {\n      // {red: 10, green: 10, blue: 10}\n      var chans = spaces[space];\n\n      for (i = 0; i < space.length; i++) {\n        values[space][i] = vals[chans[i]];\n      }\n\n      alpha = vals.alpha;\n    }\n\n    values.alpha = Math.max(0, Math.min(1, alpha === undefined ? values.alpha : alpha));\n\n    if (space === 'alpha') {\n      return false;\n    }\n\n    var capped; // cap values of the space prior converting all values\n\n    for (i = 0; i < space.length; i++) {\n      capped = Math.max(0, Math.min(maxes[space][i], values[space][i]));\n      values[space][i] = Math.round(capped);\n    } // convert to all the other color spaces\n\n\n    for (var sname in spaces) {\n      if (sname !== space) {\n        values[sname] = colorConvert[space][sname](values[space]);\n      }\n    }\n\n    return true;\n  };\n\n  Color.prototype.setSpace = function (space, args) {\n    var vals = args[0];\n\n    if (vals === undefined) {\n      // color.rgb()\n      return this.getValues(space);\n    } // color.rgb(10, 10, 10)\n\n\n    if (typeof vals === 'number') {\n      vals = Array.prototype.slice.call(args);\n    }\n\n    this.setValues(space, vals);\n    return this;\n  };\n\n  Color.prototype.setChannel = function (space, index, val) {\n    var svalues = this.values[space];\n\n    if (val === undefined) {\n      // color.red()\n      return svalues[index];\n    } else if (val === svalues[index]) {\n      // color.red(color.red())\n      return this;\n    } // color.red(100)\n\n\n    svalues[index] = val;\n    this.setValues(space, svalues);\n    return this;\n  };\n\n  if (typeof window !== 'undefined') {\n    window.Color = Color;\n  }\n\n  var chartjsColor = Color;\n  /**\n   * @namespace Chart.helpers\n   */\n\n  var helpers = {\n    /**\n     * An empty function that can be used, for example, for optional callback.\n     */\n    noop: function noop() {},\n\n    /**\n     * Returns a unique id, sequentially generated from a global variable.\n     * @returns {number}\n     * @function\n     */\n    uid: function () {\n      var id = 0;\n      return function () {\n        return id++;\n      };\n    }(),\n\n    /**\n     * Returns true if `value` is neither null nor undefined, else returns false.\n     * @param {*} value - The value to test.\n     * @returns {boolean}\n     * @since 2.7.0\n     */\n    isNullOrUndef: function isNullOrUndef(value) {\n      return value === null || typeof value === 'undefined';\n    },\n\n    /**\n     * Returns true if `value` is an array (including typed arrays), else returns false.\n     * @param {*} value - The value to test.\n     * @returns {boolean}\n     * @function\n     */\n    isArray: function isArray(value) {\n      if (Array.isArray && Array.isArray(value)) {\n        return true;\n      }\n\n      var type = Object.prototype.toString.call(value);\n\n      if (type.substr(0, 7) === '[object' && type.substr(-6) === 'Array]') {\n        return true;\n      }\n\n      return false;\n    },\n\n    /**\n     * Returns true if `value` is an object (excluding null), else returns false.\n     * @param {*} value - The value to test.\n     * @returns {boolean}\n     * @since 2.7.0\n     */\n    isObject: function isObject(value) {\n      return value !== null && Object.prototype.toString.call(value) === '[object Object]';\n    },\n\n    /**\n     * Returns true if `value` is a finite number, else returns false\n     * @param {*} value  - The value to test.\n     * @returns {boolean}\n     */\n    isFinite: function (_isFinite) {\n      function isFinite(_x) {\n        return _isFinite.apply(this, arguments);\n      }\n\n      isFinite.toString = function () {\n        return _isFinite.toString();\n      };\n\n      return isFinite;\n    }(function (value) {\n      return (typeof value === 'number' || value instanceof Number) && isFinite(value);\n    }),\n\n    /**\n     * Returns `value` if defined, else returns `defaultValue`.\n     * @param {*} value - The value to return if defined.\n     * @param {*} defaultValue - The value to return if `value` is undefined.\n     * @returns {*}\n     */\n    valueOrDefault: function valueOrDefault(value, defaultValue) {\n      return typeof value === 'undefined' ? defaultValue : value;\n    },\n\n    /**\n     * Returns value at the given `index` in array if defined, else returns `defaultValue`.\n     * @param {Array} value - The array to lookup for value at `index`.\n     * @param {number} index - The index in `value` to lookup for value.\n     * @param {*} defaultValue - The value to return if `value[index]` is undefined.\n     * @returns {*}\n     */\n    valueAtIndexOrDefault: function valueAtIndexOrDefault(value, index, defaultValue) {\n      return helpers.valueOrDefault(helpers.isArray(value) ? value[index] : value, defaultValue);\n    },\n\n    /**\n     * Calls `fn` with the given `args` in the scope defined by `thisArg` and returns the\n     * value returned by `fn`. If `fn` is not a function, this method returns undefined.\n     * @param {function} fn - The function to call.\n     * @param {Array|undefined|null} args - The arguments with which `fn` should be called.\n     * @param {object} [thisArg] - The value of `this` provided for the call to `fn`.\n     * @returns {*}\n     */\n    callback: function callback(fn, args, thisArg) {\n      if (fn && typeof fn.call === 'function') {\n        return fn.apply(thisArg, args);\n      }\n    },\n\n    /**\n     * Note(SB) for performance sake, this method should only be used when loopable type\n     * is unknown or in none intensive code (not called often and small loopable). Else\n     * it's preferable to use a regular for() loop and save extra function calls.\n     * @param {object|Array} loopable - The object or array to be iterated.\n     * @param {function} fn - The function to call for each item.\n     * @param {object} [thisArg] - The value of `this` provided for the call to `fn`.\n     * @param {boolean} [reverse] - If true, iterates backward on the loopable.\n     */\n    each: function each(loopable, fn, thisArg, reverse) {\n      var i, len, keys;\n\n      if (helpers.isArray(loopable)) {\n        len = loopable.length;\n\n        if (reverse) {\n          for (i = len - 1; i >= 0; i--) {\n            fn.call(thisArg, loopable[i], i);\n          }\n        } else {\n          for (i = 0; i < len; i++) {\n            fn.call(thisArg, loopable[i], i);\n          }\n        }\n      } else if (helpers.isObject(loopable)) {\n        keys = Object.keys(loopable);\n        len = keys.length;\n\n        for (i = 0; i < len; i++) {\n          fn.call(thisArg, loopable[keys[i]], keys[i]);\n        }\n      }\n    },\n\n    /**\n     * Returns true if the `a0` and `a1` arrays have the same content, else returns false.\n     * @see https://stackoverflow.com/a/14853974\n     * @param {Array} a0 - The array to compare\n     * @param {Array} a1 - The array to compare\n     * @returns {boolean}\n     */\n    arrayEquals: function arrayEquals(a0, a1) {\n      var i, ilen, v0, v1;\n\n      if (!a0 || !a1 || a0.length !== a1.length) {\n        return false;\n      }\n\n      for (i = 0, ilen = a0.length; i < ilen; ++i) {\n        v0 = a0[i];\n        v1 = a1[i];\n\n        if (v0 instanceof Array && v1 instanceof Array) {\n          if (!helpers.arrayEquals(v0, v1)) {\n            return false;\n          }\n        } else if (v0 !== v1) {\n          // NOTE: two different object instances will never be equal: {x:20} != {x:20}\n          return false;\n        }\n      }\n\n      return true;\n    },\n\n    /**\n     * Returns a deep copy of `source` without keeping references on objects and arrays.\n     * @param {*} source - The value to clone.\n     * @returns {*}\n     */\n    clone: function clone(source) {\n      if (helpers.isArray(source)) {\n        return source.map(helpers.clone);\n      }\n\n      if (helpers.isObject(source)) {\n        var target = {};\n        var keys = Object.keys(source);\n        var klen = keys.length;\n        var k = 0;\n\n        for (; k < klen; ++k) {\n          target[keys[k]] = helpers.clone(source[keys[k]]);\n        }\n\n        return target;\n      }\n\n      return source;\n    },\n\n    /**\n     * The default merger when Chart.helpers.merge is called without merger option.\n     * Note(SB): also used by mergeConfig and mergeScaleConfig as fallback.\n     * @private\n     */\n    _merger: function _merger(key, target, source, options) {\n      var tval = target[key];\n      var sval = source[key];\n\n      if (helpers.isObject(tval) && helpers.isObject(sval)) {\n        helpers.merge(tval, sval, options);\n      } else {\n        target[key] = helpers.clone(sval);\n      }\n    },\n\n    /**\n     * Merges source[key] in target[key] only if target[key] is undefined.\n     * @private\n     */\n    _mergerIf: function _mergerIf(key, target, source) {\n      var tval = target[key];\n      var sval = source[key];\n\n      if (helpers.isObject(tval) && helpers.isObject(sval)) {\n        helpers.mergeIf(tval, sval);\n      } else if (!target.hasOwnProperty(key)) {\n        target[key] = helpers.clone(sval);\n      }\n    },\n\n    /**\n     * Recursively deep copies `source` properties into `target` with the given `options`.\n     * IMPORTANT: `target` is not cloned and will be updated with `source` properties.\n     * @param {object} target - The target object in which all sources are merged into.\n     * @param {object|object[]} source - Object(s) to merge into `target`.\n     * @param {object} [options] - Merging options:\n     * @param {function} [options.merger] - The merge method (key, target, source, options)\n     * @returns {object} The `target` object.\n     */\n    merge: function merge(target, source, options) {\n      var sources = helpers.isArray(source) ? source : [source];\n      var ilen = sources.length;\n      var merge, i, keys, klen, k;\n\n      if (!helpers.isObject(target)) {\n        return target;\n      }\n\n      options = options || {};\n      merge = options.merger || helpers._merger;\n\n      for (i = 0; i < ilen; ++i) {\n        source = sources[i];\n\n        if (!helpers.isObject(source)) {\n          continue;\n        }\n\n        keys = Object.keys(source);\n\n        for (k = 0, klen = keys.length; k < klen; ++k) {\n          merge(keys[k], target, source, options);\n        }\n      }\n\n      return target;\n    },\n\n    /**\n     * Recursively deep copies `source` properties into `target` *only* if not defined in target.\n     * IMPORTANT: `target` is not cloned and will be updated with `source` properties.\n     * @param {object} target - The target object in which all sources are merged into.\n     * @param {object|object[]} source - Object(s) to merge into `target`.\n     * @returns {object} The `target` object.\n     */\n    mergeIf: function mergeIf(target, source) {\n      return helpers.merge(target, source, {\n        merger: helpers._mergerIf\n      });\n    },\n\n    /**\n     * Applies the contents of two or more objects together into the first object.\n     * @param {object} target - The target object in which all objects are merged into.\n     * @param {object} arg1 - Object containing additional properties to merge in target.\n     * @param {object} argN - Additional objects containing properties to merge in target.\n     * @returns {object} The `target` object.\n     */\n    extend: function extend(target) {\n      var setFn = function setFn(value, key) {\n        target[key] = value;\n      };\n\n      for (var i = 1, ilen = arguments.length; i < ilen; ++i) {\n        helpers.each(arguments[i], setFn);\n      }\n\n      return target;\n    },\n\n    /**\n     * Basic javascript inheritance based on the model created in Backbone.js\n     */\n    inherits: function inherits(extensions) {\n      var me = this;\n      var ChartElement = extensions && extensions.hasOwnProperty('constructor') ? extensions.constructor : function () {\n        return me.apply(this, arguments);\n      };\n\n      var Surrogate = function Surrogate() {\n        this.constructor = ChartElement;\n      };\n\n      Surrogate.prototype = me.prototype;\n      ChartElement.prototype = new Surrogate();\n      ChartElement.extend = helpers.inherits;\n\n      if (extensions) {\n        helpers.extend(ChartElement.prototype, extensions);\n      }\n\n      ChartElement.__super__ = me.prototype;\n      return ChartElement;\n    }\n  };\n  var helpers_core = helpers; // DEPRECATIONS\n\n  /**\n   * Provided for backward compatibility, use Chart.helpers.callback instead.\n   * @function Chart.helpers.callCallback\n   * @deprecated since version 2.6.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers.callCallback = helpers.callback;\n  /**\n   * Provided for backward compatibility, use Array.prototype.indexOf instead.\n   * Array.prototype.indexOf compatibility: Chrome, Opera, Safari, FF1.5+, IE9+\n   * @function Chart.helpers.indexOf\n   * @deprecated since version 2.7.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers.indexOf = function (array, item, fromIndex) {\n    return Array.prototype.indexOf.call(array, item, fromIndex);\n  };\n  /**\n   * Provided for backward compatibility, use Chart.helpers.valueOrDefault instead.\n   * @function Chart.helpers.getValueOrDefault\n   * @deprecated since version 2.7.0\n   * @todo remove at version 3\n   * @private\n   */\n\n\n  helpers.getValueOrDefault = helpers.valueOrDefault;\n  /**\n   * Provided for backward compatibility, use Chart.helpers.valueAtIndexOrDefault instead.\n   * @function Chart.helpers.getValueAtIndexOrDefault\n   * @deprecated since version 2.7.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers.getValueAtIndexOrDefault = helpers.valueAtIndexOrDefault;\n  /**\n   * Easing functions adapted from Robert Penner's easing equations.\n   * @namespace Chart.helpers.easingEffects\n   * @see http://www.robertpenner.com/easing/\n   */\n\n  var effects = {\n    linear: function linear(t) {\n      return t;\n    },\n    easeInQuad: function easeInQuad(t) {\n      return t * t;\n    },\n    easeOutQuad: function easeOutQuad(t) {\n      return -t * (t - 2);\n    },\n    easeInOutQuad: function easeInOutQuad(t) {\n      if ((t /= 0.5) < 1) {\n        return 0.5 * t * t;\n      }\n\n      return -0.5 * (--t * (t - 2) - 1);\n    },\n    easeInCubic: function easeInCubic(t) {\n      return t * t * t;\n    },\n    easeOutCubic: function easeOutCubic(t) {\n      return (t = t - 1) * t * t + 1;\n    },\n    easeInOutCubic: function easeInOutCubic(t) {\n      if ((t /= 0.5) < 1) {\n        return 0.5 * t * t * t;\n      }\n\n      return 0.5 * ((t -= 2) * t * t + 2);\n    },\n    easeInQuart: function easeInQuart(t) {\n      return t * t * t * t;\n    },\n    easeOutQuart: function easeOutQuart(t) {\n      return -((t = t - 1) * t * t * t - 1);\n    },\n    easeInOutQuart: function easeInOutQuart(t) {\n      if ((t /= 0.5) < 1) {\n        return 0.5 * t * t * t * t;\n      }\n\n      return -0.5 * ((t -= 2) * t * t * t - 2);\n    },\n    easeInQuint: function easeInQuint(t) {\n      return t * t * t * t * t;\n    },\n    easeOutQuint: function easeOutQuint(t) {\n      return (t = t - 1) * t * t * t * t + 1;\n    },\n    easeInOutQuint: function easeInOutQuint(t) {\n      if ((t /= 0.5) < 1) {\n        return 0.5 * t * t * t * t * t;\n      }\n\n      return 0.5 * ((t -= 2) * t * t * t * t + 2);\n    },\n    easeInSine: function easeInSine(t) {\n      return -Math.cos(t * (Math.PI / 2)) + 1;\n    },\n    easeOutSine: function easeOutSine(t) {\n      return Math.sin(t * (Math.PI / 2));\n    },\n    easeInOutSine: function easeInOutSine(t) {\n      return -0.5 * (Math.cos(Math.PI * t) - 1);\n    },\n    easeInExpo: function easeInExpo(t) {\n      return t === 0 ? 0 : Math.pow(2, 10 * (t - 1));\n    },\n    easeOutExpo: function easeOutExpo(t) {\n      return t === 1 ? 1 : -Math.pow(2, -10 * t) + 1;\n    },\n    easeInOutExpo: function easeInOutExpo(t) {\n      if (t === 0) {\n        return 0;\n      }\n\n      if (t === 1) {\n        return 1;\n      }\n\n      if ((t /= 0.5) < 1) {\n        return 0.5 * Math.pow(2, 10 * (t - 1));\n      }\n\n      return 0.5 * (-Math.pow(2, -10 * --t) + 2);\n    },\n    easeInCirc: function easeInCirc(t) {\n      if (t >= 1) {\n        return t;\n      }\n\n      return -(Math.sqrt(1 - t * t) - 1);\n    },\n    easeOutCirc: function easeOutCirc(t) {\n      return Math.sqrt(1 - (t = t - 1) * t);\n    },\n    easeInOutCirc: function easeInOutCirc(t) {\n      if ((t /= 0.5) < 1) {\n        return -0.5 * (Math.sqrt(1 - t * t) - 1);\n      }\n\n      return 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1);\n    },\n    easeInElastic: function easeInElastic(t) {\n      var s = 1.70158;\n      var p = 0;\n      var a = 1;\n\n      if (t === 0) {\n        return 0;\n      }\n\n      if (t === 1) {\n        return 1;\n      }\n\n      if (!p) {\n        p = 0.3;\n      }\n\n      if (a < 1) {\n        a = 1;\n        s = p / 4;\n      } else {\n        s = p / (2 * Math.PI) * Math.asin(1 / a);\n      }\n\n      return -(a * Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * (2 * Math.PI) / p));\n    },\n    easeOutElastic: function easeOutElastic(t) {\n      var s = 1.70158;\n      var p = 0;\n      var a = 1;\n\n      if (t === 0) {\n        return 0;\n      }\n\n      if (t === 1) {\n        return 1;\n      }\n\n      if (!p) {\n        p = 0.3;\n      }\n\n      if (a < 1) {\n        a = 1;\n        s = p / 4;\n      } else {\n        s = p / (2 * Math.PI) * Math.asin(1 / a);\n      }\n\n      return a * Math.pow(2, -10 * t) * Math.sin((t - s) * (2 * Math.PI) / p) + 1;\n    },\n    easeInOutElastic: function easeInOutElastic(t) {\n      var s = 1.70158;\n      var p = 0;\n      var a = 1;\n\n      if (t === 0) {\n        return 0;\n      }\n\n      if ((t /= 0.5) === 2) {\n        return 1;\n      }\n\n      if (!p) {\n        p = 0.45;\n      }\n\n      if (a < 1) {\n        a = 1;\n        s = p / 4;\n      } else {\n        s = p / (2 * Math.PI) * Math.asin(1 / a);\n      }\n\n      if (t < 1) {\n        return -0.5 * (a * Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * (2 * Math.PI) / p));\n      }\n\n      return a * Math.pow(2, -10 * (t -= 1)) * Math.sin((t - s) * (2 * Math.PI) / p) * 0.5 + 1;\n    },\n    easeInBack: function easeInBack(t) {\n      var s = 1.70158;\n      return t * t * ((s + 1) * t - s);\n    },\n    easeOutBack: function easeOutBack(t) {\n      var s = 1.70158;\n      return (t = t - 1) * t * ((s + 1) * t + s) + 1;\n    },\n    easeInOutBack: function easeInOutBack(t) {\n      var s = 1.70158;\n\n      if ((t /= 0.5) < 1) {\n        return 0.5 * (t * t * (((s *= 1.525) + 1) * t - s));\n      }\n\n      return 0.5 * ((t -= 2) * t * (((s *= 1.525) + 1) * t + s) + 2);\n    },\n    easeInBounce: function easeInBounce(t) {\n      return 1 - effects.easeOutBounce(1 - t);\n    },\n    easeOutBounce: function easeOutBounce(t) {\n      if (t < 1 / 2.75) {\n        return 7.5625 * t * t;\n      }\n\n      if (t < 2 / 2.75) {\n        return 7.5625 * (t -= 1.5 / 2.75) * t + 0.75;\n      }\n\n      if (t < 2.5 / 2.75) {\n        return 7.5625 * (t -= 2.25 / 2.75) * t + 0.9375;\n      }\n\n      return 7.5625 * (t -= 2.625 / 2.75) * t + 0.984375;\n    },\n    easeInOutBounce: function easeInOutBounce(t) {\n      if (t < 0.5) {\n        return effects.easeInBounce(t * 2) * 0.5;\n      }\n\n      return effects.easeOutBounce(t * 2 - 1) * 0.5 + 0.5;\n    }\n  };\n  var helpers_easing = {\n    effects: effects\n  }; // DEPRECATIONS\n\n  /**\n   * Provided for backward compatibility, use Chart.helpers.easing.effects instead.\n   * @function Chart.helpers.easingEffects\n   * @deprecated since version 2.7.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers_core.easingEffects = effects;\n  var PI = Math.PI;\n  var RAD_PER_DEG = PI / 180;\n  var DOUBLE_PI = PI * 2;\n  var HALF_PI = PI / 2;\n  var QUARTER_PI = PI / 4;\n  var TWO_THIRDS_PI = PI * 2 / 3;\n  /**\n   * @namespace Chart.helpers.canvas\n   */\n\n  var exports$1 = {\n    /**\n     * Clears the entire canvas associated to the given `chart`.\n     * @param {Chart} chart - The chart for which to clear the canvas.\n     */\n    clear: function clear(chart) {\n      chart.ctx.clearRect(0, 0, chart.width, chart.height);\n    },\n\n    /**\n     * Creates a \"path\" for a rectangle with rounded corners at position (x, y) with a\n     * given size (width, height) and the same `radius` for all corners.\n     * @param {CanvasRenderingContext2D} ctx - The canvas 2D Context.\n     * @param {number} x - The x axis of the coordinate for the rectangle starting point.\n     * @param {number} y - The y axis of the coordinate for the rectangle starting point.\n     * @param {number} width - The rectangle's width.\n     * @param {number} height - The rectangle's height.\n     * @param {number} radius - The rounded amount (in pixels) for the four corners.\n     * @todo handle `radius` as top-left, top-right, bottom-right, bottom-left array/object?\n     */\n    roundedRect: function roundedRect(ctx, x, y, width, height, radius) {\n      if (radius) {\n        var r = Math.min(radius, height / 2, width / 2);\n        var left = x + r;\n        var top = y + r;\n        var right = x + width - r;\n        var bottom = y + height - r;\n        ctx.moveTo(x, top);\n\n        if (left < right && top < bottom) {\n          ctx.arc(left, top, r, -PI, -HALF_PI);\n          ctx.arc(right, top, r, -HALF_PI, 0);\n          ctx.arc(right, bottom, r, 0, HALF_PI);\n          ctx.arc(left, bottom, r, HALF_PI, PI);\n        } else if (left < right) {\n          ctx.moveTo(left, y);\n          ctx.arc(right, top, r, -HALF_PI, HALF_PI);\n          ctx.arc(left, top, r, HALF_PI, PI + HALF_PI);\n        } else if (top < bottom) {\n          ctx.arc(left, top, r, -PI, 0);\n          ctx.arc(left, bottom, r, 0, PI);\n        } else {\n          ctx.arc(left, top, r, -PI, PI);\n        }\n\n        ctx.closePath();\n        ctx.moveTo(x, y);\n      } else {\n        ctx.rect(x, y, width, height);\n      }\n    },\n    drawPoint: function drawPoint(ctx, style, radius, x, y, rotation) {\n      var type, xOffset, yOffset, size, cornerRadius;\n      var rad = (rotation || 0) * RAD_PER_DEG;\n\n      if (style && typeof style === 'object') {\n        type = style.toString();\n\n        if (type === '[object HTMLImageElement]' || type === '[object HTMLCanvasElement]') {\n          ctx.drawImage(style, x - style.width / 2, y - style.height / 2, style.width, style.height);\n          return;\n        }\n      }\n\n      if (isNaN(radius) || radius <= 0) {\n        return;\n      }\n\n      ctx.beginPath();\n\n      switch (style) {\n        // Default includes circle\n        default:\n          ctx.arc(x, y, radius, 0, DOUBLE_PI);\n          ctx.closePath();\n          break;\n\n        case 'triangle':\n          ctx.moveTo(x + Math.sin(rad) * radius, y - Math.cos(rad) * radius);\n          rad += TWO_THIRDS_PI;\n          ctx.lineTo(x + Math.sin(rad) * radius, y - Math.cos(rad) * radius);\n          rad += TWO_THIRDS_PI;\n          ctx.lineTo(x + Math.sin(rad) * radius, y - Math.cos(rad) * radius);\n          ctx.closePath();\n          break;\n\n        case 'rectRounded':\n          // NOTE: the rounded rect implementation changed to use `arc` instead of\n          // `quadraticCurveTo` since it generates better results when rect is\n          // almost a circle. 0.516 (instead of 0.5) produces results with visually\n          // closer proportion to the previous impl and it is inscribed in the\n          // circle with `radius`. For more details, see the following PRs:\n          // https://github.com/chartjs/Chart.js/issues/5597\n          // https://github.com/chartjs/Chart.js/issues/5858\n          cornerRadius = radius * 0.516;\n          size = radius - cornerRadius;\n          xOffset = Math.cos(rad + QUARTER_PI) * size;\n          yOffset = Math.sin(rad + QUARTER_PI) * size;\n          ctx.arc(x - xOffset, y - yOffset, cornerRadius, rad - PI, rad - HALF_PI);\n          ctx.arc(x + yOffset, y - xOffset, cornerRadius, rad - HALF_PI, rad);\n          ctx.arc(x + xOffset, y + yOffset, cornerRadius, rad, rad + HALF_PI);\n          ctx.arc(x - yOffset, y + xOffset, cornerRadius, rad + HALF_PI, rad + PI);\n          ctx.closePath();\n          break;\n\n        case 'rect':\n          if (!rotation) {\n            size = Math.SQRT1_2 * radius;\n            ctx.rect(x - size, y - size, 2 * size, 2 * size);\n            break;\n          }\n\n          rad += QUARTER_PI;\n\n        /* falls through */\n\n        case 'rectRot':\n          xOffset = Math.cos(rad) * radius;\n          yOffset = Math.sin(rad) * radius;\n          ctx.moveTo(x - xOffset, y - yOffset);\n          ctx.lineTo(x + yOffset, y - xOffset);\n          ctx.lineTo(x + xOffset, y + yOffset);\n          ctx.lineTo(x - yOffset, y + xOffset);\n          ctx.closePath();\n          break;\n\n        case 'crossRot':\n          rad += QUARTER_PI;\n\n        /* falls through */\n\n        case 'cross':\n          xOffset = Math.cos(rad) * radius;\n          yOffset = Math.sin(rad) * radius;\n          ctx.moveTo(x - xOffset, y - yOffset);\n          ctx.lineTo(x + xOffset, y + yOffset);\n          ctx.moveTo(x + yOffset, y - xOffset);\n          ctx.lineTo(x - yOffset, y + xOffset);\n          break;\n\n        case 'star':\n          xOffset = Math.cos(rad) * radius;\n          yOffset = Math.sin(rad) * radius;\n          ctx.moveTo(x - xOffset, y - yOffset);\n          ctx.lineTo(x + xOffset, y + yOffset);\n          ctx.moveTo(x + yOffset, y - xOffset);\n          ctx.lineTo(x - yOffset, y + xOffset);\n          rad += QUARTER_PI;\n          xOffset = Math.cos(rad) * radius;\n          yOffset = Math.sin(rad) * radius;\n          ctx.moveTo(x - xOffset, y - yOffset);\n          ctx.lineTo(x + xOffset, y + yOffset);\n          ctx.moveTo(x + yOffset, y - xOffset);\n          ctx.lineTo(x - yOffset, y + xOffset);\n          break;\n\n        case 'line':\n          xOffset = Math.cos(rad) * radius;\n          yOffset = Math.sin(rad) * radius;\n          ctx.moveTo(x - xOffset, y - yOffset);\n          ctx.lineTo(x + xOffset, y + yOffset);\n          break;\n\n        case 'dash':\n          ctx.moveTo(x, y);\n          ctx.lineTo(x + Math.cos(rad) * radius, y + Math.sin(rad) * radius);\n          break;\n      }\n\n      ctx.fill();\n      ctx.stroke();\n    },\n\n    /**\n     * Returns true if the point is inside the rectangle\n     * @param {object} point - The point to test\n     * @param {object} area - The rectangle\n     * @returns {boolean}\n     * @private\n     */\n    _isPointInArea: function _isPointInArea(point, area) {\n      var epsilon = 1e-6; // 1e-6 is margin in pixels for accumulated error.\n\n      return point.x > area.left - epsilon && point.x < area.right + epsilon && point.y > area.top - epsilon && point.y < area.bottom + epsilon;\n    },\n    clipArea: function clipArea(ctx, area) {\n      ctx.save();\n      ctx.beginPath();\n      ctx.rect(area.left, area.top, area.right - area.left, area.bottom - area.top);\n      ctx.clip();\n    },\n    unclipArea: function unclipArea(ctx) {\n      ctx.restore();\n    },\n    lineTo: function lineTo(ctx, previous, target, flip) {\n      var stepped = target.steppedLine;\n\n      if (stepped) {\n        if (stepped === 'middle') {\n          var midpoint = (previous.x + target.x) / 2.0;\n          ctx.lineTo(midpoint, flip ? target.y : previous.y);\n          ctx.lineTo(midpoint, flip ? previous.y : target.y);\n        } else if (stepped === 'after' && !flip || stepped !== 'after' && flip) {\n          ctx.lineTo(previous.x, target.y);\n        } else {\n          ctx.lineTo(target.x, previous.y);\n        }\n\n        ctx.lineTo(target.x, target.y);\n        return;\n      }\n\n      if (!target.tension) {\n        ctx.lineTo(target.x, target.y);\n        return;\n      }\n\n      ctx.bezierCurveTo(flip ? previous.controlPointPreviousX : previous.controlPointNextX, flip ? previous.controlPointPreviousY : previous.controlPointNextY, flip ? target.controlPointNextX : target.controlPointPreviousX, flip ? target.controlPointNextY : target.controlPointPreviousY, target.x, target.y);\n    }\n  };\n  var helpers_canvas = exports$1; // DEPRECATIONS\n\n  /**\n   * Provided for backward compatibility, use Chart.helpers.canvas.clear instead.\n   * @namespace Chart.helpers.clear\n   * @deprecated since version 2.7.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers_core.clear = exports$1.clear;\n  /**\n   * Provided for backward compatibility, use Chart.helpers.canvas.roundedRect instead.\n   * @namespace Chart.helpers.drawRoundedRectangle\n   * @deprecated since version 2.7.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers_core.drawRoundedRectangle = function (ctx) {\n    ctx.beginPath();\n    exports$1.roundedRect.apply(exports$1, arguments);\n  };\n\n  var defaults = {\n    /**\n     * @private\n     */\n    _set: function _set(scope, values) {\n      return helpers_core.merge(this[scope] || (this[scope] = {}), values);\n    }\n  };\n\n  defaults._set('global', {\n    defaultColor: 'rgba(0,0,0,0.1)',\n    defaultFontColor: '#666',\n    defaultFontFamily: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\n    defaultFontSize: 12,\n    defaultFontStyle: 'normal',\n    defaultLineHeight: 1.2,\n    showLines: true\n  });\n\n  var core_defaults = defaults;\n  var valueOrDefault = helpers_core.valueOrDefault;\n  /**\n   * Converts the given font object into a CSS font string.\n   * @param {object} font - A font object.\n   * @return {string} The CSS font string. See https://developer.mozilla.org/en-US/docs/Web/CSS/font\n   * @private\n   */\n\n  function toFontString(font) {\n    if (!font || helpers_core.isNullOrUndef(font.size) || helpers_core.isNullOrUndef(font.family)) {\n      return null;\n    }\n\n    return (font.style ? font.style + ' ' : '') + (font.weight ? font.weight + ' ' : '') + font.size + 'px ' + font.family;\n  }\n  /**\n   * @alias Chart.helpers.options\n   * @namespace\n   */\n\n\n  var helpers_options = {\n    /**\n     * Converts the given line height `value` in pixels for a specific font `size`.\n     * @param {number|string} value - The lineHeight to parse (eg. 1.6, '14px', '75%', '1.6em').\n     * @param {number} size - The font size (in pixels) used to resolve relative `value`.\n     * @returns {number} The effective line height in pixels (size * 1.2 if value is invalid).\n     * @see https://developer.mozilla.org/en-US/docs/Web/CSS/line-height\n     * @since 2.7.0\n     */\n    toLineHeight: function toLineHeight(value, size) {\n      var matches = ('' + value).match(/^(normal|(\\d+(?:\\.\\d+)?)(px|em|%)?)$/);\n\n      if (!matches || matches[1] === 'normal') {\n        return size * 1.2;\n      }\n\n      value = +matches[2];\n\n      switch (matches[3]) {\n        case 'px':\n          return value;\n\n        case '%':\n          value /= 100;\n          break;\n\n        default:\n          break;\n      }\n\n      return size * value;\n    },\n\n    /**\n     * Converts the given value into a padding object with pre-computed width/height.\n     * @param {number|object} value - If a number, set the value to all TRBL component,\n     *  else, if and object, use defined properties and sets undefined ones to 0.\n     * @returns {object} The padding values (top, right, bottom, left, width, height)\n     * @since 2.7.0\n     */\n    toPadding: function toPadding(value) {\n      var t, r, b, l;\n\n      if (helpers_core.isObject(value)) {\n        t = +value.top || 0;\n        r = +value.right || 0;\n        b = +value.bottom || 0;\n        l = +value.left || 0;\n      } else {\n        t = r = b = l = +value || 0;\n      }\n\n      return {\n        top: t,\n        right: r,\n        bottom: b,\n        left: l,\n        height: t + b,\n        width: l + r\n      };\n    },\n\n    /**\n     * Parses font options and returns the font object.\n     * @param {object} options - A object that contains font options to be parsed.\n     * @return {object} The font object.\n     * @todo Support font.* options and renamed to toFont().\n     * @private\n     */\n    _parseFont: function _parseFont(options) {\n      var globalDefaults = core_defaults.global;\n      var size = valueOrDefault(options.fontSize, globalDefaults.defaultFontSize);\n      var font = {\n        family: valueOrDefault(options.fontFamily, globalDefaults.defaultFontFamily),\n        lineHeight: helpers_core.options.toLineHeight(valueOrDefault(options.lineHeight, globalDefaults.defaultLineHeight), size),\n        size: size,\n        style: valueOrDefault(options.fontStyle, globalDefaults.defaultFontStyle),\n        weight: null,\n        string: ''\n      };\n      font.string = toFontString(font);\n      return font;\n    },\n\n    /**\n     * Evaluates the given `inputs` sequentially and returns the first defined value.\n     * @param {Array} inputs - An array of values, falling back to the last value.\n     * @param {object} [context] - If defined and the current value is a function, the value\n     * is called with `context` as first argument and the result becomes the new input.\n     * @param {number} [index] - If defined and the current value is an array, the value\n     * at `index` become the new input.\n     * @since 2.7.0\n     */\n    resolve: function resolve(inputs, context, index) {\n      var i, ilen, value;\n\n      for (i = 0, ilen = inputs.length; i < ilen; ++i) {\n        value = inputs[i];\n\n        if (value === undefined) {\n          continue;\n        }\n\n        if (context !== undefined && typeof value === 'function') {\n          value = value(context);\n        }\n\n        if (index !== undefined && helpers_core.isArray(value)) {\n          value = value[index];\n        }\n\n        if (value !== undefined) {\n          return value;\n        }\n      }\n    }\n  };\n  var helpers$1 = helpers_core;\n  var easing = helpers_easing;\n  var canvas = helpers_canvas;\n  var options = helpers_options;\n  helpers$1.easing = easing;\n  helpers$1.canvas = canvas;\n  helpers$1.options = options;\n\n  function interpolate(start, view, model, ease) {\n    var keys = Object.keys(model);\n    var i, ilen, key, actual, origin, target, type, c0, c1;\n\n    for (i = 0, ilen = keys.length; i < ilen; ++i) {\n      key = keys[i];\n      target = model[key]; // if a value is added to the model after pivot() has been called, the view\n      // doesn't contain it, so let's initialize the view to the target value.\n\n      if (!view.hasOwnProperty(key)) {\n        view[key] = target;\n      }\n\n      actual = view[key];\n\n      if (actual === target || key[0] === '_') {\n        continue;\n      }\n\n      if (!start.hasOwnProperty(key)) {\n        start[key] = actual;\n      }\n\n      origin = start[key];\n      type = typeof target;\n\n      if (type === typeof origin) {\n        if (type === 'string') {\n          c0 = chartjsColor(origin);\n\n          if (c0.valid) {\n            c1 = chartjsColor(target);\n\n            if (c1.valid) {\n              view[key] = c1.mix(c0, ease).rgbString();\n              continue;\n            }\n          }\n        } else if (helpers$1.isFinite(origin) && helpers$1.isFinite(target)) {\n          view[key] = origin + (target - origin) * ease;\n          continue;\n        }\n      }\n\n      view[key] = target;\n    }\n  }\n\n  var Element = function Element(configuration) {\n    helpers$1.extend(this, configuration);\n    this.initialize.apply(this, arguments);\n  };\n\n  helpers$1.extend(Element.prototype, {\n    initialize: function initialize() {\n      this.hidden = false;\n    },\n    pivot: function pivot() {\n      var me = this;\n\n      if (!me._view) {\n        me._view = helpers$1.clone(me._model);\n      }\n\n      me._start = {};\n      return me;\n    },\n    transition: function transition(ease) {\n      var me = this;\n      var model = me._model;\n      var start = me._start;\n      var view = me._view; // No animation -> No Transition\n\n      if (!model || ease === 1) {\n        me._view = model;\n        me._start = null;\n        return me;\n      }\n\n      if (!view) {\n        view = me._view = {};\n      }\n\n      if (!start) {\n        start = me._start = {};\n      }\n\n      interpolate(start, view, model, ease);\n      return me;\n    },\n    tooltipPosition: function tooltipPosition() {\n      return {\n        x: this._model.x,\n        y: this._model.y\n      };\n    },\n    hasValue: function hasValue() {\n      return helpers$1.isNumber(this._model.x) && helpers$1.isNumber(this._model.y);\n    }\n  });\n  Element.extend = helpers$1.inherits;\n  var core_element = Element;\n  var exports$2 = core_element.extend({\n    chart: null,\n    // the animation associated chart instance\n    currentStep: 0,\n    // the current animation step\n    numSteps: 60,\n    // default number of steps\n    easing: '',\n    // the easing to use for this animation\n    render: null,\n    // render function used by the animation service\n    onAnimationProgress: null,\n    // user specified callback to fire on each step of the animation\n    onAnimationComplete: null // user specified callback to fire when the animation finishes\n\n  });\n  var core_animation = exports$2; // DEPRECATIONS\n\n  /**\n   * Provided for backward compatibility, use Chart.Animation instead\n   * @prop Chart.Animation#animationObject\n   * @deprecated since version 2.6.0\n   * @todo remove at version 3\n   */\n\n  Object.defineProperty(exports$2.prototype, 'animationObject', {\n    get: function get() {\n      return this;\n    }\n  });\n  /**\n   * Provided for backward compatibility, use Chart.Animation#chart instead\n   * @prop Chart.Animation#chartInstance\n   * @deprecated since version 2.6.0\n   * @todo remove at version 3\n   */\n\n  Object.defineProperty(exports$2.prototype, 'chartInstance', {\n    get: function get() {\n      return this.chart;\n    },\n    set: function set(value) {\n      this.chart = value;\n    }\n  });\n\n  core_defaults._set('global', {\n    animation: {\n      duration: 1000,\n      easing: 'easeOutQuart',\n      onProgress: helpers$1.noop,\n      onComplete: helpers$1.noop\n    }\n  });\n\n  var core_animations = {\n    animations: [],\n    request: null,\n\n    /**\n     * @param {Chart} chart - The chart to animate.\n     * @param {Chart.Animation} animation - The animation that we will animate.\n     * @param {number} duration - The animation duration in ms.\n     * @param {boolean} lazy - if true, the chart is not marked as animating to enable more responsive interactions\n     */\n    addAnimation: function addAnimation(chart, animation, duration, lazy) {\n      var animations = this.animations;\n      var i, ilen;\n      animation.chart = chart;\n      animation.startTime = Date.now();\n      animation.duration = duration;\n\n      if (!lazy) {\n        chart.animating = true;\n      }\n\n      for (i = 0, ilen = animations.length; i < ilen; ++i) {\n        if (animations[i].chart === chart) {\n          animations[i] = animation;\n          return;\n        }\n      }\n\n      animations.push(animation); // If there are no animations queued, manually kickstart a digest, for lack of a better word\n\n      if (animations.length === 1) {\n        this.requestAnimationFrame();\n      }\n    },\n    cancelAnimation: function cancelAnimation(chart) {\n      var index = helpers$1.findIndex(this.animations, function (animation) {\n        return animation.chart === chart;\n      });\n\n      if (index !== -1) {\n        this.animations.splice(index, 1);\n        chart.animating = false;\n      }\n    },\n    requestAnimationFrame: function requestAnimationFrame() {\n      var me = this;\n\n      if (me.request === null) {\n        // Skip animation frame requests until the active one is executed.\n        // This can happen when processing mouse events, e.g. 'mousemove'\n        // and 'mouseout' events will trigger multiple renders.\n        me.request = helpers$1.requestAnimFrame.call(window, function () {\n          me.request = null;\n          me.startDigest();\n        });\n      }\n    },\n\n    /**\n     * @private\n     */\n    startDigest: function startDigest() {\n      var me = this;\n      me.advance(); // Do we have more stuff to animate?\n\n      if (me.animations.length > 0) {\n        me.requestAnimationFrame();\n      }\n    },\n\n    /**\n     * @private\n     */\n    advance: function advance() {\n      var animations = this.animations;\n      var animation, chart, numSteps, nextStep;\n      var i = 0; // 1 animation per chart, so we are looping charts here\n\n      while (i < animations.length) {\n        animation = animations[i];\n        chart = animation.chart;\n        numSteps = animation.numSteps; // Make sure that currentStep starts at 1\n        // https://github.com/chartjs/Chart.js/issues/6104\n\n        nextStep = Math.floor((Date.now() - animation.startTime) / animation.duration * numSteps) + 1;\n        animation.currentStep = Math.min(nextStep, numSteps);\n        helpers$1.callback(animation.render, [chart, animation], chart);\n        helpers$1.callback(animation.onAnimationProgress, [animation], chart);\n\n        if (animation.currentStep >= numSteps) {\n          helpers$1.callback(animation.onAnimationComplete, [animation], chart);\n          chart.animating = false;\n          animations.splice(i, 1);\n        } else {\n          ++i;\n        }\n      }\n    }\n  };\n  var resolve = helpers$1.options.resolve;\n  var arrayEvents = ['push', 'pop', 'shift', 'splice', 'unshift'];\n  /**\n   * Hooks the array methods that add or remove values ('push', pop', 'shift', 'splice',\n   * 'unshift') and notify the listener AFTER the array has been altered. Listeners are\n   * called on the 'onData*' callbacks (e.g. onDataPush, etc.) with same arguments.\n   */\n\n  function listenArrayEvents(array, listener) {\n    if (array._chartjs) {\n      array._chartjs.listeners.push(listener);\n\n      return;\n    }\n\n    Object.defineProperty(array, '_chartjs', {\n      configurable: true,\n      enumerable: false,\n      value: {\n        listeners: [listener]\n      }\n    });\n    arrayEvents.forEach(function (key) {\n      var method = 'onData' + key.charAt(0).toUpperCase() + key.slice(1);\n      var base = array[key];\n      Object.defineProperty(array, key, {\n        configurable: true,\n        enumerable: false,\n        value: function value() {\n          var args = Array.prototype.slice.call(arguments);\n          var res = base.apply(this, args);\n          helpers$1.each(array._chartjs.listeners, function (object) {\n            if (typeof object[method] === 'function') {\n              object[method].apply(object, args);\n            }\n          });\n          return res;\n        }\n      });\n    });\n  }\n  /**\n   * Removes the given array event listener and cleanup extra attached properties (such as\n   * the _chartjs stub and overridden methods) if array doesn't have any more listeners.\n   */\n\n\n  function unlistenArrayEvents(array, listener) {\n    var stub = array._chartjs;\n\n    if (!stub) {\n      return;\n    }\n\n    var listeners = stub.listeners;\n    var index = listeners.indexOf(listener);\n\n    if (index !== -1) {\n      listeners.splice(index, 1);\n    }\n\n    if (listeners.length > 0) {\n      return;\n    }\n\n    arrayEvents.forEach(function (key) {\n      delete array[key];\n    });\n    delete array._chartjs;\n  } // Base class for all dataset controllers (line, bar, etc)\n\n\n  var DatasetController = function DatasetController(chart, datasetIndex) {\n    this.initialize(chart, datasetIndex);\n  };\n\n  helpers$1.extend(DatasetController.prototype, {\n    /**\n     * Element type used to generate a meta dataset (e.g. Chart.element.Line).\n     * @type {Chart.core.element}\n     */\n    datasetElementType: null,\n\n    /**\n     * Element type used to generate a meta data (e.g. Chart.element.Point).\n     * @type {Chart.core.element}\n     */\n    dataElementType: null,\n    initialize: function initialize(chart, datasetIndex) {\n      var me = this;\n      me.chart = chart;\n      me.index = datasetIndex;\n      me.linkScales();\n      me.addElements();\n    },\n    updateIndex: function updateIndex(datasetIndex) {\n      this.index = datasetIndex;\n    },\n    linkScales: function linkScales() {\n      var me = this;\n      var meta = me.getMeta();\n      var dataset = me.getDataset();\n\n      if (meta.xAxisID === null || !(meta.xAxisID in me.chart.scales)) {\n        meta.xAxisID = dataset.xAxisID || me.chart.options.scales.xAxes[0].id;\n      }\n\n      if (meta.yAxisID === null || !(meta.yAxisID in me.chart.scales)) {\n        meta.yAxisID = dataset.yAxisID || me.chart.options.scales.yAxes[0].id;\n      }\n    },\n    getDataset: function getDataset() {\n      return this.chart.data.datasets[this.index];\n    },\n    getMeta: function getMeta() {\n      return this.chart.getDatasetMeta(this.index);\n    },\n    getScaleForId: function getScaleForId(scaleID) {\n      return this.chart.scales[scaleID];\n    },\n\n    /**\n     * @private\n     */\n    _getValueScaleId: function _getValueScaleId() {\n      return this.getMeta().yAxisID;\n    },\n\n    /**\n     * @private\n     */\n    _getIndexScaleId: function _getIndexScaleId() {\n      return this.getMeta().xAxisID;\n    },\n\n    /**\n     * @private\n     */\n    _getValueScale: function _getValueScale() {\n      return this.getScaleForId(this._getValueScaleId());\n    },\n\n    /**\n     * @private\n     */\n    _getIndexScale: function _getIndexScale() {\n      return this.getScaleForId(this._getIndexScaleId());\n    },\n    reset: function reset() {\n      this.update(true);\n    },\n\n    /**\n     * @private\n     */\n    destroy: function destroy() {\n      if (this._data) {\n        unlistenArrayEvents(this._data, this);\n      }\n    },\n    createMetaDataset: function createMetaDataset() {\n      var me = this;\n      var type = me.datasetElementType;\n      return type && new type({\n        _chart: me.chart,\n        _datasetIndex: me.index\n      });\n    },\n    createMetaData: function createMetaData(index) {\n      var me = this;\n      var type = me.dataElementType;\n      return type && new type({\n        _chart: me.chart,\n        _datasetIndex: me.index,\n        _index: index\n      });\n    },\n    addElements: function addElements() {\n      var me = this;\n      var meta = me.getMeta();\n      var data = me.getDataset().data || [];\n      var metaData = meta.data;\n      var i, ilen;\n\n      for (i = 0, ilen = data.length; i < ilen; ++i) {\n        metaData[i] = metaData[i] || me.createMetaData(i);\n      }\n\n      meta.dataset = meta.dataset || me.createMetaDataset();\n    },\n    addElementAndReset: function addElementAndReset(index) {\n      var element = this.createMetaData(index);\n      this.getMeta().data.splice(index, 0, element);\n      this.updateElement(element, index, true);\n    },\n    buildOrUpdateElements: function buildOrUpdateElements() {\n      var me = this;\n      var dataset = me.getDataset();\n      var data = dataset.data || (dataset.data = []); // In order to correctly handle data addition/deletion animation (an thus simulate\n      // real-time charts), we need to monitor these data modifications and synchronize\n      // the internal meta data accordingly.\n\n      if (me._data !== data) {\n        if (me._data) {\n          // This case happens when the user replaced the data array instance.\n          unlistenArrayEvents(me._data, me);\n        }\n\n        if (data && Object.isExtensible(data)) {\n          listenArrayEvents(data, me);\n        }\n\n        me._data = data;\n      } // Re-sync meta data in case the user replaced the data array or if we missed\n      // any updates and so make sure that we handle number of datapoints changing.\n\n\n      me.resyncElements();\n    },\n    update: helpers$1.noop,\n    transition: function transition(easingValue) {\n      var meta = this.getMeta();\n      var elements = meta.data || [];\n      var ilen = elements.length;\n      var i = 0;\n\n      for (; i < ilen; ++i) {\n        elements[i].transition(easingValue);\n      }\n\n      if (meta.dataset) {\n        meta.dataset.transition(easingValue);\n      }\n    },\n    draw: function draw() {\n      var meta = this.getMeta();\n      var elements = meta.data || [];\n      var ilen = elements.length;\n      var i = 0;\n\n      if (meta.dataset) {\n        meta.dataset.draw();\n      }\n\n      for (; i < ilen; ++i) {\n        elements[i].draw();\n      }\n    },\n    removeHoverStyle: function removeHoverStyle(element) {\n      helpers$1.merge(element._model, element.$previousStyle || {});\n      delete element.$previousStyle;\n    },\n    setHoverStyle: function setHoverStyle(element) {\n      var dataset = this.chart.data.datasets[element._datasetIndex];\n      var index = element._index;\n      var custom = element.custom || {};\n      var model = element._model;\n      var getHoverColor = helpers$1.getHoverColor;\n      element.$previousStyle = {\n        backgroundColor: model.backgroundColor,\n        borderColor: model.borderColor,\n        borderWidth: model.borderWidth\n      };\n      model.backgroundColor = resolve([custom.hoverBackgroundColor, dataset.hoverBackgroundColor, getHoverColor(model.backgroundColor)], undefined, index);\n      model.borderColor = resolve([custom.hoverBorderColor, dataset.hoverBorderColor, getHoverColor(model.borderColor)], undefined, index);\n      model.borderWidth = resolve([custom.hoverBorderWidth, dataset.hoverBorderWidth, model.borderWidth], undefined, index);\n    },\n\n    /**\n     * @private\n     */\n    resyncElements: function resyncElements() {\n      var me = this;\n      var meta = me.getMeta();\n      var data = me.getDataset().data;\n      var numMeta = meta.data.length;\n      var numData = data.length;\n\n      if (numData < numMeta) {\n        meta.data.splice(numData, numMeta - numData);\n      } else if (numData > numMeta) {\n        me.insertElements(numMeta, numData - numMeta);\n      }\n    },\n\n    /**\n     * @private\n     */\n    insertElements: function insertElements(start, count) {\n      for (var i = 0; i < count; ++i) {\n        this.addElementAndReset(start + i);\n      }\n    },\n\n    /**\n     * @private\n     */\n    onDataPush: function onDataPush() {\n      var count = arguments.length;\n      this.insertElements(this.getDataset().data.length - count, count);\n    },\n\n    /**\n     * @private\n     */\n    onDataPop: function onDataPop() {\n      this.getMeta().data.pop();\n    },\n\n    /**\n     * @private\n     */\n    onDataShift: function onDataShift() {\n      this.getMeta().data.shift();\n    },\n\n    /**\n     * @private\n     */\n    onDataSplice: function onDataSplice(start, count) {\n      this.getMeta().data.splice(start, count);\n      this.insertElements(start, arguments.length - 2);\n    },\n\n    /**\n     * @private\n     */\n    onDataUnshift: function onDataUnshift() {\n      this.insertElements(0, arguments.length);\n    }\n  });\n  DatasetController.extend = helpers$1.inherits;\n  var core_datasetController = DatasetController;\n\n  core_defaults._set('global', {\n    elements: {\n      arc: {\n        backgroundColor: core_defaults.global.defaultColor,\n        borderColor: '#fff',\n        borderWidth: 2,\n        borderAlign: 'center'\n      }\n    }\n  });\n\n  var element_arc = core_element.extend({\n    inLabelRange: function inLabelRange(mouseX) {\n      var vm = this._view;\n\n      if (vm) {\n        return Math.pow(mouseX - vm.x, 2) < Math.pow(vm.radius + vm.hoverRadius, 2);\n      }\n\n      return false;\n    },\n    inRange: function inRange(chartX, chartY) {\n      var vm = this._view;\n\n      if (vm) {\n        var pointRelativePosition = helpers$1.getAngleFromPoint(vm, {\n          x: chartX,\n          y: chartY\n        });\n        var angle = pointRelativePosition.angle;\n        var distance = pointRelativePosition.distance; // Sanitise angle range\n\n        var startAngle = vm.startAngle;\n        var endAngle = vm.endAngle;\n\n        while (endAngle < startAngle) {\n          endAngle += 2.0 * Math.PI;\n        }\n\n        while (angle > endAngle) {\n          angle -= 2.0 * Math.PI;\n        }\n\n        while (angle < startAngle) {\n          angle += 2.0 * Math.PI;\n        } // Check if within the range of the open/close angle\n\n\n        var betweenAngles = angle >= startAngle && angle <= endAngle;\n        var withinRadius = distance >= vm.innerRadius && distance <= vm.outerRadius;\n        return betweenAngles && withinRadius;\n      }\n\n      return false;\n    },\n    getCenterPoint: function getCenterPoint() {\n      var vm = this._view;\n      var halfAngle = (vm.startAngle + vm.endAngle) / 2;\n      var halfRadius = (vm.innerRadius + vm.outerRadius) / 2;\n      return {\n        x: vm.x + Math.cos(halfAngle) * halfRadius,\n        y: vm.y + Math.sin(halfAngle) * halfRadius\n      };\n    },\n    getArea: function getArea() {\n      var vm = this._view;\n      return Math.PI * ((vm.endAngle - vm.startAngle) / (2 * Math.PI)) * (Math.pow(vm.outerRadius, 2) - Math.pow(vm.innerRadius, 2));\n    },\n    tooltipPosition: function tooltipPosition() {\n      var vm = this._view;\n      var centreAngle = vm.startAngle + (vm.endAngle - vm.startAngle) / 2;\n      var rangeFromCentre = (vm.outerRadius - vm.innerRadius) / 2 + vm.innerRadius;\n      return {\n        x: vm.x + Math.cos(centreAngle) * rangeFromCentre,\n        y: vm.y + Math.sin(centreAngle) * rangeFromCentre\n      };\n    },\n    draw: function draw() {\n      var ctx = this._chart.ctx;\n      var vm = this._view;\n      var sA = vm.startAngle;\n      var eA = vm.endAngle;\n      var pixelMargin = vm.borderAlign === 'inner' ? 0.33 : 0;\n      var angleMargin;\n      ctx.save();\n      ctx.beginPath();\n      ctx.arc(vm.x, vm.y, Math.max(vm.outerRadius - pixelMargin, 0), sA, eA);\n      ctx.arc(vm.x, vm.y, vm.innerRadius, eA, sA, true);\n      ctx.closePath();\n      ctx.fillStyle = vm.backgroundColor;\n      ctx.fill();\n\n      if (vm.borderWidth) {\n        if (vm.borderAlign === 'inner') {\n          // Draw an inner border by cliping the arc and drawing a double-width border\n          // Enlarge the clipping arc by 0.33 pixels to eliminate glitches between borders\n          ctx.beginPath();\n          angleMargin = pixelMargin / vm.outerRadius;\n          ctx.arc(vm.x, vm.y, vm.outerRadius, sA - angleMargin, eA + angleMargin);\n\n          if (vm.innerRadius > pixelMargin) {\n            angleMargin = pixelMargin / vm.innerRadius;\n            ctx.arc(vm.x, vm.y, vm.innerRadius - pixelMargin, eA + angleMargin, sA - angleMargin, true);\n          } else {\n            ctx.arc(vm.x, vm.y, pixelMargin, eA + Math.PI / 2, sA - Math.PI / 2);\n          }\n\n          ctx.closePath();\n          ctx.clip();\n          ctx.beginPath();\n          ctx.arc(vm.x, vm.y, vm.outerRadius, sA, eA);\n          ctx.arc(vm.x, vm.y, vm.innerRadius, eA, sA, true);\n          ctx.closePath();\n          ctx.lineWidth = vm.borderWidth * 2;\n          ctx.lineJoin = 'round';\n        } else {\n          ctx.lineWidth = vm.borderWidth;\n          ctx.lineJoin = 'bevel';\n        }\n\n        ctx.strokeStyle = vm.borderColor;\n        ctx.stroke();\n      }\n\n      ctx.restore();\n    }\n  });\n  var valueOrDefault$1 = helpers$1.valueOrDefault;\n  var defaultColor = core_defaults.global.defaultColor;\n\n  core_defaults._set('global', {\n    elements: {\n      line: {\n        tension: 0.4,\n        backgroundColor: defaultColor,\n        borderWidth: 3,\n        borderColor: defaultColor,\n        borderCapStyle: 'butt',\n        borderDash: [],\n        borderDashOffset: 0.0,\n        borderJoinStyle: 'miter',\n        capBezierPoints: true,\n        fill: true // do we fill in the area between the line and its base axis\n\n      }\n    }\n  });\n\n  var element_line = core_element.extend({\n    draw: function draw() {\n      var me = this;\n      var vm = me._view;\n      var ctx = me._chart.ctx;\n      var spanGaps = vm.spanGaps;\n\n      var points = me._children.slice(); // clone array\n\n\n      var globalDefaults = core_defaults.global;\n      var globalOptionLineElements = globalDefaults.elements.line;\n      var lastDrawnIndex = -1;\n      var index, current, previous, currentVM; // If we are looping, adding the first point again\n\n      if (me._loop && points.length) {\n        points.push(points[0]);\n      }\n\n      ctx.save(); // Stroke Line Options\n\n      ctx.lineCap = vm.borderCapStyle || globalOptionLineElements.borderCapStyle; // IE 9 and 10 do not support line dash\n\n      if (ctx.setLineDash) {\n        ctx.setLineDash(vm.borderDash || globalOptionLineElements.borderDash);\n      }\n\n      ctx.lineDashOffset = valueOrDefault$1(vm.borderDashOffset, globalOptionLineElements.borderDashOffset);\n      ctx.lineJoin = vm.borderJoinStyle || globalOptionLineElements.borderJoinStyle;\n      ctx.lineWidth = valueOrDefault$1(vm.borderWidth, globalOptionLineElements.borderWidth);\n      ctx.strokeStyle = vm.borderColor || globalDefaults.defaultColor; // Stroke Line\n\n      ctx.beginPath();\n      lastDrawnIndex = -1;\n\n      for (index = 0; index < points.length; ++index) {\n        current = points[index];\n        previous = helpers$1.previousItem(points, index);\n        currentVM = current._view; // First point moves to it's starting position no matter what\n\n        if (index === 0) {\n          if (!currentVM.skip) {\n            ctx.moveTo(currentVM.x, currentVM.y);\n            lastDrawnIndex = index;\n          }\n        } else {\n          previous = lastDrawnIndex === -1 ? previous : points[lastDrawnIndex];\n\n          if (!currentVM.skip) {\n            if (lastDrawnIndex !== index - 1 && !spanGaps || lastDrawnIndex === -1) {\n              // There was a gap and this is the first point after the gap\n              ctx.moveTo(currentVM.x, currentVM.y);\n            } else {\n              // Line to next point\n              helpers$1.canvas.lineTo(ctx, previous._view, current._view);\n            }\n\n            lastDrawnIndex = index;\n          }\n        }\n      }\n\n      ctx.stroke();\n      ctx.restore();\n    }\n  });\n  var valueOrDefault$2 = helpers$1.valueOrDefault;\n  var defaultColor$1 = core_defaults.global.defaultColor;\n\n  core_defaults._set('global', {\n    elements: {\n      point: {\n        radius: 3,\n        pointStyle: 'circle',\n        backgroundColor: defaultColor$1,\n        borderColor: defaultColor$1,\n        borderWidth: 1,\n        // Hover\n        hitRadius: 1,\n        hoverRadius: 4,\n        hoverBorderWidth: 1\n      }\n    }\n  });\n\n  function xRange(mouseX) {\n    var vm = this._view;\n    return vm ? Math.abs(mouseX - vm.x) < vm.radius + vm.hitRadius : false;\n  }\n\n  function yRange(mouseY) {\n    var vm = this._view;\n    return vm ? Math.abs(mouseY - vm.y) < vm.radius + vm.hitRadius : false;\n  }\n\n  var element_point = core_element.extend({\n    inRange: function inRange(mouseX, mouseY) {\n      var vm = this._view;\n      return vm ? Math.pow(mouseX - vm.x, 2) + Math.pow(mouseY - vm.y, 2) < Math.pow(vm.hitRadius + vm.radius, 2) : false;\n    },\n    inLabelRange: xRange,\n    inXRange: xRange,\n    inYRange: yRange,\n    getCenterPoint: function getCenterPoint() {\n      var vm = this._view;\n      return {\n        x: vm.x,\n        y: vm.y\n      };\n    },\n    getArea: function getArea() {\n      return Math.PI * Math.pow(this._view.radius, 2);\n    },\n    tooltipPosition: function tooltipPosition() {\n      var vm = this._view;\n      return {\n        x: vm.x,\n        y: vm.y,\n        padding: vm.radius + vm.borderWidth\n      };\n    },\n    draw: function draw(chartArea) {\n      var vm = this._view;\n      var ctx = this._chart.ctx;\n      var pointStyle = vm.pointStyle;\n      var rotation = vm.rotation;\n      var radius = vm.radius;\n      var x = vm.x;\n      var y = vm.y;\n      var globalDefaults = core_defaults.global;\n      var defaultColor = globalDefaults.defaultColor; // eslint-disable-line no-shadow\n\n      if (vm.skip) {\n        return;\n      } // Clipping for Points.\n\n\n      if (chartArea === undefined || helpers$1.canvas._isPointInArea(vm, chartArea)) {\n        ctx.strokeStyle = vm.borderColor || defaultColor;\n        ctx.lineWidth = valueOrDefault$2(vm.borderWidth, globalDefaults.elements.point.borderWidth);\n        ctx.fillStyle = vm.backgroundColor || defaultColor;\n        helpers$1.canvas.drawPoint(ctx, pointStyle, radius, x, y, rotation);\n      }\n    }\n  });\n  var defaultColor$2 = core_defaults.global.defaultColor;\n\n  core_defaults._set('global', {\n    elements: {\n      rectangle: {\n        backgroundColor: defaultColor$2,\n        borderColor: defaultColor$2,\n        borderSkipped: 'bottom',\n        borderWidth: 0\n      }\n    }\n  });\n\n  function isVertical(vm) {\n    return vm && vm.width !== undefined;\n  }\n  /**\n   * Helper function to get the bounds of the bar regardless of the orientation\n   * @param bar {Chart.Element.Rectangle} the bar\n   * @return {Bounds} bounds of the bar\n   * @private\n   */\n\n\n  function getBarBounds(vm) {\n    var x1, x2, y1, y2, half;\n\n    if (isVertical(vm)) {\n      half = vm.width / 2;\n      x1 = vm.x - half;\n      x2 = vm.x + half;\n      y1 = Math.min(vm.y, vm.base);\n      y2 = Math.max(vm.y, vm.base);\n    } else {\n      half = vm.height / 2;\n      x1 = Math.min(vm.x, vm.base);\n      x2 = Math.max(vm.x, vm.base);\n      y1 = vm.y - half;\n      y2 = vm.y + half;\n    }\n\n    return {\n      left: x1,\n      top: y1,\n      right: x2,\n      bottom: y2\n    };\n  }\n\n  function swap(orig, v1, v2) {\n    return orig === v1 ? v2 : orig === v2 ? v1 : orig;\n  }\n\n  function parseBorderSkipped(vm) {\n    var edge = vm.borderSkipped;\n    var res = {};\n\n    if (!edge) {\n      return res;\n    }\n\n    if (vm.horizontal) {\n      if (vm.base > vm.x) {\n        edge = swap(edge, 'left', 'right');\n      }\n    } else if (vm.base < vm.y) {\n      edge = swap(edge, 'bottom', 'top');\n    }\n\n    res[edge] = true;\n    return res;\n  }\n\n  function parseBorderWidth(vm, maxW, maxH) {\n    var value = vm.borderWidth;\n    var skip = parseBorderSkipped(vm);\n    var t, r, b, l;\n\n    if (helpers$1.isObject(value)) {\n      t = +value.top || 0;\n      r = +value.right || 0;\n      b = +value.bottom || 0;\n      l = +value.left || 0;\n    } else {\n      t = r = b = l = +value || 0;\n    }\n\n    return {\n      t: skip.top || t < 0 ? 0 : t > maxH ? maxH : t,\n      r: skip.right || r < 0 ? 0 : r > maxW ? maxW : r,\n      b: skip.bottom || b < 0 ? 0 : b > maxH ? maxH : b,\n      l: skip.left || l < 0 ? 0 : l > maxW ? maxW : l\n    };\n  }\n\n  function boundingRects(vm) {\n    var bounds = getBarBounds(vm);\n    var width = bounds.right - bounds.left;\n    var height = bounds.bottom - bounds.top;\n    var border = parseBorderWidth(vm, width / 2, height / 2);\n    return {\n      outer: {\n        x: bounds.left,\n        y: bounds.top,\n        w: width,\n        h: height\n      },\n      inner: {\n        x: bounds.left + border.l,\n        y: bounds.top + border.t,\n        w: width - border.l - border.r,\n        h: height - border.t - border.b\n      }\n    };\n  }\n\n  function _inRange(vm, x, y) {\n    var skipX = x === null;\n    var skipY = y === null;\n    var bounds = !vm || skipX && skipY ? false : getBarBounds(vm);\n    return bounds && (skipX || x >= bounds.left && x <= bounds.right) && (skipY || y >= bounds.top && y <= bounds.bottom);\n  }\n\n  var element_rectangle = core_element.extend({\n    draw: function draw() {\n      var ctx = this._chart.ctx;\n      var vm = this._view;\n      var rects = boundingRects(vm);\n      var outer = rects.outer;\n      var inner = rects.inner;\n      ctx.fillStyle = vm.backgroundColor;\n      ctx.fillRect(outer.x, outer.y, outer.w, outer.h);\n\n      if (outer.w === inner.w && outer.h === inner.h) {\n        return;\n      }\n\n      ctx.save();\n      ctx.beginPath();\n      ctx.rect(outer.x, outer.y, outer.w, outer.h);\n      ctx.clip();\n      ctx.fillStyle = vm.borderColor;\n      ctx.rect(inner.x, inner.y, inner.w, inner.h);\n      ctx.fill('evenodd');\n      ctx.restore();\n    },\n    height: function height() {\n      var vm = this._view;\n      return vm.base - vm.y;\n    },\n    inRange: function inRange(mouseX, mouseY) {\n      return _inRange(this._view, mouseX, mouseY);\n    },\n    inLabelRange: function inLabelRange(mouseX, mouseY) {\n      var vm = this._view;\n      return isVertical(vm) ? _inRange(vm, mouseX, null) : _inRange(vm, null, mouseY);\n    },\n    inXRange: function inXRange(mouseX) {\n      return _inRange(this._view, mouseX, null);\n    },\n    inYRange: function inYRange(mouseY) {\n      return _inRange(this._view, null, mouseY);\n    },\n    getCenterPoint: function getCenterPoint() {\n      var vm = this._view;\n      var x, y;\n\n      if (isVertical(vm)) {\n        x = vm.x;\n        y = (vm.y + vm.base) / 2;\n      } else {\n        x = (vm.x + vm.base) / 2;\n        y = vm.y;\n      }\n\n      return {\n        x: x,\n        y: y\n      };\n    },\n    getArea: function getArea() {\n      var vm = this._view;\n      return isVertical(vm) ? vm.width * Math.abs(vm.y - vm.base) : vm.height * Math.abs(vm.x - vm.base);\n    },\n    tooltipPosition: function tooltipPosition() {\n      var vm = this._view;\n      return {\n        x: vm.x,\n        y: vm.y\n      };\n    }\n  });\n  var elements = {};\n  var Arc = element_arc;\n  var Line = element_line;\n  var Point = element_point;\n  var Rectangle = element_rectangle;\n  elements.Arc = Arc;\n  elements.Line = Line;\n  elements.Point = Point;\n  elements.Rectangle = Rectangle;\n  var resolve$1 = helpers$1.options.resolve;\n\n  core_defaults._set('bar', {\n    hover: {\n      mode: 'label'\n    },\n    scales: {\n      xAxes: [{\n        type: 'category',\n        categoryPercentage: 0.8,\n        barPercentage: 0.9,\n        offset: true,\n        gridLines: {\n          offsetGridLines: true\n        }\n      }],\n      yAxes: [{\n        type: 'linear'\n      }]\n    }\n  });\n  /**\n   * Computes the \"optimal\" sample size to maintain bars equally sized while preventing overlap.\n   * @private\n   */\n\n\n  function computeMinSampleSize(scale, pixels) {\n    var min = scale.isHorizontal() ? scale.width : scale.height;\n    var ticks = scale.getTicks();\n    var prev, curr, i, ilen;\n\n    for (i = 1, ilen = pixels.length; i < ilen; ++i) {\n      min = Math.min(min, Math.abs(pixels[i] - pixels[i - 1]));\n    }\n\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      curr = scale.getPixelForTick(i);\n      min = i > 0 ? Math.min(min, curr - prev) : min;\n      prev = curr;\n    }\n\n    return min;\n  }\n  /**\n   * Computes an \"ideal\" category based on the absolute bar thickness or, if undefined or null,\n   * uses the smallest interval (see computeMinSampleSize) that prevents bar overlapping. This\n   * mode currently always generates bars equally sized (until we introduce scriptable options?).\n   * @private\n   */\n\n\n  function computeFitCategoryTraits(index, ruler, options) {\n    var thickness = options.barThickness;\n    var count = ruler.stackCount;\n    var curr = ruler.pixels[index];\n    var size, ratio;\n\n    if (helpers$1.isNullOrUndef(thickness)) {\n      size = ruler.min * options.categoryPercentage;\n      ratio = options.barPercentage;\n    } else {\n      // When bar thickness is enforced, category and bar percentages are ignored.\n      // Note(SB): we could add support for relative bar thickness (e.g. barThickness: '50%')\n      // and deprecate barPercentage since this value is ignored when thickness is absolute.\n      size = thickness * count;\n      ratio = 1;\n    }\n\n    return {\n      chunk: size / count,\n      ratio: ratio,\n      start: curr - size / 2\n    };\n  }\n  /**\n   * Computes an \"optimal\" category that globally arranges bars side by side (no gap when\n   * percentage options are 1), based on the previous and following categories. This mode\n   * generates bars with different widths when data are not evenly spaced.\n   * @private\n   */\n\n\n  function computeFlexCategoryTraits(index, ruler, options) {\n    var pixels = ruler.pixels;\n    var curr = pixels[index];\n    var prev = index > 0 ? pixels[index - 1] : null;\n    var next = index < pixels.length - 1 ? pixels[index + 1] : null;\n    var percent = options.categoryPercentage;\n    var start, size;\n\n    if (prev === null) {\n      // first data: its size is double based on the next point or,\n      // if it's also the last data, we use the scale size.\n      prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n    }\n\n    if (next === null) {\n      // last data: its size is also double based on the previous point.\n      next = curr + curr - prev;\n    }\n\n    start = curr - (curr - Math.min(prev, next)) / 2 * percent;\n    size = Math.abs(next - prev) / 2 * percent;\n    return {\n      chunk: size / ruler.stackCount,\n      ratio: options.barPercentage,\n      start: start\n    };\n  }\n\n  var controller_bar = core_datasetController.extend({\n    dataElementType: elements.Rectangle,\n    initialize: function initialize() {\n      var me = this;\n      var meta;\n      core_datasetController.prototype.initialize.apply(me, arguments);\n      meta = me.getMeta();\n      meta.stack = me.getDataset().stack;\n      meta.bar = true;\n    },\n    update: function update(reset) {\n      var me = this;\n      var rects = me.getMeta().data;\n      var i, ilen;\n      me._ruler = me.getRuler();\n\n      for (i = 0, ilen = rects.length; i < ilen; ++i) {\n        me.updateElement(rects[i], i, reset);\n      }\n    },\n    updateElement: function updateElement(rectangle, index, reset) {\n      var me = this;\n      var meta = me.getMeta();\n      var dataset = me.getDataset();\n\n      var options = me._resolveElementOptions(rectangle, index);\n\n      rectangle._xScale = me.getScaleForId(meta.xAxisID);\n      rectangle._yScale = me.getScaleForId(meta.yAxisID);\n      rectangle._datasetIndex = me.index;\n      rectangle._index = index;\n      rectangle._model = {\n        backgroundColor: options.backgroundColor,\n        borderColor: options.borderColor,\n        borderSkipped: options.borderSkipped,\n        borderWidth: options.borderWidth,\n        datasetLabel: dataset.label,\n        label: me.chart.data.labels[index]\n      };\n\n      me._updateElementGeometry(rectangle, index, reset);\n\n      rectangle.pivot();\n    },\n\n    /**\n     * @private\n     */\n    _updateElementGeometry: function _updateElementGeometry(rectangle, index, reset) {\n      var me = this;\n      var model = rectangle._model;\n\n      var vscale = me._getValueScale();\n\n      var base = vscale.getBasePixel();\n      var horizontal = vscale.isHorizontal();\n      var ruler = me._ruler || me.getRuler();\n      var vpixels = me.calculateBarValuePixels(me.index, index);\n      var ipixels = me.calculateBarIndexPixels(me.index, index, ruler);\n      model.horizontal = horizontal;\n      model.base = reset ? base : vpixels.base;\n      model.x = horizontal ? reset ? base : vpixels.head : ipixels.center;\n      model.y = horizontal ? ipixels.center : reset ? base : vpixels.head;\n      model.height = horizontal ? ipixels.size : undefined;\n      model.width = horizontal ? undefined : ipixels.size;\n    },\n\n    /**\n     * Returns the stacks based on groups and bar visibility.\n     * @param {number} [last] - The dataset index\n     * @returns {string[]} The list of stack IDs\n     * @private\n     */\n    _getStacks: function _getStacks(last) {\n      var me = this;\n      var chart = me.chart;\n\n      var scale = me._getIndexScale();\n\n      var stacked = scale.options.stacked;\n      var ilen = last === undefined ? chart.data.datasets.length : last + 1;\n      var stacks = [];\n      var i, meta;\n\n      for (i = 0; i < ilen; ++i) {\n        meta = chart.getDatasetMeta(i);\n\n        if (meta.bar && chart.isDatasetVisible(i) && (stacked === false || stacked === true && stacks.indexOf(meta.stack) === -1 || stacked === undefined && (meta.stack === undefined || stacks.indexOf(meta.stack) === -1))) {\n          stacks.push(meta.stack);\n        }\n      }\n\n      return stacks;\n    },\n\n    /**\n     * Returns the effective number of stacks based on groups and bar visibility.\n     * @private\n     */\n    getStackCount: function getStackCount() {\n      return this._getStacks().length;\n    },\n\n    /**\n     * Returns the stack index for the given dataset based on groups and bar visibility.\n     * @param {number} [datasetIndex] - The dataset index\n     * @param {string} [name] - The stack name to find\n     * @returns {number} The stack index\n     * @private\n     */\n    getStackIndex: function getStackIndex(datasetIndex, name) {\n      var stacks = this._getStacks(datasetIndex);\n\n      var index = name !== undefined ? stacks.indexOf(name) : -1; // indexOf returns -1 if element is not present\n\n      return index === -1 ? stacks.length - 1 : index;\n    },\n\n    /**\n     * @private\n     */\n    getRuler: function getRuler() {\n      var me = this;\n\n      var scale = me._getIndexScale();\n\n      var stackCount = me.getStackCount();\n      var datasetIndex = me.index;\n      var isHorizontal = scale.isHorizontal();\n      var start = isHorizontal ? scale.left : scale.top;\n      var end = start + (isHorizontal ? scale.width : scale.height);\n      var pixels = [];\n      var i, ilen, min;\n\n      for (i = 0, ilen = me.getMeta().data.length; i < ilen; ++i) {\n        pixels.push(scale.getPixelForValue(null, i, datasetIndex));\n      }\n\n      min = helpers$1.isNullOrUndef(scale.options.barThickness) ? computeMinSampleSize(scale, pixels) : -1;\n      return {\n        min: min,\n        pixels: pixels,\n        start: start,\n        end: end,\n        stackCount: stackCount,\n        scale: scale\n      };\n    },\n\n    /**\n     * Note: pixel values are not clamped to the scale area.\n     * @private\n     */\n    calculateBarValuePixels: function calculateBarValuePixels(datasetIndex, index) {\n      var me = this;\n      var chart = me.chart;\n      var meta = me.getMeta();\n\n      var scale = me._getValueScale();\n\n      var isHorizontal = scale.isHorizontal();\n      var datasets = chart.data.datasets;\n      var value = +scale.getRightValue(datasets[datasetIndex].data[index]);\n      var minBarLength = scale.options.minBarLength;\n      var stacked = scale.options.stacked;\n      var stack = meta.stack;\n      var start = 0;\n      var i, imeta, ivalue, base, head, size;\n\n      if (stacked || stacked === undefined && stack !== undefined) {\n        for (i = 0; i < datasetIndex; ++i) {\n          imeta = chart.getDatasetMeta(i);\n\n          if (imeta.bar && imeta.stack === stack && imeta.controller._getValueScaleId() === scale.id && chart.isDatasetVisible(i)) {\n            ivalue = +scale.getRightValue(datasets[i].data[index]);\n\n            if (value < 0 && ivalue < 0 || value >= 0 && ivalue > 0) {\n              start += ivalue;\n            }\n          }\n        }\n      }\n\n      base = scale.getPixelForValue(start);\n      head = scale.getPixelForValue(start + value);\n      size = head - base;\n\n      if (minBarLength !== undefined && Math.abs(size) < minBarLength) {\n        size = minBarLength;\n\n        if (value >= 0 && !isHorizontal || value < 0 && isHorizontal) {\n          head = base - minBarLength;\n        } else {\n          head = base + minBarLength;\n        }\n      }\n\n      return {\n        size: size,\n        base: base,\n        head: head,\n        center: head + size / 2\n      };\n    },\n\n    /**\n     * @private\n     */\n    calculateBarIndexPixels: function calculateBarIndexPixels(datasetIndex, index, ruler) {\n      var me = this;\n      var options = ruler.scale.options;\n      var range = options.barThickness === 'flex' ? computeFlexCategoryTraits(index, ruler, options) : computeFitCategoryTraits(index, ruler, options);\n      var stackIndex = me.getStackIndex(datasetIndex, me.getMeta().stack);\n      var center = range.start + range.chunk * stackIndex + range.chunk / 2;\n      var size = Math.min(helpers$1.valueOrDefault(options.maxBarThickness, Infinity), range.chunk * range.ratio);\n      return {\n        base: center - size / 2,\n        head: center + size / 2,\n        center: center,\n        size: size\n      };\n    },\n    draw: function draw() {\n      var me = this;\n      var chart = me.chart;\n\n      var scale = me._getValueScale();\n\n      var rects = me.getMeta().data;\n      var dataset = me.getDataset();\n      var ilen = rects.length;\n      var i = 0;\n      helpers$1.canvas.clipArea(chart.ctx, chart.chartArea);\n\n      for (; i < ilen; ++i) {\n        if (!isNaN(scale.getRightValue(dataset.data[i]))) {\n          rects[i].draw();\n        }\n      }\n\n      helpers$1.canvas.unclipArea(chart.ctx);\n    },\n\n    /**\n     * @private\n     */\n    _resolveElementOptions: function _resolveElementOptions(rectangle, index) {\n      var me = this;\n      var chart = me.chart;\n      var datasets = chart.data.datasets;\n      var dataset = datasets[me.index];\n      var custom = rectangle.custom || {};\n      var options = chart.options.elements.rectangle;\n      var values = {};\n      var i, ilen, key; // Scriptable options\n\n      var context = {\n        chart: chart,\n        dataIndex: index,\n        dataset: dataset,\n        datasetIndex: me.index\n      };\n      var keys = ['backgroundColor', 'borderColor', 'borderSkipped', 'borderWidth'];\n\n      for (i = 0, ilen = keys.length; i < ilen; ++i) {\n        key = keys[i];\n        values[key] = resolve$1([custom[key], dataset[key], options[key]], context, index);\n      }\n\n      return values;\n    }\n  });\n  var valueOrDefault$3 = helpers$1.valueOrDefault;\n  var resolve$2 = helpers$1.options.resolve;\n\n  core_defaults._set('bubble', {\n    hover: {\n      mode: 'single'\n    },\n    scales: {\n      xAxes: [{\n        type: 'linear',\n        // bubble should probably use a linear scale by default\n        position: 'bottom',\n        id: 'x-axis-0' // need an ID so datasets can reference the scale\n\n      }],\n      yAxes: [{\n        type: 'linear',\n        position: 'left',\n        id: 'y-axis-0'\n      }]\n    },\n    tooltips: {\n      callbacks: {\n        title: function title() {\n          // Title doesn't make sense for scatter since we format the data as a point\n          return '';\n        },\n        label: function label(item, data) {\n          var datasetLabel = data.datasets[item.datasetIndex].label || '';\n          var dataPoint = data.datasets[item.datasetIndex].data[item.index];\n          return datasetLabel + ': (' + item.xLabel + ', ' + item.yLabel + ', ' + dataPoint.r + ')';\n        }\n      }\n    }\n  });\n\n  var controller_bubble = core_datasetController.extend({\n    /**\n     * @protected\n     */\n    dataElementType: elements.Point,\n\n    /**\n     * @protected\n     */\n    update: function update(reset) {\n      var me = this;\n      var meta = me.getMeta();\n      var points = meta.data; // Update Points\n\n      helpers$1.each(points, function (point, index) {\n        me.updateElement(point, index, reset);\n      });\n    },\n\n    /**\n     * @protected\n     */\n    updateElement: function updateElement(point, index, reset) {\n      var me = this;\n      var meta = me.getMeta();\n      var custom = point.custom || {};\n      var xScale = me.getScaleForId(meta.xAxisID);\n      var yScale = me.getScaleForId(meta.yAxisID);\n\n      var options = me._resolveElementOptions(point, index);\n\n      var data = me.getDataset().data[index];\n      var dsIndex = me.index;\n      var x = reset ? xScale.getPixelForDecimal(0.5) : xScale.getPixelForValue(typeof data === 'object' ? data : NaN, index, dsIndex);\n      var y = reset ? yScale.getBasePixel() : yScale.getPixelForValue(data, index, dsIndex);\n      point._xScale = xScale;\n      point._yScale = yScale;\n      point._options = options;\n      point._datasetIndex = dsIndex;\n      point._index = index;\n      point._model = {\n        backgroundColor: options.backgroundColor,\n        borderColor: options.borderColor,\n        borderWidth: options.borderWidth,\n        hitRadius: options.hitRadius,\n        pointStyle: options.pointStyle,\n        rotation: options.rotation,\n        radius: reset ? 0 : options.radius,\n        skip: custom.skip || isNaN(x) || isNaN(y),\n        x: x,\n        y: y\n      };\n      point.pivot();\n    },\n\n    /**\n     * @protected\n     */\n    setHoverStyle: function setHoverStyle(point) {\n      var model = point._model;\n      var options = point._options;\n      var getHoverColor = helpers$1.getHoverColor;\n      point.$previousStyle = {\n        backgroundColor: model.backgroundColor,\n        borderColor: model.borderColor,\n        borderWidth: model.borderWidth,\n        radius: model.radius\n      };\n      model.backgroundColor = valueOrDefault$3(options.hoverBackgroundColor, getHoverColor(options.backgroundColor));\n      model.borderColor = valueOrDefault$3(options.hoverBorderColor, getHoverColor(options.borderColor));\n      model.borderWidth = valueOrDefault$3(options.hoverBorderWidth, options.borderWidth);\n      model.radius = options.radius + options.hoverRadius;\n    },\n\n    /**\n     * @private\n     */\n    _resolveElementOptions: function _resolveElementOptions(point, index) {\n      var me = this;\n      var chart = me.chart;\n      var datasets = chart.data.datasets;\n      var dataset = datasets[me.index];\n      var custom = point.custom || {};\n      var options = chart.options.elements.point;\n      var data = dataset.data[index];\n      var values = {};\n      var i, ilen, key; // Scriptable options\n\n      var context = {\n        chart: chart,\n        dataIndex: index,\n        dataset: dataset,\n        datasetIndex: me.index\n      };\n      var keys = ['backgroundColor', 'borderColor', 'borderWidth', 'hoverBackgroundColor', 'hoverBorderColor', 'hoverBorderWidth', 'hoverRadius', 'hitRadius', 'pointStyle', 'rotation'];\n\n      for (i = 0, ilen = keys.length; i < ilen; ++i) {\n        key = keys[i];\n        values[key] = resolve$2([custom[key], dataset[key], options[key]], context, index);\n      } // Custom radius resolution\n\n\n      values.radius = resolve$2([custom.radius, data ? data.r : undefined, dataset.radius, options.radius], context, index);\n      return values;\n    }\n  });\n  var resolve$3 = helpers$1.options.resolve;\n  var valueOrDefault$4 = helpers$1.valueOrDefault;\n\n  core_defaults._set('doughnut', {\n    animation: {\n      // Boolean - Whether we animate the rotation of the Doughnut\n      animateRotate: true,\n      // Boolean - Whether we animate scaling the Doughnut from the centre\n      animateScale: false\n    },\n    hover: {\n      mode: 'single'\n    },\n    legendCallback: function legendCallback(chart) {\n      var text = [];\n      text.push('<ul class=\"' + chart.id + '-legend\">');\n      var data = chart.data;\n      var datasets = data.datasets;\n      var labels = data.labels;\n\n      if (datasets.length) {\n        for (var i = 0; i < datasets[0].data.length; ++i) {\n          text.push('<li><span style=\"background-color:' + datasets[0].backgroundColor[i] + '\"></span>');\n\n          if (labels[i]) {\n            text.push(labels[i]);\n          }\n\n          text.push('</li>');\n        }\n      }\n\n      text.push('</ul>');\n      return text.join('');\n    },\n    legend: {\n      labels: {\n        generateLabels: function generateLabels(chart) {\n          var data = chart.data;\n\n          if (data.labels.length && data.datasets.length) {\n            return data.labels.map(function (label, i) {\n              var meta = chart.getDatasetMeta(0);\n              var ds = data.datasets[0];\n              var arc = meta.data[i];\n              var custom = arc && arc.custom || {};\n              var arcOpts = chart.options.elements.arc;\n              var fill = resolve$3([custom.backgroundColor, ds.backgroundColor, arcOpts.backgroundColor], undefined, i);\n              var stroke = resolve$3([custom.borderColor, ds.borderColor, arcOpts.borderColor], undefined, i);\n              var bw = resolve$3([custom.borderWidth, ds.borderWidth, arcOpts.borderWidth], undefined, i);\n              return {\n                text: label,\n                fillStyle: fill,\n                strokeStyle: stroke,\n                lineWidth: bw,\n                hidden: isNaN(ds.data[i]) || meta.data[i].hidden,\n                // Extra data used for toggling the correct item\n                index: i\n              };\n            });\n          }\n\n          return [];\n        }\n      },\n      onClick: function onClick(e, legendItem) {\n        var index = legendItem.index;\n        var chart = this.chart;\n        var i, ilen, meta;\n\n        for (i = 0, ilen = (chart.data.datasets || []).length; i < ilen; ++i) {\n          meta = chart.getDatasetMeta(i); // toggle visibility of index if exists\n\n          if (meta.data[index]) {\n            meta.data[index].hidden = !meta.data[index].hidden;\n          }\n        }\n\n        chart.update();\n      }\n    },\n    // The percentage of the chart that we cut out of the middle.\n    cutoutPercentage: 50,\n    // The rotation of the chart, where the first data arc begins.\n    rotation: Math.PI * -0.5,\n    // The total circumference of the chart.\n    circumference: Math.PI * 2.0,\n    // Need to override these to give a nice default\n    tooltips: {\n      callbacks: {\n        title: function title() {\n          return '';\n        },\n        label: function label(tooltipItem, data) {\n          var dataLabel = data.labels[tooltipItem.index];\n          var value = ': ' + data.datasets[tooltipItem.datasetIndex].data[tooltipItem.index];\n\n          if (helpers$1.isArray(dataLabel)) {\n            // show value on first line of multiline label\n            // need to clone because we are changing the value\n            dataLabel = dataLabel.slice();\n            dataLabel[0] += value;\n          } else {\n            dataLabel += value;\n          }\n\n          return dataLabel;\n        }\n      }\n    }\n  });\n\n  var controller_doughnut = core_datasetController.extend({\n    dataElementType: elements.Arc,\n    linkScales: helpers$1.noop,\n    // Get index of the dataset in relation to the visible datasets. This allows determining the inner and outer radius correctly\n    getRingIndex: function getRingIndex(datasetIndex) {\n      var ringIndex = 0;\n\n      for (var j = 0; j < datasetIndex; ++j) {\n        if (this.chart.isDatasetVisible(j)) {\n          ++ringIndex;\n        }\n      }\n\n      return ringIndex;\n    },\n    update: function update(reset) {\n      var me = this;\n      var chart = me.chart;\n      var chartArea = chart.chartArea;\n      var opts = chart.options;\n      var availableWidth = chartArea.right - chartArea.left;\n      var availableHeight = chartArea.bottom - chartArea.top;\n      var minSize = Math.min(availableWidth, availableHeight);\n      var offset = {\n        x: 0,\n        y: 0\n      };\n      var meta = me.getMeta();\n      var arcs = meta.data;\n      var cutoutPercentage = opts.cutoutPercentage;\n      var circumference = opts.circumference;\n\n      var chartWeight = me._getRingWeight(me.index);\n\n      var i, ilen; // If the chart's circumference isn't a full circle, calculate minSize as a ratio of the width/height of the arc\n\n      if (circumference < Math.PI * 2.0) {\n        var startAngle = opts.rotation % (Math.PI * 2.0);\n        startAngle += Math.PI * 2.0 * (startAngle >= Math.PI ? -1 : startAngle < -Math.PI ? 1 : 0);\n        var endAngle = startAngle + circumference;\n        var start = {\n          x: Math.cos(startAngle),\n          y: Math.sin(startAngle)\n        };\n        var end = {\n          x: Math.cos(endAngle),\n          y: Math.sin(endAngle)\n        };\n        var contains0 = startAngle <= 0 && endAngle >= 0 || startAngle <= Math.PI * 2.0 && Math.PI * 2.0 <= endAngle;\n        var contains90 = startAngle <= Math.PI * 0.5 && Math.PI * 0.5 <= endAngle || startAngle <= Math.PI * 2.5 && Math.PI * 2.5 <= endAngle;\n        var contains180 = startAngle <= -Math.PI && -Math.PI <= endAngle || startAngle <= Math.PI && Math.PI <= endAngle;\n        var contains270 = startAngle <= -Math.PI * 0.5 && -Math.PI * 0.5 <= endAngle || startAngle <= Math.PI * 1.5 && Math.PI * 1.5 <= endAngle;\n        var cutout = cutoutPercentage / 100.0;\n        var min = {\n          x: contains180 ? -1 : Math.min(start.x * (start.x < 0 ? 1 : cutout), end.x * (end.x < 0 ? 1 : cutout)),\n          y: contains270 ? -1 : Math.min(start.y * (start.y < 0 ? 1 : cutout), end.y * (end.y < 0 ? 1 : cutout))\n        };\n        var max = {\n          x: contains0 ? 1 : Math.max(start.x * (start.x > 0 ? 1 : cutout), end.x * (end.x > 0 ? 1 : cutout)),\n          y: contains90 ? 1 : Math.max(start.y * (start.y > 0 ? 1 : cutout), end.y * (end.y > 0 ? 1 : cutout))\n        };\n        var size = {\n          width: (max.x - min.x) * 0.5,\n          height: (max.y - min.y) * 0.5\n        };\n        minSize = Math.min(availableWidth / size.width, availableHeight / size.height);\n        offset = {\n          x: (max.x + min.x) * -0.5,\n          y: (max.y + min.y) * -0.5\n        };\n      }\n\n      for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n        arcs[i]._options = me._resolveElementOptions(arcs[i], i);\n      }\n\n      chart.borderWidth = me.getMaxBorderWidth();\n      chart.outerRadius = Math.max((minSize - chart.borderWidth) / 2, 0);\n      chart.innerRadius = Math.max(cutoutPercentage ? chart.outerRadius / 100 * cutoutPercentage : 0, 0);\n      chart.radiusLength = (chart.outerRadius - chart.innerRadius) / (me._getVisibleDatasetWeightTotal() || 1);\n      chart.offsetX = offset.x * chart.outerRadius;\n      chart.offsetY = offset.y * chart.outerRadius;\n      meta.total = me.calculateTotal();\n      me.outerRadius = chart.outerRadius - chart.radiusLength * me._getRingWeightOffset(me.index);\n      me.innerRadius = Math.max(me.outerRadius - chart.radiusLength * chartWeight, 0);\n\n      for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n        me.updateElement(arcs[i], i, reset);\n      }\n    },\n    updateElement: function updateElement(arc, index, reset) {\n      var me = this;\n      var chart = me.chart;\n      var chartArea = chart.chartArea;\n      var opts = chart.options;\n      var animationOpts = opts.animation;\n      var centerX = (chartArea.left + chartArea.right) / 2;\n      var centerY = (chartArea.top + chartArea.bottom) / 2;\n      var startAngle = opts.rotation; // non reset case handled later\n\n      var endAngle = opts.rotation; // non reset case handled later\n\n      var dataset = me.getDataset();\n      var circumference = reset && animationOpts.animateRotate ? 0 : arc.hidden ? 0 : me.calculateCircumference(dataset.data[index]) * (opts.circumference / (2.0 * Math.PI));\n      var innerRadius = reset && animationOpts.animateScale ? 0 : me.innerRadius;\n      var outerRadius = reset && animationOpts.animateScale ? 0 : me.outerRadius;\n      var options = arc._options || {};\n      helpers$1.extend(arc, {\n        // Utility\n        _datasetIndex: me.index,\n        _index: index,\n        // Desired view properties\n        _model: {\n          backgroundColor: options.backgroundColor,\n          borderColor: options.borderColor,\n          borderWidth: options.borderWidth,\n          borderAlign: options.borderAlign,\n          x: centerX + chart.offsetX,\n          y: centerY + chart.offsetY,\n          startAngle: startAngle,\n          endAngle: endAngle,\n          circumference: circumference,\n          outerRadius: outerRadius,\n          innerRadius: innerRadius,\n          label: helpers$1.valueAtIndexOrDefault(dataset.label, index, chart.data.labels[index])\n        }\n      });\n      var model = arc._model; // Set correct angles if not resetting\n\n      if (!reset || !animationOpts.animateRotate) {\n        if (index === 0) {\n          model.startAngle = opts.rotation;\n        } else {\n          model.startAngle = me.getMeta().data[index - 1]._model.endAngle;\n        }\n\n        model.endAngle = model.startAngle + model.circumference;\n      }\n\n      arc.pivot();\n    },\n    calculateTotal: function calculateTotal() {\n      var dataset = this.getDataset();\n      var meta = this.getMeta();\n      var total = 0;\n      var value;\n      helpers$1.each(meta.data, function (element, index) {\n        value = dataset.data[index];\n\n        if (!isNaN(value) && !element.hidden) {\n          total += Math.abs(value);\n        }\n      });\n      /* if (total === 0) {\n      \ttotal = NaN;\n      }*/\n\n      return total;\n    },\n    calculateCircumference: function calculateCircumference(value) {\n      var total = this.getMeta().total;\n\n      if (total > 0 && !isNaN(value)) {\n        return Math.PI * 2.0 * (Math.abs(value) / total);\n      }\n\n      return 0;\n    },\n    // gets the max border or hover width to properly scale pie charts\n    getMaxBorderWidth: function getMaxBorderWidth(arcs) {\n      var me = this;\n      var max = 0;\n      var chart = me.chart;\n      var i, ilen, meta, arc, controller, options, borderWidth, hoverWidth;\n\n      if (!arcs) {\n        // Find the outmost visible dataset\n        for (i = 0, ilen = chart.data.datasets.length; i < ilen; ++i) {\n          if (chart.isDatasetVisible(i)) {\n            meta = chart.getDatasetMeta(i);\n            arcs = meta.data;\n\n            if (i !== me.index) {\n              controller = meta.controller;\n            }\n\n            break;\n          }\n        }\n      }\n\n      if (!arcs) {\n        return 0;\n      }\n\n      for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n        arc = arcs[i];\n        options = controller ? controller._resolveElementOptions(arc, i) : arc._options;\n\n        if (options.borderAlign !== 'inner') {\n          borderWidth = options.borderWidth;\n          hoverWidth = options.hoverBorderWidth;\n          max = borderWidth > max ? borderWidth : max;\n          max = hoverWidth > max ? hoverWidth : max;\n        }\n      }\n\n      return max;\n    },\n\n    /**\n     * @protected\n     */\n    setHoverStyle: function setHoverStyle(arc) {\n      var model = arc._model;\n      var options = arc._options;\n      var getHoverColor = helpers$1.getHoverColor;\n      arc.$previousStyle = {\n        backgroundColor: model.backgroundColor,\n        borderColor: model.borderColor,\n        borderWidth: model.borderWidth\n      };\n      model.backgroundColor = valueOrDefault$4(options.hoverBackgroundColor, getHoverColor(options.backgroundColor));\n      model.borderColor = valueOrDefault$4(options.hoverBorderColor, getHoverColor(options.borderColor));\n      model.borderWidth = valueOrDefault$4(options.hoverBorderWidth, options.borderWidth);\n    },\n\n    /**\n     * @private\n     */\n    _resolveElementOptions: function _resolveElementOptions(arc, index) {\n      var me = this;\n      var chart = me.chart;\n      var dataset = me.getDataset();\n      var custom = arc.custom || {};\n      var options = chart.options.elements.arc;\n      var values = {};\n      var i, ilen, key; // Scriptable options\n\n      var context = {\n        chart: chart,\n        dataIndex: index,\n        dataset: dataset,\n        datasetIndex: me.index\n      };\n      var keys = ['backgroundColor', 'borderColor', 'borderWidth', 'borderAlign', 'hoverBackgroundColor', 'hoverBorderColor', 'hoverBorderWidth'];\n\n      for (i = 0, ilen = keys.length; i < ilen; ++i) {\n        key = keys[i];\n        values[key] = resolve$3([custom[key], dataset[key], options[key]], context, index);\n      }\n\n      return values;\n    },\n\n    /**\n     * Get radius length offset of the dataset in relation to the visible datasets weights. This allows determining the inner and outer radius correctly\n     * @private\n     */\n    _getRingWeightOffset: function _getRingWeightOffset(datasetIndex) {\n      var ringWeightOffset = 0;\n\n      for (var i = 0; i < datasetIndex; ++i) {\n        if (this.chart.isDatasetVisible(i)) {\n          ringWeightOffset += this._getRingWeight(i);\n        }\n      }\n\n      return ringWeightOffset;\n    },\n\n    /**\n     * @private\n     */\n    _getRingWeight: function _getRingWeight(dataSetIndex) {\n      return Math.max(valueOrDefault$4(this.chart.data.datasets[dataSetIndex].weight, 1), 0);\n    },\n\n    /**\n     * Returns the sum of all visibile data set weights.  This value can be 0.\n     * @private\n     */\n    _getVisibleDatasetWeightTotal: function _getVisibleDatasetWeightTotal() {\n      return this._getRingWeightOffset(this.chart.data.datasets.length);\n    }\n  });\n\n  core_defaults._set('horizontalBar', {\n    hover: {\n      mode: 'index',\n      axis: 'y'\n    },\n    scales: {\n      xAxes: [{\n        type: 'linear',\n        position: 'bottom'\n      }],\n      yAxes: [{\n        type: 'category',\n        position: 'left',\n        categoryPercentage: 0.8,\n        barPercentage: 0.9,\n        offset: true,\n        gridLines: {\n          offsetGridLines: true\n        }\n      }]\n    },\n    elements: {\n      rectangle: {\n        borderSkipped: 'left'\n      }\n    },\n    tooltips: {\n      mode: 'index',\n      axis: 'y'\n    }\n  });\n\n  var controller_horizontalBar = controller_bar.extend({\n    /**\n     * @private\n     */\n    _getValueScaleId: function _getValueScaleId() {\n      return this.getMeta().xAxisID;\n    },\n\n    /**\n     * @private\n     */\n    _getIndexScaleId: function _getIndexScaleId() {\n      return this.getMeta().yAxisID;\n    }\n  });\n  var valueOrDefault$5 = helpers$1.valueOrDefault;\n  var resolve$4 = helpers$1.options.resolve;\n  var isPointInArea = helpers$1.canvas._isPointInArea;\n\n  core_defaults._set('line', {\n    showLines: true,\n    spanGaps: false,\n    hover: {\n      mode: 'label'\n    },\n    scales: {\n      xAxes: [{\n        type: 'category',\n        id: 'x-axis-0'\n      }],\n      yAxes: [{\n        type: 'linear',\n        id: 'y-axis-0'\n      }]\n    }\n  });\n\n  function lineEnabled(dataset, options) {\n    return valueOrDefault$5(dataset.showLine, options.showLines);\n  }\n\n  var controller_line = core_datasetController.extend({\n    datasetElementType: elements.Line,\n    dataElementType: elements.Point,\n    update: function update(reset) {\n      var me = this;\n      var meta = me.getMeta();\n      var line = meta.dataset;\n      var points = meta.data || [];\n      var scale = me.getScaleForId(meta.yAxisID);\n      var dataset = me.getDataset();\n      var showLine = lineEnabled(dataset, me.chart.options);\n      var i, ilen; // Update Line\n\n      if (showLine) {\n        // Compatibility: If the properties are defined with only the old name, use those values\n        if (dataset.tension !== undefined && dataset.lineTension === undefined) {\n          dataset.lineTension = dataset.tension;\n        } // Utility\n\n\n        line._scale = scale;\n        line._datasetIndex = me.index; // Data\n\n        line._children = points; // Model\n\n        line._model = me._resolveLineOptions(line);\n        line.pivot();\n      } // Update Points\n\n\n      for (i = 0, ilen = points.length; i < ilen; ++i) {\n        me.updateElement(points[i], i, reset);\n      }\n\n      if (showLine && line._model.tension !== 0) {\n        me.updateBezierControlPoints();\n      } // Now pivot the point for animation\n\n\n      for (i = 0, ilen = points.length; i < ilen; ++i) {\n        points[i].pivot();\n      }\n    },\n    updateElement: function updateElement(point, index, reset) {\n      var me = this;\n      var meta = me.getMeta();\n      var custom = point.custom || {};\n      var dataset = me.getDataset();\n      var datasetIndex = me.index;\n      var value = dataset.data[index];\n      var yScale = me.getScaleForId(meta.yAxisID);\n      var xScale = me.getScaleForId(meta.xAxisID);\n      var lineModel = meta.dataset._model;\n      var x, y;\n\n      var options = me._resolvePointOptions(point, index);\n\n      x = xScale.getPixelForValue(typeof value === 'object' ? value : NaN, index, datasetIndex);\n      y = reset ? yScale.getBasePixel() : me.calculatePointY(value, index, datasetIndex); // Utility\n\n      point._xScale = xScale;\n      point._yScale = yScale;\n      point._options = options;\n      point._datasetIndex = datasetIndex;\n      point._index = index; // Desired view properties\n\n      point._model = {\n        x: x,\n        y: y,\n        skip: custom.skip || isNaN(x) || isNaN(y),\n        // Appearance\n        radius: options.radius,\n        pointStyle: options.pointStyle,\n        rotation: options.rotation,\n        backgroundColor: options.backgroundColor,\n        borderColor: options.borderColor,\n        borderWidth: options.borderWidth,\n        tension: valueOrDefault$5(custom.tension, lineModel ? lineModel.tension : 0),\n        steppedLine: lineModel ? lineModel.steppedLine : false,\n        // Tooltip\n        hitRadius: options.hitRadius\n      };\n    },\n\n    /**\n     * @private\n     */\n    _resolvePointOptions: function _resolvePointOptions(element, index) {\n      var me = this;\n      var chart = me.chart;\n      var dataset = chart.data.datasets[me.index];\n      var custom = element.custom || {};\n      var options = chart.options.elements.point;\n      var values = {};\n      var i, ilen, key; // Scriptable options\n\n      var context = {\n        chart: chart,\n        dataIndex: index,\n        dataset: dataset,\n        datasetIndex: me.index\n      };\n      var ELEMENT_OPTIONS = {\n        backgroundColor: 'pointBackgroundColor',\n        borderColor: 'pointBorderColor',\n        borderWidth: 'pointBorderWidth',\n        hitRadius: 'pointHitRadius',\n        hoverBackgroundColor: 'pointHoverBackgroundColor',\n        hoverBorderColor: 'pointHoverBorderColor',\n        hoverBorderWidth: 'pointHoverBorderWidth',\n        hoverRadius: 'pointHoverRadius',\n        pointStyle: 'pointStyle',\n        radius: 'pointRadius',\n        rotation: 'pointRotation'\n      };\n      var keys = Object.keys(ELEMENT_OPTIONS);\n\n      for (i = 0, ilen = keys.length; i < ilen; ++i) {\n        key = keys[i];\n        values[key] = resolve$4([custom[key], dataset[ELEMENT_OPTIONS[key]], dataset[key], options[key]], context, index);\n      }\n\n      return values;\n    },\n\n    /**\n     * @private\n     */\n    _resolveLineOptions: function _resolveLineOptions(element) {\n      var me = this;\n      var chart = me.chart;\n      var dataset = chart.data.datasets[me.index];\n      var custom = element.custom || {};\n      var options = chart.options;\n      var elementOptions = options.elements.line;\n      var values = {};\n      var i, ilen, key;\n      var keys = ['backgroundColor', 'borderWidth', 'borderColor', 'borderCapStyle', 'borderDash', 'borderDashOffset', 'borderJoinStyle', 'fill', 'cubicInterpolationMode'];\n\n      for (i = 0, ilen = keys.length; i < ilen; ++i) {\n        key = keys[i];\n        values[key] = resolve$4([custom[key], dataset[key], elementOptions[key]]);\n      } // The default behavior of lines is to break at null values, according\n      // to https://github.com/chartjs/Chart.js/issues/2435#issuecomment-216718158\n      // This option gives lines the ability to span gaps\n\n\n      values.spanGaps = valueOrDefault$5(dataset.spanGaps, options.spanGaps);\n      values.tension = valueOrDefault$5(dataset.lineTension, elementOptions.tension);\n      values.steppedLine = resolve$4([custom.steppedLine, dataset.steppedLine, elementOptions.stepped]);\n      return values;\n    },\n    calculatePointY: function calculatePointY(value, index, datasetIndex) {\n      var me = this;\n      var chart = me.chart;\n      var meta = me.getMeta();\n      var yScale = me.getScaleForId(meta.yAxisID);\n      var sumPos = 0;\n      var sumNeg = 0;\n      var i, ds, dsMeta;\n\n      if (yScale.options.stacked) {\n        for (i = 0; i < datasetIndex; i++) {\n          ds = chart.data.datasets[i];\n          dsMeta = chart.getDatasetMeta(i);\n\n          if (dsMeta.type === 'line' && dsMeta.yAxisID === yScale.id && chart.isDatasetVisible(i)) {\n            var stackedRightValue = Number(yScale.getRightValue(ds.data[index]));\n\n            if (stackedRightValue < 0) {\n              sumNeg += stackedRightValue || 0;\n            } else {\n              sumPos += stackedRightValue || 0;\n            }\n          }\n        }\n\n        var rightValue = Number(yScale.getRightValue(value));\n\n        if (rightValue < 0) {\n          return yScale.getPixelForValue(sumNeg + rightValue);\n        }\n\n        return yScale.getPixelForValue(sumPos + rightValue);\n      }\n\n      return yScale.getPixelForValue(value);\n    },\n    updateBezierControlPoints: function updateBezierControlPoints() {\n      var me = this;\n      var chart = me.chart;\n      var meta = me.getMeta();\n      var lineModel = meta.dataset._model;\n      var area = chart.chartArea;\n      var points = meta.data || [];\n      var i, ilen, model, controlPoints; // Only consider points that are drawn in case the spanGaps option is used\n\n      if (lineModel.spanGaps) {\n        points = points.filter(function (pt) {\n          return !pt._model.skip;\n        });\n      }\n\n      function capControlPoint(pt, min, max) {\n        return Math.max(Math.min(pt, max), min);\n      }\n\n      if (lineModel.cubicInterpolationMode === 'monotone') {\n        helpers$1.splineCurveMonotone(points);\n      } else {\n        for (i = 0, ilen = points.length; i < ilen; ++i) {\n          model = points[i]._model;\n          controlPoints = helpers$1.splineCurve(helpers$1.previousItem(points, i)._model, model, helpers$1.nextItem(points, i)._model, lineModel.tension);\n          model.controlPointPreviousX = controlPoints.previous.x;\n          model.controlPointPreviousY = controlPoints.previous.y;\n          model.controlPointNextX = controlPoints.next.x;\n          model.controlPointNextY = controlPoints.next.y;\n        }\n      }\n\n      if (chart.options.elements.line.capBezierPoints) {\n        for (i = 0, ilen = points.length; i < ilen; ++i) {\n          model = points[i]._model;\n\n          if (isPointInArea(model, area)) {\n            if (i > 0 && isPointInArea(points[i - 1]._model, area)) {\n              model.controlPointPreviousX = capControlPoint(model.controlPointPreviousX, area.left, area.right);\n              model.controlPointPreviousY = capControlPoint(model.controlPointPreviousY, area.top, area.bottom);\n            }\n\n            if (i < points.length - 1 && isPointInArea(points[i + 1]._model, area)) {\n              model.controlPointNextX = capControlPoint(model.controlPointNextX, area.left, area.right);\n              model.controlPointNextY = capControlPoint(model.controlPointNextY, area.top, area.bottom);\n            }\n          }\n        }\n      }\n    },\n    draw: function draw() {\n      var me = this;\n      var chart = me.chart;\n      var meta = me.getMeta();\n      var points = meta.data || [];\n      var area = chart.chartArea;\n      var ilen = points.length;\n      var halfBorderWidth;\n      var i = 0;\n\n      if (lineEnabled(me.getDataset(), chart.options)) {\n        halfBorderWidth = (meta.dataset._model.borderWidth || 0) / 2;\n        helpers$1.canvas.clipArea(chart.ctx, {\n          left: area.left,\n          right: area.right,\n          top: area.top - halfBorderWidth,\n          bottom: area.bottom + halfBorderWidth\n        });\n        meta.dataset.draw();\n        helpers$1.canvas.unclipArea(chart.ctx);\n      } // Draw the points\n\n\n      for (; i < ilen; ++i) {\n        points[i].draw(area);\n      }\n    },\n\n    /**\n     * @protected\n     */\n    setHoverStyle: function setHoverStyle(point) {\n      var model = point._model;\n      var options = point._options;\n      var getHoverColor = helpers$1.getHoverColor;\n      point.$previousStyle = {\n        backgroundColor: model.backgroundColor,\n        borderColor: model.borderColor,\n        borderWidth: model.borderWidth,\n        radius: model.radius\n      };\n      model.backgroundColor = valueOrDefault$5(options.hoverBackgroundColor, getHoverColor(options.backgroundColor));\n      model.borderColor = valueOrDefault$5(options.hoverBorderColor, getHoverColor(options.borderColor));\n      model.borderWidth = valueOrDefault$5(options.hoverBorderWidth, options.borderWidth);\n      model.radius = valueOrDefault$5(options.hoverRadius, options.radius);\n    }\n  });\n  var resolve$5 = helpers$1.options.resolve;\n\n  core_defaults._set('polarArea', {\n    scale: {\n      type: 'radialLinear',\n      angleLines: {\n        display: false\n      },\n      gridLines: {\n        circular: true\n      },\n      pointLabels: {\n        display: false\n      },\n      ticks: {\n        beginAtZero: true\n      }\n    },\n    // Boolean - Whether to animate the rotation of the chart\n    animation: {\n      animateRotate: true,\n      animateScale: true\n    },\n    startAngle: -0.5 * Math.PI,\n    legendCallback: function legendCallback(chart) {\n      var text = [];\n      text.push('<ul class=\"' + chart.id + '-legend\">');\n      var data = chart.data;\n      var datasets = data.datasets;\n      var labels = data.labels;\n\n      if (datasets.length) {\n        for (var i = 0; i < datasets[0].data.length; ++i) {\n          text.push('<li><span style=\"background-color:' + datasets[0].backgroundColor[i] + '\"></span>');\n\n          if (labels[i]) {\n            text.push(labels[i]);\n          }\n\n          text.push('</li>');\n        }\n      }\n\n      text.push('</ul>');\n      return text.join('');\n    },\n    legend: {\n      labels: {\n        generateLabels: function generateLabels(chart) {\n          var data = chart.data;\n\n          if (data.labels.length && data.datasets.length) {\n            return data.labels.map(function (label, i) {\n              var meta = chart.getDatasetMeta(0);\n              var ds = data.datasets[0];\n              var arc = meta.data[i];\n              var custom = arc.custom || {};\n              var arcOpts = chart.options.elements.arc;\n              var fill = resolve$5([custom.backgroundColor, ds.backgroundColor, arcOpts.backgroundColor], undefined, i);\n              var stroke = resolve$5([custom.borderColor, ds.borderColor, arcOpts.borderColor], undefined, i);\n              var bw = resolve$5([custom.borderWidth, ds.borderWidth, arcOpts.borderWidth], undefined, i);\n              return {\n                text: label,\n                fillStyle: fill,\n                strokeStyle: stroke,\n                lineWidth: bw,\n                hidden: isNaN(ds.data[i]) || meta.data[i].hidden,\n                // Extra data used for toggling the correct item\n                index: i\n              };\n            });\n          }\n\n          return [];\n        }\n      },\n      onClick: function onClick(e, legendItem) {\n        var index = legendItem.index;\n        var chart = this.chart;\n        var i, ilen, meta;\n\n        for (i = 0, ilen = (chart.data.datasets || []).length; i < ilen; ++i) {\n          meta = chart.getDatasetMeta(i);\n          meta.data[index].hidden = !meta.data[index].hidden;\n        }\n\n        chart.update();\n      }\n    },\n    // Need to override these to give a nice default\n    tooltips: {\n      callbacks: {\n        title: function title() {\n          return '';\n        },\n        label: function label(item, data) {\n          return data.labels[item.index] + ': ' + item.yLabel;\n        }\n      }\n    }\n  });\n\n  var controller_polarArea = core_datasetController.extend({\n    dataElementType: elements.Arc,\n    linkScales: helpers$1.noop,\n    update: function update(reset) {\n      var me = this;\n      var dataset = me.getDataset();\n      var meta = me.getMeta();\n      var start = me.chart.options.startAngle || 0;\n      var starts = me._starts = [];\n      var angles = me._angles = [];\n      var arcs = meta.data;\n      var i, ilen, angle;\n\n      me._updateRadius();\n\n      meta.count = me.countVisibleElements();\n\n      for (i = 0, ilen = dataset.data.length; i < ilen; i++) {\n        starts[i] = start;\n        angle = me._computeAngle(i);\n        angles[i] = angle;\n        start += angle;\n      }\n\n      for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n        arcs[i]._options = me._resolveElementOptions(arcs[i], i);\n        me.updateElement(arcs[i], i, reset);\n      }\n    },\n\n    /**\n     * @private\n     */\n    _updateRadius: function _updateRadius() {\n      var me = this;\n      var chart = me.chart;\n      var chartArea = chart.chartArea;\n      var opts = chart.options;\n      var minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n      chart.outerRadius = Math.max(minSize / 2, 0);\n      chart.innerRadius = Math.max(opts.cutoutPercentage ? chart.outerRadius / 100 * opts.cutoutPercentage : 1, 0);\n      chart.radiusLength = (chart.outerRadius - chart.innerRadius) / chart.getVisibleDatasetCount();\n      me.outerRadius = chart.outerRadius - chart.radiusLength * me.index;\n      me.innerRadius = me.outerRadius - chart.radiusLength;\n    },\n    updateElement: function updateElement(arc, index, reset) {\n      var me = this;\n      var chart = me.chart;\n      var dataset = me.getDataset();\n      var opts = chart.options;\n      var animationOpts = opts.animation;\n      var scale = chart.scale;\n      var labels = chart.data.labels;\n      var centerX = scale.xCenter;\n      var centerY = scale.yCenter; // var negHalfPI = -0.5 * Math.PI;\n\n      var datasetStartAngle = opts.startAngle;\n      var distance = arc.hidden ? 0 : scale.getDistanceFromCenterForValue(dataset.data[index]);\n      var startAngle = me._starts[index];\n      var endAngle = startAngle + (arc.hidden ? 0 : me._angles[index]);\n      var resetRadius = animationOpts.animateScale ? 0 : scale.getDistanceFromCenterForValue(dataset.data[index]);\n      var options = arc._options || {};\n      helpers$1.extend(arc, {\n        // Utility\n        _datasetIndex: me.index,\n        _index: index,\n        _scale: scale,\n        // Desired view properties\n        _model: {\n          backgroundColor: options.backgroundColor,\n          borderColor: options.borderColor,\n          borderWidth: options.borderWidth,\n          borderAlign: options.borderAlign,\n          x: centerX,\n          y: centerY,\n          innerRadius: 0,\n          outerRadius: reset ? resetRadius : distance,\n          startAngle: reset && animationOpts.animateRotate ? datasetStartAngle : startAngle,\n          endAngle: reset && animationOpts.animateRotate ? datasetStartAngle : endAngle,\n          label: helpers$1.valueAtIndexOrDefault(labels, index, labels[index])\n        }\n      });\n      arc.pivot();\n    },\n    countVisibleElements: function countVisibleElements() {\n      var dataset = this.getDataset();\n      var meta = this.getMeta();\n      var count = 0;\n      helpers$1.each(meta.data, function (element, index) {\n        if (!isNaN(dataset.data[index]) && !element.hidden) {\n          count++;\n        }\n      });\n      return count;\n    },\n\n    /**\n     * @protected\n     */\n    setHoverStyle: function setHoverStyle(arc) {\n      var model = arc._model;\n      var options = arc._options;\n      var getHoverColor = helpers$1.getHoverColor;\n      var valueOrDefault = helpers$1.valueOrDefault;\n      arc.$previousStyle = {\n        backgroundColor: model.backgroundColor,\n        borderColor: model.borderColor,\n        borderWidth: model.borderWidth\n      };\n      model.backgroundColor = valueOrDefault(options.hoverBackgroundColor, getHoverColor(options.backgroundColor));\n      model.borderColor = valueOrDefault(options.hoverBorderColor, getHoverColor(options.borderColor));\n      model.borderWidth = valueOrDefault(options.hoverBorderWidth, options.borderWidth);\n    },\n\n    /**\n     * @private\n     */\n    _resolveElementOptions: function _resolveElementOptions(arc, index) {\n      var me = this;\n      var chart = me.chart;\n      var dataset = me.getDataset();\n      var custom = arc.custom || {};\n      var options = chart.options.elements.arc;\n      var values = {};\n      var i, ilen, key; // Scriptable options\n\n      var context = {\n        chart: chart,\n        dataIndex: index,\n        dataset: dataset,\n        datasetIndex: me.index\n      };\n      var keys = ['backgroundColor', 'borderColor', 'borderWidth', 'borderAlign', 'hoverBackgroundColor', 'hoverBorderColor', 'hoverBorderWidth'];\n\n      for (i = 0, ilen = keys.length; i < ilen; ++i) {\n        key = keys[i];\n        values[key] = resolve$5([custom[key], dataset[key], options[key]], context, index);\n      }\n\n      return values;\n    },\n\n    /**\n     * @private\n     */\n    _computeAngle: function _computeAngle(index) {\n      var me = this;\n      var count = this.getMeta().count;\n      var dataset = me.getDataset();\n      var meta = me.getMeta();\n\n      if (isNaN(dataset.data[index]) || meta.data[index].hidden) {\n        return 0;\n      } // Scriptable options\n\n\n      var context = {\n        chart: me.chart,\n        dataIndex: index,\n        dataset: dataset,\n        datasetIndex: me.index\n      };\n      return resolve$5([me.chart.options.elements.arc.angle, 2 * Math.PI / count], context, index);\n    }\n  });\n\n  core_defaults._set('pie', helpers$1.clone(core_defaults.doughnut));\n\n  core_defaults._set('pie', {\n    cutoutPercentage: 0\n  }); // Pie charts are Doughnut chart with different defaults\n\n\n  var controller_pie = controller_doughnut;\n  var valueOrDefault$6 = helpers$1.valueOrDefault;\n  var resolve$6 = helpers$1.options.resolve;\n\n  core_defaults._set('radar', {\n    scale: {\n      type: 'radialLinear'\n    },\n    elements: {\n      line: {\n        tension: 0 // no bezier in radar\n\n      }\n    }\n  });\n\n  var controller_radar = core_datasetController.extend({\n    datasetElementType: elements.Line,\n    dataElementType: elements.Point,\n    linkScales: helpers$1.noop,\n    update: function update(reset) {\n      var me = this;\n      var meta = me.getMeta();\n      var line = meta.dataset;\n      var points = meta.data || [];\n      var scale = me.chart.scale;\n      var dataset = me.getDataset();\n      var i, ilen; // Compatibility: If the properties are defined with only the old name, use those values\n\n      if (dataset.tension !== undefined && dataset.lineTension === undefined) {\n        dataset.lineTension = dataset.tension;\n      } // Utility\n\n\n      line._scale = scale;\n      line._datasetIndex = me.index; // Data\n\n      line._children = points;\n      line._loop = true; // Model\n\n      line._model = me._resolveLineOptions(line);\n      line.pivot(); // Update Points\n\n      for (i = 0, ilen = points.length; i < ilen; ++i) {\n        me.updateElement(points[i], i, reset);\n      } // Update bezier control points\n\n\n      me.updateBezierControlPoints(); // Now pivot the point for animation\n\n      for (i = 0, ilen = points.length; i < ilen; ++i) {\n        points[i].pivot();\n      }\n    },\n    updateElement: function updateElement(point, index, reset) {\n      var me = this;\n      var custom = point.custom || {};\n      var dataset = me.getDataset();\n      var scale = me.chart.scale;\n      var pointPosition = scale.getPointPositionForValue(index, dataset.data[index]);\n\n      var options = me._resolvePointOptions(point, index);\n\n      var lineModel = me.getMeta().dataset._model;\n\n      var x = reset ? scale.xCenter : pointPosition.x;\n      var y = reset ? scale.yCenter : pointPosition.y; // Utility\n\n      point._scale = scale;\n      point._options = options;\n      point._datasetIndex = me.index;\n      point._index = index; // Desired view properties\n\n      point._model = {\n        x: x,\n        // value not used in dataset scale, but we want a consistent API between scales\n        y: y,\n        skip: custom.skip || isNaN(x) || isNaN(y),\n        // Appearance\n        radius: options.radius,\n        pointStyle: options.pointStyle,\n        rotation: options.rotation,\n        backgroundColor: options.backgroundColor,\n        borderColor: options.borderColor,\n        borderWidth: options.borderWidth,\n        tension: valueOrDefault$6(custom.tension, lineModel ? lineModel.tension : 0),\n        // Tooltip\n        hitRadius: options.hitRadius\n      };\n    },\n\n    /**\n     * @private\n     */\n    _resolvePointOptions: function _resolvePointOptions(element, index) {\n      var me = this;\n      var chart = me.chart;\n      var dataset = chart.data.datasets[me.index];\n      var custom = element.custom || {};\n      var options = chart.options.elements.point;\n      var values = {};\n      var i, ilen, key; // Scriptable options\n\n      var context = {\n        chart: chart,\n        dataIndex: index,\n        dataset: dataset,\n        datasetIndex: me.index\n      };\n      var ELEMENT_OPTIONS = {\n        backgroundColor: 'pointBackgroundColor',\n        borderColor: 'pointBorderColor',\n        borderWidth: 'pointBorderWidth',\n        hitRadius: 'pointHitRadius',\n        hoverBackgroundColor: 'pointHoverBackgroundColor',\n        hoverBorderColor: 'pointHoverBorderColor',\n        hoverBorderWidth: 'pointHoverBorderWidth',\n        hoverRadius: 'pointHoverRadius',\n        pointStyle: 'pointStyle',\n        radius: 'pointRadius',\n        rotation: 'pointRotation'\n      };\n      var keys = Object.keys(ELEMENT_OPTIONS);\n\n      for (i = 0, ilen = keys.length; i < ilen; ++i) {\n        key = keys[i];\n        values[key] = resolve$6([custom[key], dataset[ELEMENT_OPTIONS[key]], dataset[key], options[key]], context, index);\n      }\n\n      return values;\n    },\n\n    /**\n     * @private\n     */\n    _resolveLineOptions: function _resolveLineOptions(element) {\n      var me = this;\n      var chart = me.chart;\n      var dataset = chart.data.datasets[me.index];\n      var custom = element.custom || {};\n      var options = chart.options.elements.line;\n      var values = {};\n      var i, ilen, key;\n      var keys = ['backgroundColor', 'borderWidth', 'borderColor', 'borderCapStyle', 'borderDash', 'borderDashOffset', 'borderJoinStyle', 'fill'];\n\n      for (i = 0, ilen = keys.length; i < ilen; ++i) {\n        key = keys[i];\n        values[key] = resolve$6([custom[key], dataset[key], options[key]]);\n      }\n\n      values.tension = valueOrDefault$6(dataset.lineTension, options.tension);\n      return values;\n    },\n    updateBezierControlPoints: function updateBezierControlPoints() {\n      var me = this;\n      var meta = me.getMeta();\n      var area = me.chart.chartArea;\n      var points = meta.data || [];\n      var i, ilen, model, controlPoints;\n\n      function capControlPoint(pt, min, max) {\n        return Math.max(Math.min(pt, max), min);\n      }\n\n      for (i = 0, ilen = points.length; i < ilen; ++i) {\n        model = points[i]._model;\n        controlPoints = helpers$1.splineCurve(helpers$1.previousItem(points, i, true)._model, model, helpers$1.nextItem(points, i, true)._model, model.tension); // Prevent the bezier going outside of the bounds of the graph\n\n        model.controlPointPreviousX = capControlPoint(controlPoints.previous.x, area.left, area.right);\n        model.controlPointPreviousY = capControlPoint(controlPoints.previous.y, area.top, area.bottom);\n        model.controlPointNextX = capControlPoint(controlPoints.next.x, area.left, area.right);\n        model.controlPointNextY = capControlPoint(controlPoints.next.y, area.top, area.bottom);\n      }\n    },\n    setHoverStyle: function setHoverStyle(point) {\n      var model = point._model;\n      var options = point._options;\n      var getHoverColor = helpers$1.getHoverColor;\n      point.$previousStyle = {\n        backgroundColor: model.backgroundColor,\n        borderColor: model.borderColor,\n        borderWidth: model.borderWidth,\n        radius: model.radius\n      };\n      model.backgroundColor = valueOrDefault$6(options.hoverBackgroundColor, getHoverColor(options.backgroundColor));\n      model.borderColor = valueOrDefault$6(options.hoverBorderColor, getHoverColor(options.borderColor));\n      model.borderWidth = valueOrDefault$6(options.hoverBorderWidth, options.borderWidth);\n      model.radius = valueOrDefault$6(options.hoverRadius, options.radius);\n    }\n  });\n\n  core_defaults._set('scatter', {\n    hover: {\n      mode: 'single'\n    },\n    scales: {\n      xAxes: [{\n        id: 'x-axis-1',\n        // need an ID so datasets can reference the scale\n        type: 'linear',\n        // scatter should not use a category axis\n        position: 'bottom'\n      }],\n      yAxes: [{\n        id: 'y-axis-1',\n        type: 'linear',\n        position: 'left'\n      }]\n    },\n    showLines: false,\n    tooltips: {\n      callbacks: {\n        title: function title() {\n          return ''; // doesn't make sense for scatter since data are formatted as a point\n        },\n        label: function label(item) {\n          return '(' + item.xLabel + ', ' + item.yLabel + ')';\n        }\n      }\n    }\n  }); // Scatter charts use line controllers\n\n\n  var controller_scatter = controller_line; // NOTE export a map in which the key represents the controller type, not\n  // the class, and so must be CamelCase in order to be correctly retrieved\n  // by the controller in core.controller.js (`controllers[meta.type]`).\n\n  var controllers = {\n    bar: controller_bar,\n    bubble: controller_bubble,\n    doughnut: controller_doughnut,\n    horizontalBar: controller_horizontalBar,\n    line: controller_line,\n    polarArea: controller_polarArea,\n    pie: controller_pie,\n    radar: controller_radar,\n    scatter: controller_scatter\n  };\n  /**\n   * Helper function to get relative position for an event\n   * @param {Event|IEvent} event - The event to get the position for\n   * @param {Chart} chart - The chart\n   * @returns {object} the event position\n   */\n\n  function getRelativePosition(e, chart) {\n    if (e.native) {\n      return {\n        x: e.x,\n        y: e.y\n      };\n    }\n\n    return helpers$1.getRelativePosition(e, chart);\n  }\n  /**\n   * Helper function to traverse all of the visible elements in the chart\n   * @param {Chart} chart - the chart\n   * @param {function} handler - the callback to execute for each visible item\n   */\n\n\n  function parseVisibleItems(chart, handler) {\n    var datasets = chart.data.datasets;\n    var meta, i, j, ilen, jlen;\n\n    for (i = 0, ilen = datasets.length; i < ilen; ++i) {\n      if (!chart.isDatasetVisible(i)) {\n        continue;\n      }\n\n      meta = chart.getDatasetMeta(i);\n\n      for (j = 0, jlen = meta.data.length; j < jlen; ++j) {\n        var element = meta.data[j];\n\n        if (!element._view.skip) {\n          handler(element);\n        }\n      }\n    }\n  }\n  /**\n   * Helper function to get the items that intersect the event position\n   * @param {ChartElement[]} items - elements to filter\n   * @param {object} position - the point to be nearest to\n   * @return {ChartElement[]} the nearest items\n   */\n\n\n  function getIntersectItems(chart, position) {\n    var elements = [];\n    parseVisibleItems(chart, function (element) {\n      if (element.inRange(position.x, position.y)) {\n        elements.push(element);\n      }\n    });\n    return elements;\n  }\n  /**\n   * Helper function to get the items nearest to the event position considering all visible items in teh chart\n   * @param {Chart} chart - the chart to look at elements from\n   * @param {object} position - the point to be nearest to\n   * @param {boolean} intersect - if true, only consider items that intersect the position\n   * @param {function} distanceMetric - function to provide the distance between points\n   * @return {ChartElement[]} the nearest items\n   */\n\n\n  function getNearestItems(chart, position, intersect, distanceMetric) {\n    var minDistance = Number.POSITIVE_INFINITY;\n    var nearestItems = [];\n    parseVisibleItems(chart, function (element) {\n      if (intersect && !element.inRange(position.x, position.y)) {\n        return;\n      }\n\n      var center = element.getCenterPoint();\n      var distance = distanceMetric(position, center);\n\n      if (distance < minDistance) {\n        nearestItems = [element];\n        minDistance = distance;\n      } else if (distance === minDistance) {\n        // Can have multiple items at the same distance in which case we sort by size\n        nearestItems.push(element);\n      }\n    });\n    return nearestItems;\n  }\n  /**\n   * Get a distance metric function for two points based on the\n   * axis mode setting\n   * @param {string} axis - the axis mode. x|y|xy\n   */\n\n\n  function getDistanceMetricForAxis(axis) {\n    var useX = axis.indexOf('x') !== -1;\n    var useY = axis.indexOf('y') !== -1;\n    return function (pt1, pt2) {\n      var deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n      var deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n      return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n    };\n  }\n\n  function indexMode(chart, e, options) {\n    var position = getRelativePosition(e, chart); // Default axis for index mode is 'x' to match old behaviour\n\n    options.axis = options.axis || 'x';\n    var distanceMetric = getDistanceMetricForAxis(options.axis);\n    var items = options.intersect ? getIntersectItems(chart, position) : getNearestItems(chart, position, false, distanceMetric);\n    var elements = [];\n\n    if (!items.length) {\n      return [];\n    }\n\n    chart.data.datasets.forEach(function (dataset, datasetIndex) {\n      if (chart.isDatasetVisible(datasetIndex)) {\n        var meta = chart.getDatasetMeta(datasetIndex);\n        var element = meta.data[items[0]._index]; // don't count items that are skipped (null data)\n\n        if (element && !element._view.skip) {\n          elements.push(element);\n        }\n      }\n    });\n    return elements;\n  }\n  /**\n   * @interface IInteractionOptions\n   */\n\n  /**\n   * If true, only consider items that intersect the point\n   * @name IInterfaceOptions#boolean\n   * @type Boolean\n   */\n\n  /**\n   * Contains interaction related functions\n   * @namespace Chart.Interaction\n   */\n\n\n  var core_interaction = {\n    // Helper function for different modes\n    modes: {\n      single: function single(chart, e) {\n        var position = getRelativePosition(e, chart);\n        var elements = [];\n        parseVisibleItems(chart, function (element) {\n          if (element.inRange(position.x, position.y)) {\n            elements.push(element);\n            return elements;\n          }\n        });\n        return elements.slice(0, 1);\n      },\n\n      /**\n       * @function Chart.Interaction.modes.label\n       * @deprecated since version 2.4.0\n       * @todo remove at version 3\n       * @private\n       */\n      label: indexMode,\n\n      /**\n       * Returns items at the same index. If the options.intersect parameter is true, we only return items if we intersect something\n       * If the options.intersect mode is false, we find the nearest item and return the items at the same index as that item\n       * @function Chart.Interaction.modes.index\n       * @since v2.4.0\n       * @param {Chart} chart - the chart we are returning items from\n       * @param {Event} e - the event we are find things at\n       * @param {IInteractionOptions} options - options to use during interaction\n       * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n       */\n      index: indexMode,\n\n      /**\n       * Returns items in the same dataset. If the options.intersect parameter is true, we only return items if we intersect something\n       * If the options.intersect is false, we find the nearest item and return the items in that dataset\n       * @function Chart.Interaction.modes.dataset\n       * @param {Chart} chart - the chart we are returning items from\n       * @param {Event} e - the event we are find things at\n       * @param {IInteractionOptions} options - options to use during interaction\n       * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n       */\n      dataset: function dataset(chart, e, options) {\n        var position = getRelativePosition(e, chart);\n        options.axis = options.axis || 'xy';\n        var distanceMetric = getDistanceMetricForAxis(options.axis);\n        var items = options.intersect ? getIntersectItems(chart, position) : getNearestItems(chart, position, false, distanceMetric);\n\n        if (items.length > 0) {\n          items = chart.getDatasetMeta(items[0]._datasetIndex).data;\n        }\n\n        return items;\n      },\n\n      /**\n       * @function Chart.Interaction.modes.x-axis\n       * @deprecated since version 2.4.0. Use index mode and intersect == true\n       * @todo remove at version 3\n       * @private\n       */\n      'x-axis': function xAxis(chart, e) {\n        return indexMode(chart, e, {\n          intersect: false\n        });\n      },\n\n      /**\n       * Point mode returns all elements that hit test based on the event position\n       * of the event\n       * @function Chart.Interaction.modes.intersect\n       * @param {Chart} chart - the chart we are returning items from\n       * @param {Event} e - the event we are find things at\n       * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n       */\n      point: function point(chart, e) {\n        var position = getRelativePosition(e, chart);\n        return getIntersectItems(chart, position);\n      },\n\n      /**\n       * nearest mode returns the element closest to the point\n       * @function Chart.Interaction.modes.intersect\n       * @param {Chart} chart - the chart we are returning items from\n       * @param {Event} e - the event we are find things at\n       * @param {IInteractionOptions} options - options to use\n       * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n       */\n      nearest: function nearest(chart, e, options) {\n        var position = getRelativePosition(e, chart);\n        options.axis = options.axis || 'xy';\n        var distanceMetric = getDistanceMetricForAxis(options.axis);\n        return getNearestItems(chart, position, options.intersect, distanceMetric);\n      },\n\n      /**\n       * x mode returns the elements that hit-test at the current x coordinate\n       * @function Chart.Interaction.modes.x\n       * @param {Chart} chart - the chart we are returning items from\n       * @param {Event} e - the event we are find things at\n       * @param {IInteractionOptions} options - options to use\n       * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n       */\n      x: function x(chart, e, options) {\n        var position = getRelativePosition(e, chart);\n        var items = [];\n        var intersectsItem = false;\n        parseVisibleItems(chart, function (element) {\n          if (element.inXRange(position.x)) {\n            items.push(element);\n          }\n\n          if (element.inRange(position.x, position.y)) {\n            intersectsItem = true;\n          }\n        }); // If we want to trigger on an intersect and we don't have any items\n        // that intersect the position, return nothing\n\n        if (options.intersect && !intersectsItem) {\n          items = [];\n        }\n\n        return items;\n      },\n\n      /**\n       * y mode returns the elements that hit-test at the current y coordinate\n       * @function Chart.Interaction.modes.y\n       * @param {Chart} chart - the chart we are returning items from\n       * @param {Event} e - the event we are find things at\n       * @param {IInteractionOptions} options - options to use\n       * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n       */\n      y: function y(chart, e, options) {\n        var position = getRelativePosition(e, chart);\n        var items = [];\n        var intersectsItem = false;\n        parseVisibleItems(chart, function (element) {\n          if (element.inYRange(position.y)) {\n            items.push(element);\n          }\n\n          if (element.inRange(position.x, position.y)) {\n            intersectsItem = true;\n          }\n        }); // If we want to trigger on an intersect and we don't have any items\n        // that intersect the position, return nothing\n\n        if (options.intersect && !intersectsItem) {\n          items = [];\n        }\n\n        return items;\n      }\n    }\n  };\n\n  function filterByPosition(array, position) {\n    return helpers$1.where(array, function (v) {\n      return v.position === position;\n    });\n  }\n\n  function sortByWeight(array, reverse) {\n    array.forEach(function (v, i) {\n      v._tmpIndex_ = i;\n      return v;\n    });\n    array.sort(function (a, b) {\n      var v0 = reverse ? b : a;\n      var v1 = reverse ? a : b;\n      return v0.weight === v1.weight ? v0._tmpIndex_ - v1._tmpIndex_ : v0.weight - v1.weight;\n    });\n    array.forEach(function (v) {\n      delete v._tmpIndex_;\n    });\n  }\n\n  function findMaxPadding(boxes) {\n    var top = 0;\n    var left = 0;\n    var bottom = 0;\n    var right = 0;\n    helpers$1.each(boxes, function (box) {\n      if (box.getPadding) {\n        var boxPadding = box.getPadding();\n        top = Math.max(top, boxPadding.top);\n        left = Math.max(left, boxPadding.left);\n        bottom = Math.max(bottom, boxPadding.bottom);\n        right = Math.max(right, boxPadding.right);\n      }\n    });\n    return {\n      top: top,\n      left: left,\n      bottom: bottom,\n      right: right\n    };\n  }\n\n  function addSizeByPosition(boxes, size) {\n    helpers$1.each(boxes, function (box) {\n      size[box.position] += box.isHorizontal() ? box.height : box.width;\n    });\n  }\n\n  core_defaults._set('global', {\n    layout: {\n      padding: {\n        top: 0,\n        right: 0,\n        bottom: 0,\n        left: 0\n      }\n    }\n  });\n  /**\n   * @interface ILayoutItem\n   * @prop {string} position - The position of the item in the chart layout. Possible values are\n   * 'left', 'top', 'right', 'bottom', and 'chartArea'\n   * @prop {number} weight - The weight used to sort the item. Higher weights are further away from the chart area\n   * @prop {boolean} fullWidth - if true, and the item is horizontal, then push vertical boxes down\n   * @prop {function} isHorizontal - returns true if the layout item is horizontal (ie. top or bottom)\n   * @prop {function} update - Takes two parameters: width and height. Returns size of item\n   * @prop {function} getPadding -  Returns an object with padding on the edges\n   * @prop {number} width - Width of item. Must be valid after update()\n   * @prop {number} height - Height of item. Must be valid after update()\n   * @prop {number} left - Left edge of the item. Set by layout system and cannot be used in update\n   * @prop {number} top - Top edge of the item. Set by layout system and cannot be used in update\n   * @prop {number} right - Right edge of the item. Set by layout system and cannot be used in update\n   * @prop {number} bottom - Bottom edge of the item. Set by layout system and cannot be used in update\n   */\n  // The layout service is very self explanatory.  It's responsible for the layout within a chart.\n  // Scales, Legends and Plugins all rely on the layout service and can easily register to be placed anywhere they need\n  // It is this service's responsibility of carrying out that layout.\n\n\n  var core_layouts = {\n    defaults: {},\n\n    /**\n     * Register a box to a chart.\n     * A box is simply a reference to an object that requires layout. eg. Scales, Legend, Title.\n     * @param {Chart} chart - the chart to use\n     * @param {ILayoutItem} item - the item to add to be layed out\n     */\n    addBox: function addBox(chart, item) {\n      if (!chart.boxes) {\n        chart.boxes = [];\n      } // initialize item with default values\n\n\n      item.fullWidth = item.fullWidth || false;\n      item.position = item.position || 'top';\n      item.weight = item.weight || 0;\n      chart.boxes.push(item);\n    },\n\n    /**\n     * Remove a layoutItem from a chart\n     * @param {Chart} chart - the chart to remove the box from\n     * @param {ILayoutItem} layoutItem - the item to remove from the layout\n     */\n    removeBox: function removeBox(chart, layoutItem) {\n      var index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n\n      if (index !== -1) {\n        chart.boxes.splice(index, 1);\n      }\n    },\n\n    /**\n     * Sets (or updates) options on the given `item`.\n     * @param {Chart} chart - the chart in which the item lives (or will be added to)\n     * @param {ILayoutItem} item - the item to configure with the given options\n     * @param {object} options - the new item options.\n     */\n    configure: function configure(chart, item, options) {\n      var props = ['fullWidth', 'position', 'weight'];\n      var ilen = props.length;\n      var i = 0;\n      var prop;\n\n      for (; i < ilen; ++i) {\n        prop = props[i];\n\n        if (options.hasOwnProperty(prop)) {\n          item[prop] = options[prop];\n        }\n      }\n    },\n\n    /**\n     * Fits boxes of the given chart into the given size by having each box measure itself\n     * then running a fitting algorithm\n     * @param {Chart} chart - the chart\n     * @param {number} width - the width to fit into\n     * @param {number} height - the height to fit into\n     */\n    update: function update(chart, width, height) {\n      if (!chart) {\n        return;\n      }\n\n      var layoutOptions = chart.options.layout || {};\n      var padding = helpers$1.options.toPadding(layoutOptions.padding);\n      var leftPadding = padding.left;\n      var rightPadding = padding.right;\n      var topPadding = padding.top;\n      var bottomPadding = padding.bottom;\n      var leftBoxes = filterByPosition(chart.boxes, 'left');\n      var rightBoxes = filterByPosition(chart.boxes, 'right');\n      var topBoxes = filterByPosition(chart.boxes, 'top');\n      var bottomBoxes = filterByPosition(chart.boxes, 'bottom');\n      var chartAreaBoxes = filterByPosition(chart.boxes, 'chartArea'); // Sort boxes by weight. A higher weight is further away from the chart area\n\n      sortByWeight(leftBoxes, true);\n      sortByWeight(rightBoxes, false);\n      sortByWeight(topBoxes, true);\n      sortByWeight(bottomBoxes, false);\n      var verticalBoxes = leftBoxes.concat(rightBoxes);\n      var horizontalBoxes = topBoxes.concat(bottomBoxes);\n      var outerBoxes = verticalBoxes.concat(horizontalBoxes); // Essentially we now have any number of boxes on each of the 4 sides.\n      // Our canvas looks like the following.\n      // The areas L1 and L2 are the left axes. R1 is the right axis, T1 is the top axis and\n      // B1 is the bottom axis\n      // There are also 4 quadrant-like locations (left to right instead of clockwise) reserved for chart overlays\n      // These locations are single-box locations only, when trying to register a chartArea location that is already taken,\n      // an error will be thrown.\n      //\n      // |----------------------------------------------------|\n      // |                  T1 (Full Width)                   |\n      // |----------------------------------------------------|\n      // |    |    |                 T2                  |    |\n      // |    |----|-------------------------------------|----|\n      // |    |    | C1 |                           | C2 |    |\n      // |    |    |----|                           |----|    |\n      // |    |    |                                     |    |\n      // | L1 | L2 |           ChartArea (C0)            | R1 |\n      // |    |    |                                     |    |\n      // |    |    |----|                           |----|    |\n      // |    |    | C3 |                           | C4 |    |\n      // |    |----|-------------------------------------|----|\n      // |    |    |                 B1                  |    |\n      // |----------------------------------------------------|\n      // |                  B2 (Full Width)                   |\n      // |----------------------------------------------------|\n      //\n      // What we do to find the best sizing, we do the following\n      // 1. Determine the minimum size of the chart area.\n      // 2. Split the remaining width equally between each vertical axis\n      // 3. Split the remaining height equally between each horizontal axis\n      // 4. Give each layout the maximum size it can be. The layout will return it's minimum size\n      // 5. Adjust the sizes of each axis based on it's minimum reported size.\n      // 6. Refit each axis\n      // 7. Position each axis in the final location\n      // 8. Tell the chart the final location of the chart area\n      // 9. Tell any axes that overlay the chart area the positions of the chart area\n      // Step 1\n\n      var chartWidth = width - leftPadding - rightPadding;\n      var chartHeight = height - topPadding - bottomPadding;\n      var chartAreaWidth = chartWidth / 2; // min 50%\n      // Step 2\n\n      var verticalBoxWidth = (width - chartAreaWidth) / verticalBoxes.length; // Step 3\n      // TODO re-limit horizontal axis height (this limit has affected only padding calculation since PR 1837)\n      // var horizontalBoxHeight = (height - chartAreaHeight) / horizontalBoxes.length;\n      // Step 4\n\n      var maxChartAreaWidth = chartWidth;\n      var maxChartAreaHeight = chartHeight;\n      var outerBoxSizes = {\n        top: topPadding,\n        left: leftPadding,\n        bottom: bottomPadding,\n        right: rightPadding\n      };\n      var minBoxSizes = [];\n      var maxPadding;\n\n      function getMinimumBoxSize(box) {\n        var minSize;\n        var isHorizontal = box.isHorizontal();\n\n        if (isHorizontal) {\n          minSize = box.update(box.fullWidth ? chartWidth : maxChartAreaWidth, chartHeight / 2);\n          maxChartAreaHeight -= minSize.height;\n        } else {\n          minSize = box.update(verticalBoxWidth, maxChartAreaHeight);\n          maxChartAreaWidth -= minSize.width;\n        }\n\n        minBoxSizes.push({\n          horizontal: isHorizontal,\n          width: minSize.width,\n          box: box\n        });\n      }\n\n      helpers$1.each(outerBoxes, getMinimumBoxSize); // If a horizontal box has padding, we move the left boxes over to avoid ugly charts (see issue #2478)\n\n      maxPadding = findMaxPadding(outerBoxes); // At this point, maxChartAreaHeight and maxChartAreaWidth are the size the chart area could\n      // be if the axes are drawn at their minimum sizes.\n      // Steps 5 & 6\n      // Function to fit a box\n\n      function fitBox(box) {\n        var minBoxSize = helpers$1.findNextWhere(minBoxSizes, function (minBox) {\n          return minBox.box === box;\n        });\n\n        if (minBoxSize) {\n          if (minBoxSize.horizontal) {\n            var scaleMargin = {\n              left: Math.max(outerBoxSizes.left, maxPadding.left),\n              right: Math.max(outerBoxSizes.right, maxPadding.right),\n              top: 0,\n              bottom: 0\n            }; // Don't use min size here because of label rotation. When the labels are rotated, their rotation highly depends\n            // on the margin. Sometimes they need to increase in size slightly\n\n            box.update(box.fullWidth ? chartWidth : maxChartAreaWidth, chartHeight / 2, scaleMargin);\n          } else {\n            box.update(minBoxSize.width, maxChartAreaHeight);\n          }\n        }\n      } // Update, and calculate the left and right margins for the horizontal boxes\n\n\n      helpers$1.each(verticalBoxes, fitBox);\n      addSizeByPosition(verticalBoxes, outerBoxSizes); // Set the Left and Right margins for the horizontal boxes\n\n      helpers$1.each(horizontalBoxes, fitBox);\n      addSizeByPosition(horizontalBoxes, outerBoxSizes);\n\n      function finalFitVerticalBox(box) {\n        var minBoxSize = helpers$1.findNextWhere(minBoxSizes, function (minSize) {\n          return minSize.box === box;\n        });\n        var scaleMargin = {\n          left: 0,\n          right: 0,\n          top: outerBoxSizes.top,\n          bottom: outerBoxSizes.bottom\n        };\n\n        if (minBoxSize) {\n          box.update(minBoxSize.width, maxChartAreaHeight, scaleMargin);\n        }\n      } // Let the left layout know the final margin\n\n\n      helpers$1.each(verticalBoxes, finalFitVerticalBox); // Recalculate because the size of each layout might have changed slightly due to the margins (label rotation for instance)\n\n      outerBoxSizes = {\n        top: topPadding,\n        left: leftPadding,\n        bottom: bottomPadding,\n        right: rightPadding\n      };\n      addSizeByPosition(outerBoxes, outerBoxSizes); // We may be adding some padding to account for rotated x axis labels\n\n      var leftPaddingAddition = Math.max(maxPadding.left - outerBoxSizes.left, 0);\n      outerBoxSizes.left += leftPaddingAddition;\n      outerBoxSizes.right += Math.max(maxPadding.right - outerBoxSizes.right, 0);\n      var topPaddingAddition = Math.max(maxPadding.top - outerBoxSizes.top, 0);\n      outerBoxSizes.top += topPaddingAddition;\n      outerBoxSizes.bottom += Math.max(maxPadding.bottom - outerBoxSizes.bottom, 0); // Figure out if our chart area changed. This would occur if the dataset layout label rotation\n      // changed due to the application of the margins in step 6. Since we can only get bigger, this is safe to do\n      // without calling `fit` again\n\n      var newMaxChartAreaHeight = height - outerBoxSizes.top - outerBoxSizes.bottom;\n      var newMaxChartAreaWidth = width - outerBoxSizes.left - outerBoxSizes.right;\n\n      if (newMaxChartAreaWidth !== maxChartAreaWidth || newMaxChartAreaHeight !== maxChartAreaHeight) {\n        helpers$1.each(verticalBoxes, function (box) {\n          box.height = newMaxChartAreaHeight;\n        });\n        helpers$1.each(horizontalBoxes, function (box) {\n          if (!box.fullWidth) {\n            box.width = newMaxChartAreaWidth;\n          }\n        });\n        maxChartAreaHeight = newMaxChartAreaHeight;\n        maxChartAreaWidth = newMaxChartAreaWidth;\n      } // Step 7 - Position the boxes\n\n\n      var left = leftPadding + leftPaddingAddition;\n      var top = topPadding + topPaddingAddition;\n\n      function placeBox(box) {\n        if (box.isHorizontal()) {\n          box.left = box.fullWidth ? leftPadding : outerBoxSizes.left;\n          box.right = box.fullWidth ? width - rightPadding : outerBoxSizes.left + maxChartAreaWidth;\n          box.top = top;\n          box.bottom = top + box.height; // Move to next point\n\n          top = box.bottom;\n        } else {\n          box.left = left;\n          box.right = left + box.width;\n          box.top = outerBoxSizes.top;\n          box.bottom = outerBoxSizes.top + maxChartAreaHeight; // Move to next point\n\n          left = box.right;\n        }\n      }\n\n      helpers$1.each(leftBoxes.concat(topBoxes), placeBox); // Account for chart width and height\n\n      left += maxChartAreaWidth;\n      top += maxChartAreaHeight;\n      helpers$1.each(rightBoxes, placeBox);\n      helpers$1.each(bottomBoxes, placeBox); // Step 8\n\n      chart.chartArea = {\n        left: outerBoxSizes.left,\n        top: outerBoxSizes.top,\n        right: outerBoxSizes.left + maxChartAreaWidth,\n        bottom: outerBoxSizes.top + maxChartAreaHeight\n      }; // Step 9\n\n      helpers$1.each(chartAreaBoxes, function (box) {\n        box.left = chart.chartArea.left;\n        box.top = chart.chartArea.top;\n        box.right = chart.chartArea.right;\n        box.bottom = chart.chartArea.bottom;\n        box.update(maxChartAreaWidth, maxChartAreaHeight);\n      });\n    }\n  };\n  /**\n   * Platform fallback implementation (minimal).\n   * @see https://github.com/chartjs/Chart.js/pull/4591#issuecomment-319575939\n   */\n\n  var platform_basic = {\n    acquireContext: function acquireContext(item) {\n      if (item && item.canvas) {\n        // Support for any object associated to a canvas (including a context2d)\n        item = item.canvas;\n      }\n\n      return item && item.getContext('2d') || null;\n    }\n  };\n  var platform_dom = \"/*\\n * DOM element rendering detection\\n * https://davidwalsh.name/detect-node-insertion\\n */\\n@keyframes chartjs-render-animation {\\n\\tfrom { opacity: 0.99; }\\n\\tto { opacity: 1; }\\n}\\n\\n.chartjs-render-monitor {\\n\\tanimation: chartjs-render-animation 0.001s;\\n}\\n\\n/*\\n * DOM element resizing detection\\n * https://github.com/marcj/css-element-queries\\n */\\n.chartjs-size-monitor,\\n.chartjs-size-monitor-expand,\\n.chartjs-size-monitor-shrink {\\n\\tposition: absolute;\\n\\tdirection: ltr;\\n\\tleft: 0;\\n\\ttop: 0;\\n\\tright: 0;\\n\\tbottom: 0;\\n\\toverflow: hidden;\\n\\tpointer-events: none;\\n\\tvisibility: hidden;\\n\\tz-index: -1;\\n}\\n\\n.chartjs-size-monitor-expand > div {\\n\\tposition: absolute;\\n\\twidth: 1000000px;\\n\\theight: 1000000px;\\n\\tleft: 0;\\n\\ttop: 0;\\n}\\n\\n.chartjs-size-monitor-shrink > div {\\n\\tposition: absolute;\\n\\twidth: 200%;\\n\\theight: 200%;\\n\\tleft: 0;\\n\\ttop: 0;\\n}\\n\";\n  var platform_dom$1 =\n  /*#__PURE__*/\n  Object.freeze({\n    default: platform_dom\n  });\n\n  function getCjsExportFromNamespace(n) {\n    return n && n.default || n;\n  }\n\n  var stylesheet = getCjsExportFromNamespace(platform_dom$1);\n  var EXPANDO_KEY = '$chartjs';\n  var CSS_PREFIX = 'chartjs-';\n  var CSS_SIZE_MONITOR = CSS_PREFIX + 'size-monitor';\n  var CSS_RENDER_MONITOR = CSS_PREFIX + 'render-monitor';\n  var CSS_RENDER_ANIMATION = CSS_PREFIX + 'render-animation';\n  var ANIMATION_START_EVENTS = ['animationstart', 'webkitAnimationStart'];\n  /**\n   * DOM event types -> Chart.js event types.\n   * Note: only events with different types are mapped.\n   * @see https://developer.mozilla.org/en-US/docs/Web/Events\n   */\n\n  var EVENT_TYPES = {\n    touchstart: 'mousedown',\n    touchmove: 'mousemove',\n    touchend: 'mouseup',\n    pointerenter: 'mouseenter',\n    pointerdown: 'mousedown',\n    pointermove: 'mousemove',\n    pointerup: 'mouseup',\n    pointerleave: 'mouseout',\n    pointerout: 'mouseout'\n  };\n  /**\n   * The \"used\" size is the final value of a dimension property after all calculations have\n   * been performed. This method uses the computed style of `element` but returns undefined\n   * if the computed style is not expressed in pixels. That can happen in some cases where\n   * `element` has a size relative to its parent and this last one is not yet displayed,\n   * for example because of `display: none` on a parent node.\n   * @see https://developer.mozilla.org/en-US/docs/Web/CSS/used_value\n   * @returns {number} Size in pixels or undefined if unknown.\n   */\n\n  function readUsedSize(element, property) {\n    var value = helpers$1.getStyle(element, property);\n    var matches = value && value.match(/^(\\d+)(\\.\\d+)?px$/);\n    return matches ? Number(matches[1]) : undefined;\n  }\n  /**\n   * Initializes the canvas style and render size without modifying the canvas display size,\n   * since responsiveness is handled by the controller.resize() method. The config is used\n   * to determine the aspect ratio to apply in case no explicit height has been specified.\n   */\n\n\n  function initCanvas(canvas, config) {\n    var style = canvas.style; // NOTE(SB) canvas.getAttribute('width') !== canvas.width: in the first case it\n    // returns null or '' if no explicit value has been set to the canvas attribute.\n\n    var renderHeight = canvas.getAttribute('height');\n    var renderWidth = canvas.getAttribute('width'); // Chart.js modifies some canvas values that we want to restore on destroy\n\n    canvas[EXPANDO_KEY] = {\n      initial: {\n        height: renderHeight,\n        width: renderWidth,\n        style: {\n          display: style.display,\n          height: style.height,\n          width: style.width\n        }\n      }\n    }; // Force canvas to display as block to avoid extra space caused by inline\n    // elements, which would interfere with the responsive resize process.\n    // https://github.com/chartjs/Chart.js/issues/2538\n\n    style.display = style.display || 'block';\n\n    if (renderWidth === null || renderWidth === '') {\n      var displayWidth = readUsedSize(canvas, 'width');\n\n      if (displayWidth !== undefined) {\n        canvas.width = displayWidth;\n      }\n    }\n\n    if (renderHeight === null || renderHeight === '') {\n      if (canvas.style.height === '') {\n        // If no explicit render height and style height, let's apply the aspect ratio,\n        // which one can be specified by the user but also by charts as default option\n        // (i.e. options.aspectRatio). If not specified, use canvas aspect ratio of 2.\n        canvas.height = canvas.width / (config.options.aspectRatio || 2);\n      } else {\n        var displayHeight = readUsedSize(canvas, 'height');\n\n        if (displayWidth !== undefined) {\n          canvas.height = displayHeight;\n        }\n      }\n    }\n\n    return canvas;\n  }\n  /**\n   * Detects support for options object argument in addEventListener.\n   * https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Safely_detecting_option_support\n   * @private\n   */\n\n\n  var supportsEventListenerOptions = function () {\n    var supports = false;\n\n    try {\n      var options = Object.defineProperty({}, 'passive', {\n        // eslint-disable-next-line getter-return\n        get: function get() {\n          supports = true;\n        }\n      });\n      window.addEventListener('e', null, options);\n    } catch (e) {// continue regardless of error\n    }\n\n    return supports;\n  }(); // Default passive to true as expected by Chrome for 'touchstart' and 'touchend' events.\n  // https://github.com/chartjs/Chart.js/issues/4287\n\n\n  var eventListenerOptions = supportsEventListenerOptions ? {\n    passive: true\n  } : false;\n\n  function addListener(node, type, listener) {\n    node.addEventListener(type, listener, eventListenerOptions);\n  }\n\n  function removeListener(node, type, listener) {\n    node.removeEventListener(type, listener, eventListenerOptions);\n  }\n\n  function createEvent(type, chart, x, y, nativeEvent) {\n    return {\n      type: type,\n      chart: chart,\n      native: nativeEvent || null,\n      x: x !== undefined ? x : null,\n      y: y !== undefined ? y : null\n    };\n  }\n\n  function fromNativeEvent(event, chart) {\n    var type = EVENT_TYPES[event.type] || event.type;\n    var pos = helpers$1.getRelativePosition(event, chart);\n    return createEvent(type, chart, pos.x, pos.y, event);\n  }\n\n  function throttled(fn, thisArg) {\n    var ticking = false;\n    var args = [];\n    return function () {\n      args = Array.prototype.slice.call(arguments);\n      thisArg = thisArg || this;\n\n      if (!ticking) {\n        ticking = true;\n        helpers$1.requestAnimFrame.call(window, function () {\n          ticking = false;\n          fn.apply(thisArg, args);\n        });\n      }\n    };\n  }\n\n  function createDiv(cls) {\n    var el = document.createElement('div');\n    el.className = cls || '';\n    return el;\n  } // Implementation based on https://github.com/marcj/css-element-queries\n\n\n  function createResizer(handler) {\n    var maxSize = 1000000; // NOTE(SB) Don't use innerHTML because it could be considered unsafe.\n    // https://github.com/chartjs/Chart.js/issues/5902\n\n    var resizer = createDiv(CSS_SIZE_MONITOR);\n    var expand = createDiv(CSS_SIZE_MONITOR + '-expand');\n    var shrink = createDiv(CSS_SIZE_MONITOR + '-shrink');\n    expand.appendChild(createDiv());\n    shrink.appendChild(createDiv());\n    resizer.appendChild(expand);\n    resizer.appendChild(shrink);\n\n    resizer._reset = function () {\n      expand.scrollLeft = maxSize;\n      expand.scrollTop = maxSize;\n      shrink.scrollLeft = maxSize;\n      shrink.scrollTop = maxSize;\n    };\n\n    var onScroll = function onScroll() {\n      resizer._reset();\n\n      handler();\n    };\n\n    addListener(expand, 'scroll', onScroll.bind(expand, 'expand'));\n    addListener(shrink, 'scroll', onScroll.bind(shrink, 'shrink'));\n    return resizer;\n  } // https://davidwalsh.name/detect-node-insertion\n\n\n  function watchForRender(node, handler) {\n    var expando = node[EXPANDO_KEY] || (node[EXPANDO_KEY] = {});\n\n    var proxy = expando.renderProxy = function (e) {\n      if (e.animationName === CSS_RENDER_ANIMATION) {\n        handler();\n      }\n    };\n\n    helpers$1.each(ANIMATION_START_EVENTS, function (type) {\n      addListener(node, type, proxy);\n    }); // #4737: Chrome might skip the CSS animation when the CSS_RENDER_MONITOR class\n    // is removed then added back immediately (same animation frame?). Accessing the\n    // `offsetParent` property will force a reflow and re-evaluate the CSS animation.\n    // https://gist.github.com/paulirish/5d52fb081b3570c81e3a#box-metrics\n    // https://github.com/chartjs/Chart.js/issues/4737\n\n    expando.reflow = !!node.offsetParent;\n    node.classList.add(CSS_RENDER_MONITOR);\n  }\n\n  function unwatchForRender(node) {\n    var expando = node[EXPANDO_KEY] || {};\n    var proxy = expando.renderProxy;\n\n    if (proxy) {\n      helpers$1.each(ANIMATION_START_EVENTS, function (type) {\n        removeListener(node, type, proxy);\n      });\n      delete expando.renderProxy;\n    }\n\n    node.classList.remove(CSS_RENDER_MONITOR);\n  }\n\n  function addResizeListener(node, listener, chart) {\n    var expando = node[EXPANDO_KEY] || (node[EXPANDO_KEY] = {}); // Let's keep track of this added resizer and thus avoid DOM query when removing it.\n\n    var resizer = expando.resizer = createResizer(throttled(function () {\n      if (expando.resizer) {\n        var container = chart.options.maintainAspectRatio && node.parentNode;\n        var w = container ? container.clientWidth : 0;\n        listener(createEvent('resize', chart));\n\n        if (container && container.clientWidth < w && chart.canvas) {\n          // If the container size shrank during chart resize, let's assume\n          // scrollbar appeared. So we resize again with the scrollbar visible -\n          // effectively making chart smaller and the scrollbar hidden again.\n          // Because we are inside `throttled`, and currently `ticking`, scroll\n          // events are ignored during this whole 2 resize process.\n          // If we assumed wrong and something else happened, we are resizing\n          // twice in a frame (potential performance issue)\n          listener(createEvent('resize', chart));\n        }\n      }\n    })); // The resizer needs to be attached to the node parent, so we first need to be\n    // sure that `node` is attached to the DOM before injecting the resizer element.\n\n    watchForRender(node, function () {\n      if (expando.resizer) {\n        var container = node.parentNode;\n\n        if (container && container !== resizer.parentNode) {\n          container.insertBefore(resizer, container.firstChild);\n        } // The container size might have changed, let's reset the resizer state.\n\n\n        resizer._reset();\n      }\n    });\n  }\n\n  function removeResizeListener(node) {\n    var expando = node[EXPANDO_KEY] || {};\n    var resizer = expando.resizer;\n    delete expando.resizer;\n    unwatchForRender(node);\n\n    if (resizer && resizer.parentNode) {\n      resizer.parentNode.removeChild(resizer);\n    }\n  }\n\n  function injectCSS(platform, css) {\n    // https://stackoverflow.com/q/3922139\n    var style = platform._style || document.createElement('style');\n\n    if (!platform._style) {\n      platform._style = style;\n      css = '/* Chart.js */\\n' + css;\n      style.setAttribute('type', 'text/css');\n      document.getElementsByTagName('head')[0].appendChild(style);\n    }\n\n    style.appendChild(document.createTextNode(css));\n  }\n\n  var platform_dom$2 = {\n    /**\n     * When `true`, prevents the automatic injection of the stylesheet required to\n     * correctly detect when the chart is added to the DOM and then resized. This\n     * switch has been added to allow external stylesheet (`dist/Chart(.min)?.js`)\n     * to be manually imported to make this library compatible with any CSP.\n     * See https://github.com/chartjs/Chart.js/issues/5208\n     */\n    disableCSSInjection: false,\n\n    /**\n     * This property holds whether this platform is enabled for the current environment.\n     * Currently used by platform.js to select the proper implementation.\n     * @private\n     */\n    _enabled: typeof window !== 'undefined' && typeof document !== 'undefined',\n\n    /**\n     * @private\n     */\n    _ensureLoaded: function _ensureLoaded() {\n      if (this._loaded) {\n        return;\n      }\n\n      this._loaded = true; // https://github.com/chartjs/Chart.js/issues/5208\n\n      if (!this.disableCSSInjection) {\n        injectCSS(this, stylesheet);\n      }\n    },\n    acquireContext: function acquireContext(item, config) {\n      if (typeof item === 'string') {\n        item = document.getElementById(item);\n      } else if (item.length) {\n        // Support for array based queries (such as jQuery)\n        item = item[0];\n      }\n\n      if (item && item.canvas) {\n        // Support for any object associated to a canvas (including a context2d)\n        item = item.canvas;\n      } // To prevent canvas fingerprinting, some add-ons undefine the getContext\n      // method, for example: https://github.com/kkapsner/CanvasBlocker\n      // https://github.com/chartjs/Chart.js/issues/2807\n\n\n      var context = item && item.getContext && item.getContext('2d'); // Load platform resources on first chart creation, to make possible to change\n      // platform options after importing the library (e.g. `disableCSSInjection`).\n\n      this._ensureLoaded(); // `instanceof HTMLCanvasElement/CanvasRenderingContext2D` fails when the item is\n      // inside an iframe or when running in a protected environment. We could guess the\n      // types from their toString() value but let's keep things flexible and assume it's\n      // a sufficient condition if the item has a context2D which has item as `canvas`.\n      // https://github.com/chartjs/Chart.js/issues/3887\n      // https://github.com/chartjs/Chart.js/issues/4102\n      // https://github.com/chartjs/Chart.js/issues/4152\n\n\n      if (context && context.canvas === item) {\n        initCanvas(item, config);\n        return context;\n      }\n\n      return null;\n    },\n    releaseContext: function releaseContext(context) {\n      var canvas = context.canvas;\n\n      if (!canvas[EXPANDO_KEY]) {\n        return;\n      }\n\n      var initial = canvas[EXPANDO_KEY].initial;\n      ['height', 'width'].forEach(function (prop) {\n        var value = initial[prop];\n\n        if (helpers$1.isNullOrUndef(value)) {\n          canvas.removeAttribute(prop);\n        } else {\n          canvas.setAttribute(prop, value);\n        }\n      });\n      helpers$1.each(initial.style || {}, function (value, key) {\n        canvas.style[key] = value;\n      }); // The canvas render size might have been changed (and thus the state stack discarded),\n      // we can't use save() and restore() to restore the initial state. So make sure that at\n      // least the canvas context is reset to the default state by setting the canvas width.\n      // https://www.w3.org/TR/2011/WD-html5-20110525/the-canvas-element.html\n      // eslint-disable-next-line no-self-assign\n\n      canvas.width = canvas.width;\n      delete canvas[EXPANDO_KEY];\n    },\n    addEventListener: function addEventListener(chart, type, listener) {\n      var canvas = chart.canvas;\n\n      if (type === 'resize') {\n        // Note: the resize event is not supported on all browsers.\n        addResizeListener(canvas, listener, chart);\n        return;\n      }\n\n      var expando = listener[EXPANDO_KEY] || (listener[EXPANDO_KEY] = {});\n      var proxies = expando.proxies || (expando.proxies = {});\n\n      var proxy = proxies[chart.id + '_' + type] = function (event) {\n        listener(fromNativeEvent(event, chart));\n      };\n\n      addListener(canvas, type, proxy);\n    },\n    removeEventListener: function removeEventListener(chart, type, listener) {\n      var canvas = chart.canvas;\n\n      if (type === 'resize') {\n        // Note: the resize event is not supported on all browsers.\n        removeResizeListener(canvas);\n        return;\n      }\n\n      var expando = listener[EXPANDO_KEY] || {};\n      var proxies = expando.proxies || {};\n      var proxy = proxies[chart.id + '_' + type];\n\n      if (!proxy) {\n        return;\n      }\n\n      removeListener(canvas, type, proxy);\n    }\n  }; // DEPRECATIONS\n\n  /**\n   * Provided for backward compatibility, use EventTarget.addEventListener instead.\n   * EventTarget.addEventListener compatibility: Chrome, Opera 7, Safari, FF1.5+, IE9+\n   * @see https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener\n   * @function Chart.helpers.addEvent\n   * @deprecated since version 2.7.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers$1.addEvent = addListener;\n  /**\n   * Provided for backward compatibility, use EventTarget.removeEventListener instead.\n   * EventTarget.removeEventListener compatibility: Chrome, Opera 7, Safari, FF1.5+, IE9+\n   * @see https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/removeEventListener\n   * @function Chart.helpers.removeEvent\n   * @deprecated since version 2.7.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers$1.removeEvent = removeListener; // @TODO Make possible to select another platform at build time.\n\n  var implementation = platform_dom$2._enabled ? platform_dom$2 : platform_basic;\n  /**\n   * @namespace Chart.platform\n   * @see https://chartjs.gitbooks.io/proposals/content/Platform.html\n   * @since 2.4.0\n   */\n\n  var platform = helpers$1.extend({\n    /**\n     * @since 2.7.0\n     */\n    initialize: function initialize() {},\n\n    /**\n     * Called at chart construction time, returns a context2d instance implementing\n     * the [W3C Canvas 2D Context API standard]{@link https://www.w3.org/TR/2dcontext/}.\n     * @param {*} item - The native item from which to acquire context (platform specific)\n     * @param {object} options - The chart options\n     * @returns {CanvasRenderingContext2D} context2d instance\n     */\n    acquireContext: function acquireContext() {},\n\n    /**\n     * Called at chart destruction time, releases any resources associated to the context\n     * previously returned by the acquireContext() method.\n     * @param {CanvasRenderingContext2D} context - The context2d instance\n     * @returns {boolean} true if the method succeeded, else false\n     */\n    releaseContext: function releaseContext() {},\n\n    /**\n     * Registers the specified listener on the given chart.\n     * @param {Chart} chart - Chart from which to listen for event\n     * @param {string} type - The ({@link IEvent}) type to listen for\n     * @param {function} listener - Receives a notification (an object that implements\n     * the {@link IEvent} interface) when an event of the specified type occurs.\n     */\n    addEventListener: function addEventListener() {},\n\n    /**\n     * Removes the specified listener previously registered with addEventListener.\n     * @param {Chart} chart - Chart from which to remove the listener\n     * @param {string} type - The ({@link IEvent}) type to remove\n     * @param {function} listener - The listener function to remove from the event target.\n     */\n    removeEventListener: function removeEventListener() {}\n  }, implementation);\n\n  core_defaults._set('global', {\n    plugins: {}\n  });\n  /**\n   * The plugin service singleton\n   * @namespace Chart.plugins\n   * @since 2.1.0\n   */\n\n\n  var core_plugins = {\n    /**\n     * Globally registered plugins.\n     * @private\n     */\n    _plugins: [],\n\n    /**\n     * This identifier is used to invalidate the descriptors cache attached to each chart\n     * when a global plugin is registered or unregistered. In this case, the cache ID is\n     * incremented and descriptors are regenerated during following API calls.\n     * @private\n     */\n    _cacheId: 0,\n\n    /**\n     * Registers the given plugin(s) if not already registered.\n     * @param {IPlugin[]|IPlugin} plugins plugin instance(s).\n     */\n    register: function register(plugins) {\n      var p = this._plugins;\n      [].concat(plugins).forEach(function (plugin) {\n        if (p.indexOf(plugin) === -1) {\n          p.push(plugin);\n        }\n      });\n      this._cacheId++;\n    },\n\n    /**\n     * Unregisters the given plugin(s) only if registered.\n     * @param {IPlugin[]|IPlugin} plugins plugin instance(s).\n     */\n    unregister: function unregister(plugins) {\n      var p = this._plugins;\n      [].concat(plugins).forEach(function (plugin) {\n        var idx = p.indexOf(plugin);\n\n        if (idx !== -1) {\n          p.splice(idx, 1);\n        }\n      });\n      this._cacheId++;\n    },\n\n    /**\n     * Remove all registered plugins.\n     * @since 2.1.5\n     */\n    clear: function clear() {\n      this._plugins = [];\n      this._cacheId++;\n    },\n\n    /**\n     * Returns the number of registered plugins?\n     * @returns {number}\n     * @since 2.1.5\n     */\n    count: function count() {\n      return this._plugins.length;\n    },\n\n    /**\n     * Returns all registered plugin instances.\n     * @returns {IPlugin[]} array of plugin objects.\n     * @since 2.1.5\n     */\n    getAll: function getAll() {\n      return this._plugins;\n    },\n\n    /**\n     * Calls enabled plugins for `chart` on the specified hook and with the given args.\n     * This method immediately returns as soon as a plugin explicitly returns false. The\n     * returned value can be used, for instance, to interrupt the current action.\n     * @param {Chart} chart - The chart instance for which plugins should be called.\n     * @param {string} hook - The name of the plugin method to call (e.g. 'beforeUpdate').\n     * @param {Array} [args] - Extra arguments to apply to the hook call.\n     * @returns {boolean} false if any of the plugins return false, else returns true.\n     */\n    notify: function notify(chart, hook, args) {\n      var descriptors = this.descriptors(chart);\n      var ilen = descriptors.length;\n      var i, descriptor, plugin, params, method;\n\n      for (i = 0; i < ilen; ++i) {\n        descriptor = descriptors[i];\n        plugin = descriptor.plugin;\n        method = plugin[hook];\n\n        if (typeof method === 'function') {\n          params = [chart].concat(args || []);\n          params.push(descriptor.options);\n\n          if (method.apply(plugin, params) === false) {\n            return false;\n          }\n        }\n      }\n\n      return true;\n    },\n\n    /**\n     * Returns descriptors of enabled plugins for the given chart.\n     * @returns {object[]} [{ plugin, options }]\n     * @private\n     */\n    descriptors: function descriptors(chart) {\n      var cache = chart.$plugins || (chart.$plugins = {});\n\n      if (cache.id === this._cacheId) {\n        return cache.descriptors;\n      }\n\n      var plugins = [];\n      var descriptors = [];\n      var config = chart && chart.config || {};\n      var options = config.options && config.options.plugins || {};\n\n      this._plugins.concat(config.plugins || []).forEach(function (plugin) {\n        var idx = plugins.indexOf(plugin);\n\n        if (idx !== -1) {\n          return;\n        }\n\n        var id = plugin.id;\n        var opts = options[id];\n\n        if (opts === false) {\n          return;\n        }\n\n        if (opts === true) {\n          opts = helpers$1.clone(core_defaults.global.plugins[id]);\n        }\n\n        plugins.push(plugin);\n        descriptors.push({\n          plugin: plugin,\n          options: opts || {}\n        });\n      });\n\n      cache.descriptors = descriptors;\n      cache.id = this._cacheId;\n      return descriptors;\n    },\n\n    /**\n     * Invalidates cache for the given chart: descriptors hold a reference on plugin option,\n     * but in some cases, this reference can be changed by the user when updating options.\n     * https://github.com/chartjs/Chart.js/issues/5111#issuecomment-355934167\n     * @private\n     */\n    _invalidate: function _invalidate(chart) {\n      delete chart.$plugins;\n    }\n  };\n  var core_scaleService = {\n    // Scale registration object. Extensions can register new scale types (such as log or DB scales) and then\n    // use the new chart options to grab the correct scale\n    constructors: {},\n    // Use a registration function so that we can move to an ES6 map when we no longer need to support\n    // old browsers\n    // Scale config defaults\n    defaults: {},\n    registerScaleType: function registerScaleType(type, scaleConstructor, scaleDefaults) {\n      this.constructors[type] = scaleConstructor;\n      this.defaults[type] = helpers$1.clone(scaleDefaults);\n    },\n    getScaleConstructor: function getScaleConstructor(type) {\n      return this.constructors.hasOwnProperty(type) ? this.constructors[type] : undefined;\n    },\n    getScaleDefaults: function getScaleDefaults(type) {\n      // Return the scale defaults merged with the global settings so that we always use the latest ones\n      return this.defaults.hasOwnProperty(type) ? helpers$1.merge({}, [core_defaults.scale, this.defaults[type]]) : {};\n    },\n    updateScaleDefaults: function updateScaleDefaults(type, additions) {\n      var me = this;\n\n      if (me.defaults.hasOwnProperty(type)) {\n        me.defaults[type] = helpers$1.extend(me.defaults[type], additions);\n      }\n    },\n    addScalesToLayout: function addScalesToLayout(chart) {\n      // Adds each scale to the chart.boxes array to be sized accordingly\n      helpers$1.each(chart.scales, function (scale) {\n        // Set ILayoutItem parameters for backwards compatibility\n        scale.fullWidth = scale.options.fullWidth;\n        scale.position = scale.options.position;\n        scale.weight = scale.options.weight;\n        core_layouts.addBox(chart, scale);\n      });\n    }\n  };\n  var valueOrDefault$7 = helpers$1.valueOrDefault;\n\n  core_defaults._set('global', {\n    tooltips: {\n      enabled: true,\n      custom: null,\n      mode: 'nearest',\n      position: 'average',\n      intersect: true,\n      backgroundColor: 'rgba(0,0,0,0.8)',\n      titleFontStyle: 'bold',\n      titleSpacing: 2,\n      titleMarginBottom: 6,\n      titleFontColor: '#fff',\n      titleAlign: 'left',\n      bodySpacing: 2,\n      bodyFontColor: '#fff',\n      bodyAlign: 'left',\n      footerFontStyle: 'bold',\n      footerSpacing: 2,\n      footerMarginTop: 6,\n      footerFontColor: '#fff',\n      footerAlign: 'left',\n      yPadding: 6,\n      xPadding: 6,\n      caretPadding: 2,\n      caretSize: 5,\n      cornerRadius: 6,\n      multiKeyBackground: '#fff',\n      displayColors: true,\n      borderColor: 'rgba(0,0,0,0)',\n      borderWidth: 0,\n      callbacks: {\n        // Args are: (tooltipItems, data)\n        beforeTitle: helpers$1.noop,\n        title: function title(tooltipItems, data) {\n          var title = '';\n          var labels = data.labels;\n          var labelCount = labels ? labels.length : 0;\n\n          if (tooltipItems.length > 0) {\n            var item = tooltipItems[0];\n\n            if (item.label) {\n              title = item.label;\n            } else if (item.xLabel) {\n              title = item.xLabel;\n            } else if (labelCount > 0 && item.index < labelCount) {\n              title = labels[item.index];\n            }\n          }\n\n          return title;\n        },\n        afterTitle: helpers$1.noop,\n        // Args are: (tooltipItems, data)\n        beforeBody: helpers$1.noop,\n        // Args are: (tooltipItem, data)\n        beforeLabel: helpers$1.noop,\n        label: function label(tooltipItem, data) {\n          var label = data.datasets[tooltipItem.datasetIndex].label || '';\n\n          if (label) {\n            label += ': ';\n          }\n\n          if (!helpers$1.isNullOrUndef(tooltipItem.value)) {\n            label += tooltipItem.value;\n          } else {\n            label += tooltipItem.yLabel;\n          }\n\n          return label;\n        },\n        labelColor: function labelColor(tooltipItem, chart) {\n          var meta = chart.getDatasetMeta(tooltipItem.datasetIndex);\n          var activeElement = meta.data[tooltipItem.index];\n          var view = activeElement._view;\n          return {\n            borderColor: view.borderColor,\n            backgroundColor: view.backgroundColor\n          };\n        },\n        labelTextColor: function labelTextColor() {\n          return this._options.bodyFontColor;\n        },\n        afterLabel: helpers$1.noop,\n        // Args are: (tooltipItems, data)\n        afterBody: helpers$1.noop,\n        // Args are: (tooltipItems, data)\n        beforeFooter: helpers$1.noop,\n        footer: helpers$1.noop,\n        afterFooter: helpers$1.noop\n      }\n    }\n  });\n\n  var positioners = {\n    /**\n     * Average mode places the tooltip at the average position of the elements shown\n     * @function Chart.Tooltip.positioners.average\n     * @param elements {ChartElement[]} the elements being displayed in the tooltip\n     * @returns {object} tooltip position\n     */\n    average: function average(elements) {\n      if (!elements.length) {\n        return false;\n      }\n\n      var i, len;\n      var x = 0;\n      var y = 0;\n      var count = 0;\n\n      for (i = 0, len = elements.length; i < len; ++i) {\n        var el = elements[i];\n\n        if (el && el.hasValue()) {\n          var pos = el.tooltipPosition();\n          x += pos.x;\n          y += pos.y;\n          ++count;\n        }\n      }\n\n      return {\n        x: x / count,\n        y: y / count\n      };\n    },\n\n    /**\n     * Gets the tooltip position nearest of the item nearest to the event position\n     * @function Chart.Tooltip.positioners.nearest\n     * @param elements {Chart.Element[]} the tooltip elements\n     * @param eventPosition {object} the position of the event in canvas coordinates\n     * @returns {object} the tooltip position\n     */\n    nearest: function nearest(elements, eventPosition) {\n      var x = eventPosition.x;\n      var y = eventPosition.y;\n      var minDistance = Number.POSITIVE_INFINITY;\n      var i, len, nearestElement;\n\n      for (i = 0, len = elements.length; i < len; ++i) {\n        var el = elements[i];\n\n        if (el && el.hasValue()) {\n          var center = el.getCenterPoint();\n          var d = helpers$1.distanceBetweenPoints(eventPosition, center);\n\n          if (d < minDistance) {\n            minDistance = d;\n            nearestElement = el;\n          }\n        }\n      }\n\n      if (nearestElement) {\n        var tp = nearestElement.tooltipPosition();\n        x = tp.x;\n        y = tp.y;\n      }\n\n      return {\n        x: x,\n        y: y\n      };\n    }\n  }; // Helper to push or concat based on if the 2nd parameter is an array or not\n\n  function pushOrConcat(base, toPush) {\n    if (toPush) {\n      if (helpers$1.isArray(toPush)) {\n        // base = base.concat(toPush);\n        Array.prototype.push.apply(base, toPush);\n      } else {\n        base.push(toPush);\n      }\n    }\n\n    return base;\n  }\n  /**\n   * Returns array of strings split by newline\n   * @param {string} value - The value to split by newline.\n   * @returns {string[]} value if newline present - Returned from String split() method\n   * @function\n   */\n\n\n  function splitNewlines(str) {\n    if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n      return str.split('\\n');\n    }\n\n    return str;\n  }\n  /**\n   * Private helper to create a tooltip item model\n   * @param element - the chart element (point, arc, bar) to create the tooltip item for\n   * @return new tooltip item\n   */\n\n\n  function createTooltipItem(element) {\n    var xScale = element._xScale;\n    var yScale = element._yScale || element._scale; // handle radar || polarArea charts\n\n    var index = element._index;\n    var datasetIndex = element._datasetIndex;\n\n    var controller = element._chart.getDatasetMeta(datasetIndex).controller;\n\n    var indexScale = controller._getIndexScale();\n\n    var valueScale = controller._getValueScale();\n\n    return {\n      xLabel: xScale ? xScale.getLabelForIndex(index, datasetIndex) : '',\n      yLabel: yScale ? yScale.getLabelForIndex(index, datasetIndex) : '',\n      label: indexScale ? '' + indexScale.getLabelForIndex(index, datasetIndex) : '',\n      value: valueScale ? '' + valueScale.getLabelForIndex(index, datasetIndex) : '',\n      index: index,\n      datasetIndex: datasetIndex,\n      x: element._model.x,\n      y: element._model.y\n    };\n  }\n  /**\n   * Helper to get the reset model for the tooltip\n   * @param tooltipOpts {object} the tooltip options\n   */\n\n\n  function getBaseModel(tooltipOpts) {\n    var globalDefaults = core_defaults.global;\n    return {\n      // Positioning\n      xPadding: tooltipOpts.xPadding,\n      yPadding: tooltipOpts.yPadding,\n      xAlign: tooltipOpts.xAlign,\n      yAlign: tooltipOpts.yAlign,\n      // Body\n      bodyFontColor: tooltipOpts.bodyFontColor,\n      _bodyFontFamily: valueOrDefault$7(tooltipOpts.bodyFontFamily, globalDefaults.defaultFontFamily),\n      _bodyFontStyle: valueOrDefault$7(tooltipOpts.bodyFontStyle, globalDefaults.defaultFontStyle),\n      _bodyAlign: tooltipOpts.bodyAlign,\n      bodyFontSize: valueOrDefault$7(tooltipOpts.bodyFontSize, globalDefaults.defaultFontSize),\n      bodySpacing: tooltipOpts.bodySpacing,\n      // Title\n      titleFontColor: tooltipOpts.titleFontColor,\n      _titleFontFamily: valueOrDefault$7(tooltipOpts.titleFontFamily, globalDefaults.defaultFontFamily),\n      _titleFontStyle: valueOrDefault$7(tooltipOpts.titleFontStyle, globalDefaults.defaultFontStyle),\n      titleFontSize: valueOrDefault$7(tooltipOpts.titleFontSize, globalDefaults.defaultFontSize),\n      _titleAlign: tooltipOpts.titleAlign,\n      titleSpacing: tooltipOpts.titleSpacing,\n      titleMarginBottom: tooltipOpts.titleMarginBottom,\n      // Footer\n      footerFontColor: tooltipOpts.footerFontColor,\n      _footerFontFamily: valueOrDefault$7(tooltipOpts.footerFontFamily, globalDefaults.defaultFontFamily),\n      _footerFontStyle: valueOrDefault$7(tooltipOpts.footerFontStyle, globalDefaults.defaultFontStyle),\n      footerFontSize: valueOrDefault$7(tooltipOpts.footerFontSize, globalDefaults.defaultFontSize),\n      _footerAlign: tooltipOpts.footerAlign,\n      footerSpacing: tooltipOpts.footerSpacing,\n      footerMarginTop: tooltipOpts.footerMarginTop,\n      // Appearance\n      caretSize: tooltipOpts.caretSize,\n      cornerRadius: tooltipOpts.cornerRadius,\n      backgroundColor: tooltipOpts.backgroundColor,\n      opacity: 0,\n      legendColorBackground: tooltipOpts.multiKeyBackground,\n      displayColors: tooltipOpts.displayColors,\n      borderColor: tooltipOpts.borderColor,\n      borderWidth: tooltipOpts.borderWidth\n    };\n  }\n  /**\n   * Get the size of the tooltip\n   */\n\n\n  function getTooltipSize(tooltip, model) {\n    var ctx = tooltip._chart.ctx;\n    var height = model.yPadding * 2; // Tooltip Padding\n\n    var width = 0; // Count of all lines in the body\n\n    var body = model.body;\n    var combinedBodyLength = body.reduce(function (count, bodyItem) {\n      return count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length;\n    }, 0);\n    combinedBodyLength += model.beforeBody.length + model.afterBody.length;\n    var titleLineCount = model.title.length;\n    var footerLineCount = model.footer.length;\n    var titleFontSize = model.titleFontSize;\n    var bodyFontSize = model.bodyFontSize;\n    var footerFontSize = model.footerFontSize;\n    height += titleLineCount * titleFontSize; // Title Lines\n\n    height += titleLineCount ? (titleLineCount - 1) * model.titleSpacing : 0; // Title Line Spacing\n\n    height += titleLineCount ? model.titleMarginBottom : 0; // Title's bottom Margin\n\n    height += combinedBodyLength * bodyFontSize; // Body Lines\n\n    height += combinedBodyLength ? (combinedBodyLength - 1) * model.bodySpacing : 0; // Body Line Spacing\n\n    height += footerLineCount ? model.footerMarginTop : 0; // Footer Margin\n\n    height += footerLineCount * footerFontSize; // Footer Lines\n\n    height += footerLineCount ? (footerLineCount - 1) * model.footerSpacing : 0; // Footer Line Spacing\n    // Title width\n\n    var widthPadding = 0;\n\n    var maxLineWidth = function maxLineWidth(line) {\n      width = Math.max(width, ctx.measureText(line).width + widthPadding);\n    };\n\n    ctx.font = helpers$1.fontString(titleFontSize, model._titleFontStyle, model._titleFontFamily);\n    helpers$1.each(model.title, maxLineWidth); // Body width\n\n    ctx.font = helpers$1.fontString(bodyFontSize, model._bodyFontStyle, model._bodyFontFamily);\n    helpers$1.each(model.beforeBody.concat(model.afterBody), maxLineWidth); // Body lines may include some extra width due to the color box\n\n    widthPadding = model.displayColors ? bodyFontSize + 2 : 0;\n    helpers$1.each(body, function (bodyItem) {\n      helpers$1.each(bodyItem.before, maxLineWidth);\n      helpers$1.each(bodyItem.lines, maxLineWidth);\n      helpers$1.each(bodyItem.after, maxLineWidth);\n    }); // Reset back to 0\n\n    widthPadding = 0; // Footer width\n\n    ctx.font = helpers$1.fontString(footerFontSize, model._footerFontStyle, model._footerFontFamily);\n    helpers$1.each(model.footer, maxLineWidth); // Add padding\n\n    width += 2 * model.xPadding;\n    return {\n      width: width,\n      height: height\n    };\n  }\n  /**\n   * Helper to get the alignment of a tooltip given the size\n   */\n\n\n  function determineAlignment(tooltip, size) {\n    var model = tooltip._model;\n    var chart = tooltip._chart;\n    var chartArea = tooltip._chart.chartArea;\n    var xAlign = 'center';\n    var yAlign = 'center';\n\n    if (model.y < size.height) {\n      yAlign = 'top';\n    } else if (model.y > chart.height - size.height) {\n      yAlign = 'bottom';\n    }\n\n    var lf, rf; // functions to determine left, right alignment\n\n    var olf, orf; // functions to determine if left/right alignment causes tooltip to go outside chart\n\n    var yf; // function to get the y alignment if the tooltip goes outside of the left or right edges\n\n    var midX = (chartArea.left + chartArea.right) / 2;\n    var midY = (chartArea.top + chartArea.bottom) / 2;\n\n    if (yAlign === 'center') {\n      lf = function lf(x) {\n        return x <= midX;\n      };\n\n      rf = function rf(x) {\n        return x > midX;\n      };\n    } else {\n      lf = function lf(x) {\n        return x <= size.width / 2;\n      };\n\n      rf = function rf(x) {\n        return x >= chart.width - size.width / 2;\n      };\n    }\n\n    olf = function olf(x) {\n      return x + size.width + model.caretSize + model.caretPadding > chart.width;\n    };\n\n    orf = function orf(x) {\n      return x - size.width - model.caretSize - model.caretPadding < 0;\n    };\n\n    yf = function yf(y) {\n      return y <= midY ? 'top' : 'bottom';\n    };\n\n    if (lf(model.x)) {\n      xAlign = 'left'; // Is tooltip too wide and goes over the right side of the chart.?\n\n      if (olf(model.x)) {\n        xAlign = 'center';\n        yAlign = yf(model.y);\n      }\n    } else if (rf(model.x)) {\n      xAlign = 'right'; // Is tooltip too wide and goes outside left edge of canvas?\n\n      if (orf(model.x)) {\n        xAlign = 'center';\n        yAlign = yf(model.y);\n      }\n    }\n\n    var opts = tooltip._options;\n    return {\n      xAlign: opts.xAlign ? opts.xAlign : xAlign,\n      yAlign: opts.yAlign ? opts.yAlign : yAlign\n    };\n  }\n  /**\n   * Helper to get the location a tooltip needs to be placed at given the initial position (via the vm) and the size and alignment\n   */\n\n\n  function getBackgroundPoint(vm, size, alignment, chart) {\n    // Background Position\n    var x = vm.x;\n    var y = vm.y;\n    var caretSize = vm.caretSize;\n    var caretPadding = vm.caretPadding;\n    var cornerRadius = vm.cornerRadius;\n    var xAlign = alignment.xAlign;\n    var yAlign = alignment.yAlign;\n    var paddingAndSize = caretSize + caretPadding;\n    var radiusAndPadding = cornerRadius + caretPadding;\n\n    if (xAlign === 'right') {\n      x -= size.width;\n    } else if (xAlign === 'center') {\n      x -= size.width / 2;\n\n      if (x + size.width > chart.width) {\n        x = chart.width - size.width;\n      }\n\n      if (x < 0) {\n        x = 0;\n      }\n    }\n\n    if (yAlign === 'top') {\n      y += paddingAndSize;\n    } else if (yAlign === 'bottom') {\n      y -= size.height + paddingAndSize;\n    } else {\n      y -= size.height / 2;\n    }\n\n    if (yAlign === 'center') {\n      if (xAlign === 'left') {\n        x += paddingAndSize;\n      } else if (xAlign === 'right') {\n        x -= paddingAndSize;\n      }\n    } else if (xAlign === 'left') {\n      x -= radiusAndPadding;\n    } else if (xAlign === 'right') {\n      x += radiusAndPadding;\n    }\n\n    return {\n      x: x,\n      y: y\n    };\n  }\n\n  function getAlignedX(vm, align) {\n    return align === 'center' ? vm.x + vm.width / 2 : align === 'right' ? vm.x + vm.width - vm.xPadding : vm.x + vm.xPadding;\n  }\n  /**\n   * Helper to build before and after body lines\n   */\n\n\n  function getBeforeAfterBodyLines(callback) {\n    return pushOrConcat([], splitNewlines(callback));\n  }\n\n  var exports$3 = core_element.extend({\n    initialize: function initialize() {\n      this._model = getBaseModel(this._options);\n      this._lastActive = [];\n    },\n    // Get the title\n    // Args are: (tooltipItem, data)\n    getTitle: function getTitle() {\n      var me = this;\n      var opts = me._options;\n      var callbacks = opts.callbacks;\n      var beforeTitle = callbacks.beforeTitle.apply(me, arguments);\n      var title = callbacks.title.apply(me, arguments);\n      var afterTitle = callbacks.afterTitle.apply(me, arguments);\n      var lines = [];\n      lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n      lines = pushOrConcat(lines, splitNewlines(title));\n      lines = pushOrConcat(lines, splitNewlines(afterTitle));\n      return lines;\n    },\n    // Args are: (tooltipItem, data)\n    getBeforeBody: function getBeforeBody() {\n      return getBeforeAfterBodyLines(this._options.callbacks.beforeBody.apply(this, arguments));\n    },\n    // Args are: (tooltipItem, data)\n    getBody: function getBody(tooltipItems, data) {\n      var me = this;\n      var callbacks = me._options.callbacks;\n      var bodyItems = [];\n      helpers$1.each(tooltipItems, function (tooltipItem) {\n        var bodyItem = {\n          before: [],\n          lines: [],\n          after: []\n        };\n        pushOrConcat(bodyItem.before, splitNewlines(callbacks.beforeLabel.call(me, tooltipItem, data)));\n        pushOrConcat(bodyItem.lines, callbacks.label.call(me, tooltipItem, data));\n        pushOrConcat(bodyItem.after, splitNewlines(callbacks.afterLabel.call(me, tooltipItem, data)));\n        bodyItems.push(bodyItem);\n      });\n      return bodyItems;\n    },\n    // Args are: (tooltipItem, data)\n    getAfterBody: function getAfterBody() {\n      return getBeforeAfterBodyLines(this._options.callbacks.afterBody.apply(this, arguments));\n    },\n    // Get the footer and beforeFooter and afterFooter lines\n    // Args are: (tooltipItem, data)\n    getFooter: function getFooter() {\n      var me = this;\n      var callbacks = me._options.callbacks;\n      var beforeFooter = callbacks.beforeFooter.apply(me, arguments);\n      var footer = callbacks.footer.apply(me, arguments);\n      var afterFooter = callbacks.afterFooter.apply(me, arguments);\n      var lines = [];\n      lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n      lines = pushOrConcat(lines, splitNewlines(footer));\n      lines = pushOrConcat(lines, splitNewlines(afterFooter));\n      return lines;\n    },\n    update: function update(changed) {\n      var me = this;\n      var opts = me._options; // Need to regenerate the model because its faster than using extend and it is necessary due to the optimization in Chart.Element.transition\n      // that does _view = _model if ease === 1. This causes the 2nd tooltip update to set properties in both the view and model at the same time\n      // which breaks any animations.\n\n      var existingModel = me._model;\n      var model = me._model = getBaseModel(opts);\n      var active = me._active;\n      var data = me._data; // In the case where active.length === 0 we need to keep these at existing values for good animations\n\n      var alignment = {\n        xAlign: existingModel.xAlign,\n        yAlign: existingModel.yAlign\n      };\n      var backgroundPoint = {\n        x: existingModel.x,\n        y: existingModel.y\n      };\n      var tooltipSize = {\n        width: existingModel.width,\n        height: existingModel.height\n      };\n      var tooltipPosition = {\n        x: existingModel.caretX,\n        y: existingModel.caretY\n      };\n      var i, len;\n\n      if (active.length) {\n        model.opacity = 1;\n        var labelColors = [];\n        var labelTextColors = [];\n        tooltipPosition = positioners[opts.position].call(me, active, me._eventPosition);\n        var tooltipItems = [];\n\n        for (i = 0, len = active.length; i < len; ++i) {\n          tooltipItems.push(createTooltipItem(active[i]));\n        } // If the user provided a filter function, use it to modify the tooltip items\n\n\n        if (opts.filter) {\n          tooltipItems = tooltipItems.filter(function (a) {\n            return opts.filter(a, data);\n          });\n        } // If the user provided a sorting function, use it to modify the tooltip items\n\n\n        if (opts.itemSort) {\n          tooltipItems = tooltipItems.sort(function (a, b) {\n            return opts.itemSort(a, b, data);\n          });\n        } // Determine colors for boxes\n\n\n        helpers$1.each(tooltipItems, function (tooltipItem) {\n          labelColors.push(opts.callbacks.labelColor.call(me, tooltipItem, me._chart));\n          labelTextColors.push(opts.callbacks.labelTextColor.call(me, tooltipItem, me._chart));\n        }); // Build the Text Lines\n\n        model.title = me.getTitle(tooltipItems, data);\n        model.beforeBody = me.getBeforeBody(tooltipItems, data);\n        model.body = me.getBody(tooltipItems, data);\n        model.afterBody = me.getAfterBody(tooltipItems, data);\n        model.footer = me.getFooter(tooltipItems, data); // Initial positioning and colors\n\n        model.x = tooltipPosition.x;\n        model.y = tooltipPosition.y;\n        model.caretPadding = opts.caretPadding;\n        model.labelColors = labelColors;\n        model.labelTextColors = labelTextColors; // data points\n\n        model.dataPoints = tooltipItems; // We need to determine alignment of the tooltip\n\n        tooltipSize = getTooltipSize(this, model);\n        alignment = determineAlignment(this, tooltipSize); // Final Size and Position\n\n        backgroundPoint = getBackgroundPoint(model, tooltipSize, alignment, me._chart);\n      } else {\n        model.opacity = 0;\n      }\n\n      model.xAlign = alignment.xAlign;\n      model.yAlign = alignment.yAlign;\n      model.x = backgroundPoint.x;\n      model.y = backgroundPoint.y;\n      model.width = tooltipSize.width;\n      model.height = tooltipSize.height; // Point where the caret on the tooltip points to\n\n      model.caretX = tooltipPosition.x;\n      model.caretY = tooltipPosition.y;\n      me._model = model;\n\n      if (changed && opts.custom) {\n        opts.custom.call(me, model);\n      }\n\n      return me;\n    },\n    drawCaret: function drawCaret(tooltipPoint, size) {\n      var ctx = this._chart.ctx;\n      var vm = this._view;\n      var caretPosition = this.getCaretPosition(tooltipPoint, size, vm);\n      ctx.lineTo(caretPosition.x1, caretPosition.y1);\n      ctx.lineTo(caretPosition.x2, caretPosition.y2);\n      ctx.lineTo(caretPosition.x3, caretPosition.y3);\n    },\n    getCaretPosition: function getCaretPosition(tooltipPoint, size, vm) {\n      var x1, x2, x3, y1, y2, y3;\n      var caretSize = vm.caretSize;\n      var cornerRadius = vm.cornerRadius;\n      var xAlign = vm.xAlign;\n      var yAlign = vm.yAlign;\n      var ptX = tooltipPoint.x;\n      var ptY = tooltipPoint.y;\n      var width = size.width;\n      var height = size.height;\n\n      if (yAlign === 'center') {\n        y2 = ptY + height / 2;\n\n        if (xAlign === 'left') {\n          x1 = ptX;\n          x2 = x1 - caretSize;\n          x3 = x1;\n          y1 = y2 + caretSize;\n          y3 = y2 - caretSize;\n        } else {\n          x1 = ptX + width;\n          x2 = x1 + caretSize;\n          x3 = x1;\n          y1 = y2 - caretSize;\n          y3 = y2 + caretSize;\n        }\n      } else {\n        if (xAlign === 'left') {\n          x2 = ptX + cornerRadius + caretSize;\n          x1 = x2 - caretSize;\n          x3 = x2 + caretSize;\n        } else if (xAlign === 'right') {\n          x2 = ptX + width - cornerRadius - caretSize;\n          x1 = x2 - caretSize;\n          x3 = x2 + caretSize;\n        } else {\n          x2 = vm.caretX;\n          x1 = x2 - caretSize;\n          x3 = x2 + caretSize;\n        }\n\n        if (yAlign === 'top') {\n          y1 = ptY;\n          y2 = y1 - caretSize;\n          y3 = y1;\n        } else {\n          y1 = ptY + height;\n          y2 = y1 + caretSize;\n          y3 = y1; // invert drawing order\n\n          var tmp = x3;\n          x3 = x1;\n          x1 = tmp;\n        }\n      }\n\n      return {\n        x1: x1,\n        x2: x2,\n        x3: x3,\n        y1: y1,\n        y2: y2,\n        y3: y3\n      };\n    },\n    drawTitle: function drawTitle(pt, vm, ctx) {\n      var title = vm.title;\n\n      if (title.length) {\n        pt.x = getAlignedX(vm, vm._titleAlign);\n        ctx.textAlign = vm._titleAlign;\n        ctx.textBaseline = 'top';\n        var titleFontSize = vm.titleFontSize;\n        var titleSpacing = vm.titleSpacing;\n        ctx.fillStyle = vm.titleFontColor;\n        ctx.font = helpers$1.fontString(titleFontSize, vm._titleFontStyle, vm._titleFontFamily);\n        var i, len;\n\n        for (i = 0, len = title.length; i < len; ++i) {\n          ctx.fillText(title[i], pt.x, pt.y);\n          pt.y += titleFontSize + titleSpacing; // Line Height and spacing\n\n          if (i + 1 === title.length) {\n            pt.y += vm.titleMarginBottom - titleSpacing; // If Last, add margin, remove spacing\n          }\n        }\n      }\n    },\n    drawBody: function drawBody(pt, vm, ctx) {\n      var bodyFontSize = vm.bodyFontSize;\n      var bodySpacing = vm.bodySpacing;\n      var bodyAlign = vm._bodyAlign;\n      var body = vm.body;\n      var drawColorBoxes = vm.displayColors;\n      var labelColors = vm.labelColors;\n      var xLinePadding = 0;\n      var colorX = drawColorBoxes ? getAlignedX(vm, 'left') : 0;\n      var textColor;\n      ctx.textAlign = bodyAlign;\n      ctx.textBaseline = 'top';\n      ctx.font = helpers$1.fontString(bodyFontSize, vm._bodyFontStyle, vm._bodyFontFamily);\n      pt.x = getAlignedX(vm, bodyAlign); // Before Body\n\n      var fillLineOfText = function fillLineOfText(line) {\n        ctx.fillText(line, pt.x + xLinePadding, pt.y);\n        pt.y += bodyFontSize + bodySpacing;\n      }; // Before body lines\n\n\n      ctx.fillStyle = vm.bodyFontColor;\n      helpers$1.each(vm.beforeBody, fillLineOfText);\n      xLinePadding = drawColorBoxes && bodyAlign !== 'right' ? bodyAlign === 'center' ? bodyFontSize / 2 + 1 : bodyFontSize + 2 : 0; // Draw body lines now\n\n      helpers$1.each(body, function (bodyItem, i) {\n        textColor = vm.labelTextColors[i];\n        ctx.fillStyle = textColor;\n        helpers$1.each(bodyItem.before, fillLineOfText);\n        helpers$1.each(bodyItem.lines, function (line) {\n          // Draw Legend-like boxes if needed\n          if (drawColorBoxes) {\n            // Fill a white rect so that colours merge nicely if the opacity is < 1\n            ctx.fillStyle = vm.legendColorBackground;\n            ctx.fillRect(colorX, pt.y, bodyFontSize, bodyFontSize); // Border\n\n            ctx.lineWidth = 1;\n            ctx.strokeStyle = labelColors[i].borderColor;\n            ctx.strokeRect(colorX, pt.y, bodyFontSize, bodyFontSize); // Inner square\n\n            ctx.fillStyle = labelColors[i].backgroundColor;\n            ctx.fillRect(colorX + 1, pt.y + 1, bodyFontSize - 2, bodyFontSize - 2);\n            ctx.fillStyle = textColor;\n          }\n\n          fillLineOfText(line);\n        });\n        helpers$1.each(bodyItem.after, fillLineOfText);\n      }); // Reset back to 0 for after body\n\n      xLinePadding = 0; // After body lines\n\n      helpers$1.each(vm.afterBody, fillLineOfText);\n      pt.y -= bodySpacing; // Remove last body spacing\n    },\n    drawFooter: function drawFooter(pt, vm, ctx) {\n      var footer = vm.footer;\n\n      if (footer.length) {\n        pt.x = getAlignedX(vm, vm._footerAlign);\n        pt.y += vm.footerMarginTop;\n        ctx.textAlign = vm._footerAlign;\n        ctx.textBaseline = 'top';\n        ctx.fillStyle = vm.footerFontColor;\n        ctx.font = helpers$1.fontString(vm.footerFontSize, vm._footerFontStyle, vm._footerFontFamily);\n        helpers$1.each(footer, function (line) {\n          ctx.fillText(line, pt.x, pt.y);\n          pt.y += vm.footerFontSize + vm.footerSpacing;\n        });\n      }\n    },\n    drawBackground: function drawBackground(pt, vm, ctx, tooltipSize) {\n      ctx.fillStyle = vm.backgroundColor;\n      ctx.strokeStyle = vm.borderColor;\n      ctx.lineWidth = vm.borderWidth;\n      var xAlign = vm.xAlign;\n      var yAlign = vm.yAlign;\n      var x = pt.x;\n      var y = pt.y;\n      var width = tooltipSize.width;\n      var height = tooltipSize.height;\n      var radius = vm.cornerRadius;\n      ctx.beginPath();\n      ctx.moveTo(x + radius, y);\n\n      if (yAlign === 'top') {\n        this.drawCaret(pt, tooltipSize);\n      }\n\n      ctx.lineTo(x + width - radius, y);\n      ctx.quadraticCurveTo(x + width, y, x + width, y + radius);\n\n      if (yAlign === 'center' && xAlign === 'right') {\n        this.drawCaret(pt, tooltipSize);\n      }\n\n      ctx.lineTo(x + width, y + height - radius);\n      ctx.quadraticCurveTo(x + width, y + height, x + width - radius, y + height);\n\n      if (yAlign === 'bottom') {\n        this.drawCaret(pt, tooltipSize);\n      }\n\n      ctx.lineTo(x + radius, y + height);\n      ctx.quadraticCurveTo(x, y + height, x, y + height - radius);\n\n      if (yAlign === 'center' && xAlign === 'left') {\n        this.drawCaret(pt, tooltipSize);\n      }\n\n      ctx.lineTo(x, y + radius);\n      ctx.quadraticCurveTo(x, y, x + radius, y);\n      ctx.closePath();\n      ctx.fill();\n\n      if (vm.borderWidth > 0) {\n        ctx.stroke();\n      }\n    },\n    draw: function draw() {\n      var ctx = this._chart.ctx;\n      var vm = this._view;\n\n      if (vm.opacity === 0) {\n        return;\n      }\n\n      var tooltipSize = {\n        width: vm.width,\n        height: vm.height\n      };\n      var pt = {\n        x: vm.x,\n        y: vm.y\n      }; // IE11/Edge does not like very small opacities, so snap to 0\n\n      var opacity = Math.abs(vm.opacity < 1e-3) ? 0 : vm.opacity; // Truthy/falsey value for empty tooltip\n\n      var hasTooltipContent = vm.title.length || vm.beforeBody.length || vm.body.length || vm.afterBody.length || vm.footer.length;\n\n      if (this._options.enabled && hasTooltipContent) {\n        ctx.save();\n        ctx.globalAlpha = opacity; // Draw Background\n\n        this.drawBackground(pt, vm, ctx, tooltipSize); // Draw Title, Body, and Footer\n\n        pt.y += vm.yPadding; // Titles\n\n        this.drawTitle(pt, vm, ctx); // Body\n\n        this.drawBody(pt, vm, ctx); // Footer\n\n        this.drawFooter(pt, vm, ctx);\n        ctx.restore();\n      }\n    },\n\n    /**\n     * Handle an event\n     * @private\n     * @param {IEvent} event - The event to handle\n     * @returns {boolean} true if the tooltip changed\n     */\n    handleEvent: function handleEvent(e) {\n      var me = this;\n      var options = me._options;\n      var changed = false;\n      me._lastActive = me._lastActive || []; // Find Active Elements for tooltips\n\n      if (e.type === 'mouseout') {\n        me._active = [];\n      } else {\n        me._active = me._chart.getElementsAtEventForMode(e, options.mode, options);\n      } // Remember Last Actives\n\n\n      changed = !helpers$1.arrayEquals(me._active, me._lastActive); // Only handle target event on tooltip change\n\n      if (changed) {\n        me._lastActive = me._active;\n\n        if (options.enabled || options.custom) {\n          me._eventPosition = {\n            x: e.x,\n            y: e.y\n          };\n          me.update(true);\n          me.pivot();\n        }\n      }\n\n      return changed;\n    }\n  });\n  /**\n   * @namespace Chart.Tooltip.positioners\n   */\n\n  var positioners_1 = positioners;\n  var core_tooltip = exports$3;\n  core_tooltip.positioners = positioners_1;\n  var valueOrDefault$8 = helpers$1.valueOrDefault;\n\n  core_defaults._set('global', {\n    elements: {},\n    events: ['mousemove', 'mouseout', 'click', 'touchstart', 'touchmove'],\n    hover: {\n      onHover: null,\n      mode: 'nearest',\n      intersect: true,\n      animationDuration: 400\n    },\n    onClick: null,\n    maintainAspectRatio: true,\n    responsive: true,\n    responsiveAnimationDuration: 0\n  });\n  /**\n   * Recursively merge the given config objects representing the `scales` option\n   * by incorporating scale defaults in `xAxes` and `yAxes` array items, then\n   * returns a deep copy of the result, thus doesn't alter inputs.\n   */\n\n\n  function mergeScaleConfig()\n  /* config objects ... */\n  {\n    return helpers$1.merge({}, [].slice.call(arguments), {\n      merger: function merger(key, target, source, options) {\n        if (key === 'xAxes' || key === 'yAxes') {\n          var slen = source[key].length;\n          var i, type, scale;\n\n          if (!target[key]) {\n            target[key] = [];\n          }\n\n          for (i = 0; i < slen; ++i) {\n            scale = source[key][i];\n            type = valueOrDefault$8(scale.type, key === 'xAxes' ? 'category' : 'linear');\n\n            if (i >= target[key].length) {\n              target[key].push({});\n            }\n\n            if (!target[key][i].type || scale.type && scale.type !== target[key][i].type) {\n              // new/untyped scale or type changed: let's apply the new defaults\n              // then merge source scale to correctly overwrite the defaults.\n              helpers$1.merge(target[key][i], [core_scaleService.getScaleDefaults(type), scale]);\n            } else {\n              // scales type are the same\n              helpers$1.merge(target[key][i], scale);\n            }\n          }\n        } else {\n          helpers$1._merger(key, target, source, options);\n        }\n      }\n    });\n  }\n  /**\n   * Recursively merge the given config objects as the root options by handling\n   * default scale options for the `scales` and `scale` properties, then returns\n   * a deep copy of the result, thus doesn't alter inputs.\n   */\n\n\n  function mergeConfig()\n  /* config objects ... */\n  {\n    return helpers$1.merge({}, [].slice.call(arguments), {\n      merger: function merger(key, target, source, options) {\n        var tval = target[key] || {};\n        var sval = source[key];\n\n        if (key === 'scales') {\n          // scale config merging is complex. Add our own function here for that\n          target[key] = mergeScaleConfig(tval, sval);\n        } else if (key === 'scale') {\n          // used in polar area & radar charts since there is only one scale\n          target[key] = helpers$1.merge(tval, [core_scaleService.getScaleDefaults(sval.type), sval]);\n        } else {\n          helpers$1._merger(key, target, source, options);\n        }\n      }\n    });\n  }\n\n  function initConfig(config) {\n    config = config || {}; // Do NOT use mergeConfig for the data object because this method merges arrays\n    // and so would change references to labels and datasets, preventing data updates.\n\n    var data = config.data = config.data || {};\n    data.datasets = data.datasets || [];\n    data.labels = data.labels || [];\n    config.options = mergeConfig(core_defaults.global, core_defaults[config.type], config.options || {});\n    return config;\n  }\n\n  function updateConfig(chart) {\n    var newOptions = chart.options;\n    helpers$1.each(chart.scales, function (scale) {\n      core_layouts.removeBox(chart, scale);\n    });\n    newOptions = mergeConfig(core_defaults.global, core_defaults[chart.config.type], newOptions);\n    chart.options = chart.config.options = newOptions;\n    chart.ensureScalesHaveIDs();\n    chart.buildOrUpdateScales(); // Tooltip\n\n    chart.tooltip._options = newOptions.tooltips;\n    chart.tooltip.initialize();\n  }\n\n  function positionIsHorizontal(position) {\n    return position === 'top' || position === 'bottom';\n  }\n\n  var Chart = function Chart(item, config) {\n    this.construct(item, config);\n    return this;\n  };\n\n  helpers$1.extend(Chart.prototype,\n  /** @lends Chart */\n  {\n    /**\n     * @private\n     */\n    construct: function construct(item, config) {\n      var me = this;\n      config = initConfig(config);\n      var context = platform.acquireContext(item, config);\n      var canvas = context && context.canvas;\n      var height = canvas && canvas.height;\n      var width = canvas && canvas.width;\n      me.id = helpers$1.uid();\n      me.ctx = context;\n      me.canvas = canvas;\n      me.config = config;\n      me.width = width;\n      me.height = height;\n      me.aspectRatio = height ? width / height : null;\n      me.options = config.options;\n      me._bufferedRender = false;\n      /**\n       * Provided for backward compatibility, Chart and Chart.Controller have been merged,\n       * the \"instance\" still need to be defined since it might be called from plugins.\n       * @prop Chart#chart\n       * @deprecated since version 2.6.0\n       * @todo remove at version 3\n       * @private\n       */\n\n      me.chart = me;\n      me.controller = me; // chart.chart.controller #inception\n      // Add the chart instance to the global namespace\n\n      Chart.instances[me.id] = me; // Define alias to the config data: `chart.data === chart.config.data`\n\n      Object.defineProperty(me, 'data', {\n        get: function get() {\n          return me.config.data;\n        },\n        set: function set(value) {\n          me.config.data = value;\n        }\n      });\n\n      if (!context || !canvas) {\n        // The given item is not a compatible context2d element, let's return before finalizing\n        // the chart initialization but after setting basic chart / controller properties that\n        // can help to figure out that the chart is not valid (e.g chart.canvas !== null);\n        // https://github.com/chartjs/Chart.js/issues/2807\n        console.error(\"Failed to create chart: can't acquire context from the given item\");\n        return;\n      }\n\n      me.initialize();\n      me.update();\n    },\n\n    /**\n     * @private\n     */\n    initialize: function initialize() {\n      var me = this; // Before init plugin notification\n\n      core_plugins.notify(me, 'beforeInit');\n      helpers$1.retinaScale(me, me.options.devicePixelRatio);\n      me.bindEvents();\n\n      if (me.options.responsive) {\n        // Initial resize before chart draws (must be silent to preserve initial animations).\n        me.resize(true);\n      } // Make sure scales have IDs and are built before we build any controllers.\n\n\n      me.ensureScalesHaveIDs();\n      me.buildOrUpdateScales();\n      me.initToolTip(); // After init plugin notification\n\n      core_plugins.notify(me, 'afterInit');\n      return me;\n    },\n    clear: function clear() {\n      helpers$1.canvas.clear(this);\n      return this;\n    },\n    stop: function stop() {\n      // Stops any current animation loop occurring\n      core_animations.cancelAnimation(this);\n      return this;\n    },\n    resize: function resize(silent) {\n      var me = this;\n      var options = me.options;\n      var canvas = me.canvas;\n      var aspectRatio = options.maintainAspectRatio && me.aspectRatio || null; // the canvas render width and height will be casted to integers so make sure that\n      // the canvas display style uses the same integer values to avoid blurring effect.\n      // Set to 0 instead of canvas.size because the size defaults to 300x150 if the element is collapsed\n\n      var newWidth = Math.max(0, Math.floor(helpers$1.getMaximumWidth(canvas)));\n      var newHeight = Math.max(0, Math.floor(aspectRatio ? newWidth / aspectRatio : helpers$1.getMaximumHeight(canvas)));\n\n      if (me.width === newWidth && me.height === newHeight) {\n        return;\n      }\n\n      canvas.width = me.width = newWidth;\n      canvas.height = me.height = newHeight;\n      canvas.style.width = newWidth + 'px';\n      canvas.style.height = newHeight + 'px';\n      helpers$1.retinaScale(me, options.devicePixelRatio);\n\n      if (!silent) {\n        // Notify any plugins about the resize\n        var newSize = {\n          width: newWidth,\n          height: newHeight\n        };\n        core_plugins.notify(me, 'resize', [newSize]); // Notify of resize\n\n        if (options.onResize) {\n          options.onResize(me, newSize);\n        }\n\n        me.stop();\n        me.update({\n          duration: options.responsiveAnimationDuration\n        });\n      }\n    },\n    ensureScalesHaveIDs: function ensureScalesHaveIDs() {\n      var options = this.options;\n      var scalesOptions = options.scales || {};\n      var scaleOptions = options.scale;\n      helpers$1.each(scalesOptions.xAxes, function (xAxisOptions, index) {\n        xAxisOptions.id = xAxisOptions.id || 'x-axis-' + index;\n      });\n      helpers$1.each(scalesOptions.yAxes, function (yAxisOptions, index) {\n        yAxisOptions.id = yAxisOptions.id || 'y-axis-' + index;\n      });\n\n      if (scaleOptions) {\n        scaleOptions.id = scaleOptions.id || 'scale';\n      }\n    },\n\n    /**\n     * Builds a map of scale ID to scale object for future lookup.\n     */\n    buildOrUpdateScales: function buildOrUpdateScales() {\n      var me = this;\n      var options = me.options;\n      var scales = me.scales || {};\n      var items = [];\n      var updated = Object.keys(scales).reduce(function (obj, id) {\n        obj[id] = false;\n        return obj;\n      }, {});\n\n      if (options.scales) {\n        items = items.concat((options.scales.xAxes || []).map(function (xAxisOptions) {\n          return {\n            options: xAxisOptions,\n            dtype: 'category',\n            dposition: 'bottom'\n          };\n        }), (options.scales.yAxes || []).map(function (yAxisOptions) {\n          return {\n            options: yAxisOptions,\n            dtype: 'linear',\n            dposition: 'left'\n          };\n        }));\n      }\n\n      if (options.scale) {\n        items.push({\n          options: options.scale,\n          dtype: 'radialLinear',\n          isDefault: true,\n          dposition: 'chartArea'\n        });\n      }\n\n      helpers$1.each(items, function (item) {\n        var scaleOptions = item.options;\n        var id = scaleOptions.id;\n        var scaleType = valueOrDefault$8(scaleOptions.type, item.dtype);\n\n        if (positionIsHorizontal(scaleOptions.position) !== positionIsHorizontal(item.dposition)) {\n          scaleOptions.position = item.dposition;\n        }\n\n        updated[id] = true;\n        var scale = null;\n\n        if (id in scales && scales[id].type === scaleType) {\n          scale = scales[id];\n          scale.options = scaleOptions;\n          scale.ctx = me.ctx;\n          scale.chart = me;\n        } else {\n          var scaleClass = core_scaleService.getScaleConstructor(scaleType);\n\n          if (!scaleClass) {\n            return;\n          }\n\n          scale = new scaleClass({\n            id: id,\n            type: scaleType,\n            options: scaleOptions,\n            ctx: me.ctx,\n            chart: me\n          });\n          scales[scale.id] = scale;\n        }\n\n        scale.mergeTicksOptions(); // TODO(SB): I think we should be able to remove this custom case (options.scale)\n        // and consider it as a regular scale part of the \"scales\"\" map only! This would\n        // make the logic easier and remove some useless? custom code.\n\n        if (item.isDefault) {\n          me.scale = scale;\n        }\n      }); // clear up discarded scales\n\n      helpers$1.each(updated, function (hasUpdated, id) {\n        if (!hasUpdated) {\n          delete scales[id];\n        }\n      });\n      me.scales = scales;\n      core_scaleService.addScalesToLayout(this);\n    },\n    buildOrUpdateControllers: function buildOrUpdateControllers() {\n      var me = this;\n      var newControllers = [];\n      helpers$1.each(me.data.datasets, function (dataset, datasetIndex) {\n        var meta = me.getDatasetMeta(datasetIndex);\n        var type = dataset.type || me.config.type;\n\n        if (meta.type && meta.type !== type) {\n          me.destroyDatasetMeta(datasetIndex);\n          meta = me.getDatasetMeta(datasetIndex);\n        }\n\n        meta.type = type;\n\n        if (meta.controller) {\n          meta.controller.updateIndex(datasetIndex);\n          meta.controller.linkScales();\n        } else {\n          var ControllerClass = controllers[meta.type];\n\n          if (ControllerClass === undefined) {\n            throw new Error('\"' + meta.type + '\" is not a chart type.');\n          }\n\n          meta.controller = new ControllerClass(me, datasetIndex);\n          newControllers.push(meta.controller);\n        }\n      }, me);\n      return newControllers;\n    },\n\n    /**\n     * Reset the elements of all datasets\n     * @private\n     */\n    resetElements: function resetElements() {\n      var me = this;\n      helpers$1.each(me.data.datasets, function (dataset, datasetIndex) {\n        me.getDatasetMeta(datasetIndex).controller.reset();\n      }, me);\n    },\n\n    /**\n    * Resets the chart back to it's state before the initial animation\n    */\n    reset: function reset() {\n      this.resetElements();\n      this.tooltip.initialize();\n    },\n    update: function update(config) {\n      var me = this;\n\n      if (!config || typeof config !== 'object') {\n        // backwards compatibility\n        config = {\n          duration: config,\n          lazy: arguments[1]\n        };\n      }\n\n      updateConfig(me); // plugins options references might have change, let's invalidate the cache\n      // https://github.com/chartjs/Chart.js/issues/5111#issuecomment-355934167\n\n      core_plugins._invalidate(me);\n\n      if (core_plugins.notify(me, 'beforeUpdate') === false) {\n        return;\n      } // In case the entire data object changed\n\n\n      me.tooltip._data = me.data; // Make sure dataset controllers are updated and new controllers are reset\n\n      var newControllers = me.buildOrUpdateControllers(); // Make sure all dataset controllers have correct meta data counts\n\n      helpers$1.each(me.data.datasets, function (dataset, datasetIndex) {\n        me.getDatasetMeta(datasetIndex).controller.buildOrUpdateElements();\n      }, me);\n      me.updateLayout(); // Can only reset the new controllers after the scales have been updated\n\n      if (me.options.animation && me.options.animation.duration) {\n        helpers$1.each(newControllers, function (controller) {\n          controller.reset();\n        });\n      }\n\n      me.updateDatasets(); // Need to reset tooltip in case it is displayed with elements that are removed\n      // after update.\n\n      me.tooltip.initialize(); // Last active contains items that were previously in the tooltip.\n      // When we reset the tooltip, we need to clear it\n\n      me.lastActive = []; // Do this before render so that any plugins that need final scale updates can use it\n\n      core_plugins.notify(me, 'afterUpdate');\n\n      if (me._bufferedRender) {\n        me._bufferedRequest = {\n          duration: config.duration,\n          easing: config.easing,\n          lazy: config.lazy\n        };\n      } else {\n        me.render(config);\n      }\n    },\n\n    /**\n     * Updates the chart layout unless a plugin returns `false` to the `beforeLayout`\n     * hook, in which case, plugins will not be called on `afterLayout`.\n     * @private\n     */\n    updateLayout: function updateLayout() {\n      var me = this;\n\n      if (core_plugins.notify(me, 'beforeLayout') === false) {\n        return;\n      }\n\n      core_layouts.update(this, this.width, this.height);\n      /**\n       * Provided for backward compatibility, use `afterLayout` instead.\n       * @method IPlugin#afterScaleUpdate\n       * @deprecated since version 2.5.0\n       * @todo remove at version 3\n       * @private\n       */\n\n      core_plugins.notify(me, 'afterScaleUpdate');\n      core_plugins.notify(me, 'afterLayout');\n    },\n\n    /**\n     * Updates all datasets unless a plugin returns `false` to the `beforeDatasetsUpdate`\n     * hook, in which case, plugins will not be called on `afterDatasetsUpdate`.\n     * @private\n     */\n    updateDatasets: function updateDatasets() {\n      var me = this;\n\n      if (core_plugins.notify(me, 'beforeDatasetsUpdate') === false) {\n        return;\n      }\n\n      for (var i = 0, ilen = me.data.datasets.length; i < ilen; ++i) {\n        me.updateDataset(i);\n      }\n\n      core_plugins.notify(me, 'afterDatasetsUpdate');\n    },\n\n    /**\n     * Updates dataset at index unless a plugin returns `false` to the `beforeDatasetUpdate`\n     * hook, in which case, plugins will not be called on `afterDatasetUpdate`.\n     * @private\n     */\n    updateDataset: function updateDataset(index) {\n      var me = this;\n      var meta = me.getDatasetMeta(index);\n      var args = {\n        meta: meta,\n        index: index\n      };\n\n      if (core_plugins.notify(me, 'beforeDatasetUpdate', [args]) === false) {\n        return;\n      }\n\n      meta.controller.update();\n      core_plugins.notify(me, 'afterDatasetUpdate', [args]);\n    },\n    render: function render(config) {\n      var me = this;\n\n      if (!config || typeof config !== 'object') {\n        // backwards compatibility\n        config = {\n          duration: config,\n          lazy: arguments[1]\n        };\n      }\n\n      var animationOptions = me.options.animation;\n      var duration = valueOrDefault$8(config.duration, animationOptions && animationOptions.duration);\n      var lazy = config.lazy;\n\n      if (core_plugins.notify(me, 'beforeRender') === false) {\n        return;\n      }\n\n      var onComplete = function onComplete(animation) {\n        core_plugins.notify(me, 'afterRender');\n        helpers$1.callback(animationOptions && animationOptions.onComplete, [animation], me);\n      };\n\n      if (animationOptions && duration) {\n        var animation = new core_animation({\n          numSteps: duration / 16.66,\n          // 60 fps\n          easing: config.easing || animationOptions.easing,\n          render: function render(chart, animationObject) {\n            var easingFunction = helpers$1.easing.effects[animationObject.easing];\n            var currentStep = animationObject.currentStep;\n            var stepDecimal = currentStep / animationObject.numSteps;\n            chart.draw(easingFunction(stepDecimal), stepDecimal, currentStep);\n          },\n          onAnimationProgress: animationOptions.onProgress,\n          onAnimationComplete: onComplete\n        });\n        core_animations.addAnimation(me, animation, duration, lazy);\n      } else {\n        me.draw(); // See https://github.com/chartjs/Chart.js/issues/3781\n\n        onComplete(new core_animation({\n          numSteps: 0,\n          chart: me\n        }));\n      }\n\n      return me;\n    },\n    draw: function draw(easingValue) {\n      var me = this;\n      me.clear();\n\n      if (helpers$1.isNullOrUndef(easingValue)) {\n        easingValue = 1;\n      }\n\n      me.transition(easingValue);\n\n      if (me.width <= 0 || me.height <= 0) {\n        return;\n      }\n\n      if (core_plugins.notify(me, 'beforeDraw', [easingValue]) === false) {\n        return;\n      } // Draw all the scales\n\n\n      helpers$1.each(me.boxes, function (box) {\n        box.draw(me.chartArea);\n      }, me);\n      me.drawDatasets(easingValue);\n\n      me._drawTooltip(easingValue);\n\n      core_plugins.notify(me, 'afterDraw', [easingValue]);\n    },\n\n    /**\n     * @private\n     */\n    transition: function transition(easingValue) {\n      var me = this;\n\n      for (var i = 0, ilen = (me.data.datasets || []).length; i < ilen; ++i) {\n        if (me.isDatasetVisible(i)) {\n          me.getDatasetMeta(i).controller.transition(easingValue);\n        }\n      }\n\n      me.tooltip.transition(easingValue);\n    },\n\n    /**\n     * Draws all datasets unless a plugin returns `false` to the `beforeDatasetsDraw`\n     * hook, in which case, plugins will not be called on `afterDatasetsDraw`.\n     * @private\n     */\n    drawDatasets: function drawDatasets(easingValue) {\n      var me = this;\n\n      if (core_plugins.notify(me, 'beforeDatasetsDraw', [easingValue]) === false) {\n        return;\n      } // Draw datasets reversed to support proper line stacking\n\n\n      for (var i = (me.data.datasets || []).length - 1; i >= 0; --i) {\n        if (me.isDatasetVisible(i)) {\n          me.drawDataset(i, easingValue);\n        }\n      }\n\n      core_plugins.notify(me, 'afterDatasetsDraw', [easingValue]);\n    },\n\n    /**\n     * Draws dataset at index unless a plugin returns `false` to the `beforeDatasetDraw`\n     * hook, in which case, plugins will not be called on `afterDatasetDraw`.\n     * @private\n     */\n    drawDataset: function drawDataset(index, easingValue) {\n      var me = this;\n      var meta = me.getDatasetMeta(index);\n      var args = {\n        meta: meta,\n        index: index,\n        easingValue: easingValue\n      };\n\n      if (core_plugins.notify(me, 'beforeDatasetDraw', [args]) === false) {\n        return;\n      }\n\n      meta.controller.draw(easingValue);\n      core_plugins.notify(me, 'afterDatasetDraw', [args]);\n    },\n\n    /**\n     * Draws tooltip unless a plugin returns `false` to the `beforeTooltipDraw`\n     * hook, in which case, plugins will not be called on `afterTooltipDraw`.\n     * @private\n     */\n    _drawTooltip: function _drawTooltip(easingValue) {\n      var me = this;\n      var tooltip = me.tooltip;\n      var args = {\n        tooltip: tooltip,\n        easingValue: easingValue\n      };\n\n      if (core_plugins.notify(me, 'beforeTooltipDraw', [args]) === false) {\n        return;\n      }\n\n      tooltip.draw();\n      core_plugins.notify(me, 'afterTooltipDraw', [args]);\n    },\n\n    /**\n     * Get the single element that was clicked on\n     * @return An object containing the dataset index and element index of the matching element. Also contains the rectangle that was draw\n     */\n    getElementAtEvent: function getElementAtEvent(e) {\n      return core_interaction.modes.single(this, e);\n    },\n    getElementsAtEvent: function getElementsAtEvent(e) {\n      return core_interaction.modes.label(this, e, {\n        intersect: true\n      });\n    },\n    getElementsAtXAxis: function getElementsAtXAxis(e) {\n      return core_interaction.modes['x-axis'](this, e, {\n        intersect: true\n      });\n    },\n    getElementsAtEventForMode: function getElementsAtEventForMode(e, mode, options) {\n      var method = core_interaction.modes[mode];\n\n      if (typeof method === 'function') {\n        return method(this, e, options);\n      }\n\n      return [];\n    },\n    getDatasetAtEvent: function getDatasetAtEvent(e) {\n      return core_interaction.modes.dataset(this, e, {\n        intersect: true\n      });\n    },\n    getDatasetMeta: function getDatasetMeta(datasetIndex) {\n      var me = this;\n      var dataset = me.data.datasets[datasetIndex];\n\n      if (!dataset._meta) {\n        dataset._meta = {};\n      }\n\n      var meta = dataset._meta[me.id];\n\n      if (!meta) {\n        meta = dataset._meta[me.id] = {\n          type: null,\n          data: [],\n          dataset: null,\n          controller: null,\n          hidden: null,\n          // See isDatasetVisible() comment\n          xAxisID: null,\n          yAxisID: null\n        };\n      }\n\n      return meta;\n    },\n    getVisibleDatasetCount: function getVisibleDatasetCount() {\n      var count = 0;\n\n      for (var i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n        if (this.isDatasetVisible(i)) {\n          count++;\n        }\n      }\n\n      return count;\n    },\n    isDatasetVisible: function isDatasetVisible(datasetIndex) {\n      var meta = this.getDatasetMeta(datasetIndex); // meta.hidden is a per chart dataset hidden flag override with 3 states: if true or false,\n      // the dataset.hidden value is ignored, else if null, the dataset hidden state is returned.\n\n      return typeof meta.hidden === 'boolean' ? !meta.hidden : !this.data.datasets[datasetIndex].hidden;\n    },\n    generateLegend: function generateLegend() {\n      return this.options.legendCallback(this);\n    },\n\n    /**\n     * @private\n     */\n    destroyDatasetMeta: function destroyDatasetMeta(datasetIndex) {\n      var id = this.id;\n      var dataset = this.data.datasets[datasetIndex];\n      var meta = dataset._meta && dataset._meta[id];\n\n      if (meta) {\n        meta.controller.destroy();\n        delete dataset._meta[id];\n      }\n    },\n    destroy: function destroy() {\n      var me = this;\n      var canvas = me.canvas;\n      var i, ilen;\n      me.stop(); // dataset controllers need to cleanup associated data\n\n      for (i = 0, ilen = me.data.datasets.length; i < ilen; ++i) {\n        me.destroyDatasetMeta(i);\n      }\n\n      if (canvas) {\n        me.unbindEvents();\n        helpers$1.canvas.clear(me);\n        platform.releaseContext(me.ctx);\n        me.canvas = null;\n        me.ctx = null;\n      }\n\n      core_plugins.notify(me, 'destroy');\n      delete Chart.instances[me.id];\n    },\n    toBase64Image: function toBase64Image() {\n      return this.canvas.toDataURL.apply(this.canvas, arguments);\n    },\n    initToolTip: function initToolTip() {\n      var me = this;\n      me.tooltip = new core_tooltip({\n        _chart: me,\n        _chartInstance: me,\n        // deprecated, backward compatibility\n        _data: me.data,\n        _options: me.options.tooltips\n      }, me);\n    },\n\n    /**\n     * @private\n     */\n    bindEvents: function bindEvents() {\n      var me = this;\n      var listeners = me._listeners = {};\n\n      var listener = function listener() {\n        me.eventHandler.apply(me, arguments);\n      };\n\n      helpers$1.each(me.options.events, function (type) {\n        platform.addEventListener(me, type, listener);\n        listeners[type] = listener;\n      }); // Elements used to detect size change should not be injected for non responsive charts.\n      // See https://github.com/chartjs/Chart.js/issues/2210\n\n      if (me.options.responsive) {\n        listener = function listener() {\n          me.resize();\n        };\n\n        platform.addEventListener(me, 'resize', listener);\n        listeners.resize = listener;\n      }\n    },\n\n    /**\n     * @private\n     */\n    unbindEvents: function unbindEvents() {\n      var me = this;\n      var listeners = me._listeners;\n\n      if (!listeners) {\n        return;\n      }\n\n      delete me._listeners;\n      helpers$1.each(listeners, function (listener, type) {\n        platform.removeEventListener(me, type, listener);\n      });\n    },\n    updateHoverStyle: function updateHoverStyle(elements, mode, enabled) {\n      var method = enabled ? 'setHoverStyle' : 'removeHoverStyle';\n      var element, i, ilen;\n\n      for (i = 0, ilen = elements.length; i < ilen; ++i) {\n        element = elements[i];\n\n        if (element) {\n          this.getDatasetMeta(element._datasetIndex).controller[method](element);\n        }\n      }\n    },\n\n    /**\n     * @private\n     */\n    eventHandler: function eventHandler(e) {\n      var me = this;\n      var tooltip = me.tooltip;\n\n      if (core_plugins.notify(me, 'beforeEvent', [e]) === false) {\n        return;\n      } // Buffer any update calls so that renders do not occur\n\n\n      me._bufferedRender = true;\n      me._bufferedRequest = null;\n      var changed = me.handleEvent(e); // for smooth tooltip animations issue #4989\n      // the tooltip should be the source of change\n      // Animation check workaround:\n      // tooltip._start will be null when tooltip isn't animating\n\n      if (tooltip) {\n        changed = tooltip._start ? tooltip.handleEvent(e) : changed | tooltip.handleEvent(e);\n      }\n\n      core_plugins.notify(me, 'afterEvent', [e]);\n      var bufferedRequest = me._bufferedRequest;\n\n      if (bufferedRequest) {\n        // If we have an update that was triggered, we need to do a normal render\n        me.render(bufferedRequest);\n      } else if (changed && !me.animating) {\n        // If entering, leaving, or changing elements, animate the change via pivot\n        me.stop(); // We only need to render at this point. Updating will cause scales to be\n        // recomputed generating flicker & using more memory than necessary.\n\n        me.render({\n          duration: me.options.hover.animationDuration,\n          lazy: true\n        });\n      }\n\n      me._bufferedRender = false;\n      me._bufferedRequest = null;\n      return me;\n    },\n\n    /**\n     * Handle an event\n     * @private\n     * @param {IEvent} event the event to handle\n     * @return {boolean} true if the chart needs to re-render\n     */\n    handleEvent: function handleEvent(e) {\n      var me = this;\n      var options = me.options || {};\n      var hoverOptions = options.hover;\n      var changed = false;\n      me.lastActive = me.lastActive || []; // Find Active Elements for hover and tooltips\n\n      if (e.type === 'mouseout') {\n        me.active = [];\n      } else {\n        me.active = me.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions);\n      } // Invoke onHover hook\n      // Need to call with native event here to not break backwards compatibility\n\n\n      helpers$1.callback(options.onHover || options.hover.onHover, [e.native, me.active], me);\n\n      if (e.type === 'mouseup' || e.type === 'click') {\n        if (options.onClick) {\n          // Use e.native here for backwards compatibility\n          options.onClick.call(me, e.native, me.active);\n        }\n      } // Remove styling for last active (even if it may still be active)\n\n\n      if (me.lastActive.length) {\n        me.updateHoverStyle(me.lastActive, hoverOptions.mode, false);\n      } // Built in hover styling\n\n\n      if (me.active.length && hoverOptions.mode) {\n        me.updateHoverStyle(me.active, hoverOptions.mode, true);\n      }\n\n      changed = !helpers$1.arrayEquals(me.active, me.lastActive); // Remember Last Actives\n\n      me.lastActive = me.active;\n      return changed;\n    }\n  });\n  /**\n   * NOTE(SB) We actually don't use this container anymore but we need to keep it\n   * for backward compatibility. Though, it can still be useful for plugins that\n   * would need to work on multiple charts?!\n   */\n\n  Chart.instances = {};\n  var core_controller = Chart; // DEPRECATIONS\n\n  /**\n   * Provided for backward compatibility, use Chart instead.\n   * @class Chart.Controller\n   * @deprecated since version 2.6\n   * @todo remove at version 3\n   * @private\n   */\n\n  Chart.Controller = Chart;\n  /**\n   * Provided for backward compatibility, not available anymore.\n   * @namespace Chart\n   * @deprecated since version 2.8\n   * @todo remove at version 3\n   * @private\n   */\n\n  Chart.types = {};\n  /**\n   * Provided for backward compatibility, not available anymore.\n   * @namespace Chart.helpers.configMerge\n   * @deprecated since version 2.8.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers$1.configMerge = mergeConfig;\n  /**\n   * Provided for backward compatibility, not available anymore.\n   * @namespace Chart.helpers.scaleMerge\n   * @deprecated since version 2.8.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers$1.scaleMerge = mergeScaleConfig;\n\n  var core_helpers = function core_helpers() {\n    // -- Basic js utility methods\n    helpers$1.where = function (collection, filterCallback) {\n      if (helpers$1.isArray(collection) && Array.prototype.filter) {\n        return collection.filter(filterCallback);\n      }\n\n      var filtered = [];\n      helpers$1.each(collection, function (item) {\n        if (filterCallback(item)) {\n          filtered.push(item);\n        }\n      });\n      return filtered;\n    };\n\n    helpers$1.findIndex = Array.prototype.findIndex ? function (array, callback, scope) {\n      return array.findIndex(callback, scope);\n    } : function (array, callback, scope) {\n      scope = scope === undefined ? array : scope;\n\n      for (var i = 0, ilen = array.length; i < ilen; ++i) {\n        if (callback.call(scope, array[i], i, array)) {\n          return i;\n        }\n      }\n\n      return -1;\n    };\n\n    helpers$1.findNextWhere = function (arrayToSearch, filterCallback, startIndex) {\n      // Default to start of the array\n      if (helpers$1.isNullOrUndef(startIndex)) {\n        startIndex = -1;\n      }\n\n      for (var i = startIndex + 1; i < arrayToSearch.length; i++) {\n        var currentItem = arrayToSearch[i];\n\n        if (filterCallback(currentItem)) {\n          return currentItem;\n        }\n      }\n    };\n\n    helpers$1.findPreviousWhere = function (arrayToSearch, filterCallback, startIndex) {\n      // Default to end of the array\n      if (helpers$1.isNullOrUndef(startIndex)) {\n        startIndex = arrayToSearch.length;\n      }\n\n      for (var i = startIndex - 1; i >= 0; i--) {\n        var currentItem = arrayToSearch[i];\n\n        if (filterCallback(currentItem)) {\n          return currentItem;\n        }\n      }\n    }; // -- Math methods\n\n\n    helpers$1.isNumber = function (n) {\n      return !isNaN(parseFloat(n)) && isFinite(n);\n    };\n\n    helpers$1.almostEquals = function (x, y, epsilon) {\n      return Math.abs(x - y) < epsilon;\n    };\n\n    helpers$1.almostWhole = function (x, epsilon) {\n      var rounded = Math.round(x);\n      return rounded - epsilon < x && rounded + epsilon > x;\n    };\n\n    helpers$1.max = function (array) {\n      return array.reduce(function (max, value) {\n        if (!isNaN(value)) {\n          return Math.max(max, value);\n        }\n\n        return max;\n      }, Number.NEGATIVE_INFINITY);\n    };\n\n    helpers$1.min = function (array) {\n      return array.reduce(function (min, value) {\n        if (!isNaN(value)) {\n          return Math.min(min, value);\n        }\n\n        return min;\n      }, Number.POSITIVE_INFINITY);\n    };\n\n    helpers$1.sign = Math.sign ? function (x) {\n      return Math.sign(x);\n    } : function (x) {\n      x = +x; // convert to a number\n\n      if (x === 0 || isNaN(x)) {\n        return x;\n      }\n\n      return x > 0 ? 1 : -1;\n    };\n    helpers$1.log10 = Math.log10 ? function (x) {\n      return Math.log10(x);\n    } : function (x) {\n      var exponent = Math.log(x) * Math.LOG10E; // Math.LOG10E = 1 / Math.LN10.\n      // Check for whole powers of 10,\n      // which due to floating point rounding error should be corrected.\n\n      var powerOf10 = Math.round(exponent);\n      var isPowerOf10 = x === Math.pow(10, powerOf10);\n      return isPowerOf10 ? powerOf10 : exponent;\n    };\n\n    helpers$1.toRadians = function (degrees) {\n      return degrees * (Math.PI / 180);\n    };\n\n    helpers$1.toDegrees = function (radians) {\n      return radians * (180 / Math.PI);\n    };\n    /**\n     * Returns the number of decimal places\n     * i.e. the number of digits after the decimal point, of the value of this Number.\n     * @param {number} x - A number.\n     * @returns {number} The number of decimal places.\n     * @private\n     */\n\n\n    helpers$1._decimalPlaces = function (x) {\n      if (!helpers$1.isFinite(x)) {\n        return;\n      }\n\n      var e = 1;\n      var p = 0;\n\n      while (Math.round(x * e) / e !== x) {\n        e *= 10;\n        p++;\n      }\n\n      return p;\n    }; // Gets the angle from vertical upright to the point about a centre.\n\n\n    helpers$1.getAngleFromPoint = function (centrePoint, anglePoint) {\n      var distanceFromXCenter = anglePoint.x - centrePoint.x;\n      var distanceFromYCenter = anglePoint.y - centrePoint.y;\n      var radialDistanceFromCenter = Math.sqrt(distanceFromXCenter * distanceFromXCenter + distanceFromYCenter * distanceFromYCenter);\n      var angle = Math.atan2(distanceFromYCenter, distanceFromXCenter);\n\n      if (angle < -0.5 * Math.PI) {\n        angle += 2.0 * Math.PI; // make sure the returned angle is in the range of (-PI/2, 3PI/2]\n      }\n\n      return {\n        angle: angle,\n        distance: radialDistanceFromCenter\n      };\n    };\n\n    helpers$1.distanceBetweenPoints = function (pt1, pt2) {\n      return Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\n    };\n    /**\n     * Provided for backward compatibility, not available anymore\n     * @function Chart.helpers.aliasPixel\n     * @deprecated since version 2.8.0\n     * @todo remove at version 3\n     */\n\n\n    helpers$1.aliasPixel = function (pixelWidth) {\n      return pixelWidth % 2 === 0 ? 0 : 0.5;\n    };\n    /**\n     * Returns the aligned pixel value to avoid anti-aliasing blur\n     * @param {Chart} chart - The chart instance.\n     * @param {number} pixel - A pixel value.\n     * @param {number} width - The width of the element.\n     * @returns {number} The aligned pixel value.\n     * @private\n     */\n\n\n    helpers$1._alignPixel = function (chart, pixel, width) {\n      var devicePixelRatio = chart.currentDevicePixelRatio;\n      var halfWidth = width / 2;\n      return Math.round((pixel - halfWidth) * devicePixelRatio) / devicePixelRatio + halfWidth;\n    };\n\n    helpers$1.splineCurve = function (firstPoint, middlePoint, afterPoint, t) {\n      // Props to Rob Spencer at scaled innovation for his post on splining between points\n      // http://scaledinnovation.com/analytics/splines/aboutSplines.html\n      // This function must also respect \"skipped\" points\n      var previous = firstPoint.skip ? middlePoint : firstPoint;\n      var current = middlePoint;\n      var next = afterPoint.skip ? middlePoint : afterPoint;\n      var d01 = Math.sqrt(Math.pow(current.x - previous.x, 2) + Math.pow(current.y - previous.y, 2));\n      var d12 = Math.sqrt(Math.pow(next.x - current.x, 2) + Math.pow(next.y - current.y, 2));\n      var s01 = d01 / (d01 + d12);\n      var s12 = d12 / (d01 + d12); // If all points are the same, s01 & s02 will be inf\n\n      s01 = isNaN(s01) ? 0 : s01;\n      s12 = isNaN(s12) ? 0 : s12;\n      var fa = t * s01; // scaling factor for triangle Ta\n\n      var fb = t * s12;\n      return {\n        previous: {\n          x: current.x - fa * (next.x - previous.x),\n          y: current.y - fa * (next.y - previous.y)\n        },\n        next: {\n          x: current.x + fb * (next.x - previous.x),\n          y: current.y + fb * (next.y - previous.y)\n        }\n      };\n    };\n\n    helpers$1.EPSILON = Number.EPSILON || 1e-14;\n\n    helpers$1.splineCurveMonotone = function (points) {\n      // This function calculates Bézier control points in a similar way than |splineCurve|,\n      // but preserves monotonicity of the provided data and ensures no local extremums are added\n      // between the dataset discrete points due to the interpolation.\n      // See : https://en.wikipedia.org/wiki/Monotone_cubic_interpolation\n      var pointsWithTangents = (points || []).map(function (point) {\n        return {\n          model: point._model,\n          deltaK: 0,\n          mK: 0\n        };\n      }); // Calculate slopes (deltaK) and initialize tangents (mK)\n\n      var pointsLen = pointsWithTangents.length;\n      var i, pointBefore, pointCurrent, pointAfter;\n\n      for (i = 0; i < pointsLen; ++i) {\n        pointCurrent = pointsWithTangents[i];\n\n        if (pointCurrent.model.skip) {\n          continue;\n        }\n\n        pointBefore = i > 0 ? pointsWithTangents[i - 1] : null;\n        pointAfter = i < pointsLen - 1 ? pointsWithTangents[i + 1] : null;\n\n        if (pointAfter && !pointAfter.model.skip) {\n          var slopeDeltaX = pointAfter.model.x - pointCurrent.model.x; // In the case of two points that appear at the same x pixel, slopeDeltaX is 0\n\n          pointCurrent.deltaK = slopeDeltaX !== 0 ? (pointAfter.model.y - pointCurrent.model.y) / slopeDeltaX : 0;\n        }\n\n        if (!pointBefore || pointBefore.model.skip) {\n          pointCurrent.mK = pointCurrent.deltaK;\n        } else if (!pointAfter || pointAfter.model.skip) {\n          pointCurrent.mK = pointBefore.deltaK;\n        } else if (this.sign(pointBefore.deltaK) !== this.sign(pointCurrent.deltaK)) {\n          pointCurrent.mK = 0;\n        } else {\n          pointCurrent.mK = (pointBefore.deltaK + pointCurrent.deltaK) / 2;\n        }\n      } // Adjust tangents to ensure monotonic properties\n\n\n      var alphaK, betaK, tauK, squaredMagnitude;\n\n      for (i = 0; i < pointsLen - 1; ++i) {\n        pointCurrent = pointsWithTangents[i];\n        pointAfter = pointsWithTangents[i + 1];\n\n        if (pointCurrent.model.skip || pointAfter.model.skip) {\n          continue;\n        }\n\n        if (helpers$1.almostEquals(pointCurrent.deltaK, 0, this.EPSILON)) {\n          pointCurrent.mK = pointAfter.mK = 0;\n          continue;\n        }\n\n        alphaK = pointCurrent.mK / pointCurrent.deltaK;\n        betaK = pointAfter.mK / pointCurrent.deltaK;\n        squaredMagnitude = Math.pow(alphaK, 2) + Math.pow(betaK, 2);\n\n        if (squaredMagnitude <= 9) {\n          continue;\n        }\n\n        tauK = 3 / Math.sqrt(squaredMagnitude);\n        pointCurrent.mK = alphaK * tauK * pointCurrent.deltaK;\n        pointAfter.mK = betaK * tauK * pointCurrent.deltaK;\n      } // Compute control points\n\n\n      var deltaX;\n\n      for (i = 0; i < pointsLen; ++i) {\n        pointCurrent = pointsWithTangents[i];\n\n        if (pointCurrent.model.skip) {\n          continue;\n        }\n\n        pointBefore = i > 0 ? pointsWithTangents[i - 1] : null;\n        pointAfter = i < pointsLen - 1 ? pointsWithTangents[i + 1] : null;\n\n        if (pointBefore && !pointBefore.model.skip) {\n          deltaX = (pointCurrent.model.x - pointBefore.model.x) / 3;\n          pointCurrent.model.controlPointPreviousX = pointCurrent.model.x - deltaX;\n          pointCurrent.model.controlPointPreviousY = pointCurrent.model.y - deltaX * pointCurrent.mK;\n        }\n\n        if (pointAfter && !pointAfter.model.skip) {\n          deltaX = (pointAfter.model.x - pointCurrent.model.x) / 3;\n          pointCurrent.model.controlPointNextX = pointCurrent.model.x + deltaX;\n          pointCurrent.model.controlPointNextY = pointCurrent.model.y + deltaX * pointCurrent.mK;\n        }\n      }\n    };\n\n    helpers$1.nextItem = function (collection, index, loop) {\n      if (loop) {\n        return index >= collection.length - 1 ? collection[0] : collection[index + 1];\n      }\n\n      return index >= collection.length - 1 ? collection[collection.length - 1] : collection[index + 1];\n    };\n\n    helpers$1.previousItem = function (collection, index, loop) {\n      if (loop) {\n        return index <= 0 ? collection[collection.length - 1] : collection[index - 1];\n      }\n\n      return index <= 0 ? collection[0] : collection[index - 1];\n    }; // Implementation of the nice number algorithm used in determining where axis labels will go\n\n\n    helpers$1.niceNum = function (range, round) {\n      var exponent = Math.floor(helpers$1.log10(range));\n      var fraction = range / Math.pow(10, exponent);\n      var niceFraction;\n\n      if (round) {\n        if (fraction < 1.5) {\n          niceFraction = 1;\n        } else if (fraction < 3) {\n          niceFraction = 2;\n        } else if (fraction < 7) {\n          niceFraction = 5;\n        } else {\n          niceFraction = 10;\n        }\n      } else if (fraction <= 1.0) {\n        niceFraction = 1;\n      } else if (fraction <= 2) {\n        niceFraction = 2;\n      } else if (fraction <= 5) {\n        niceFraction = 5;\n      } else {\n        niceFraction = 10;\n      }\n\n      return niceFraction * Math.pow(10, exponent);\n    }; // Request animation polyfill - https://www.paulirish.com/2011/requestanimationframe-for-smart-animating/\n\n\n    helpers$1.requestAnimFrame = function () {\n      if (typeof window === 'undefined') {\n        return function (callback) {\n          callback();\n        };\n      }\n\n      return window.requestAnimationFrame || window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame || window.oRequestAnimationFrame || window.msRequestAnimationFrame || function (callback) {\n        return window.setTimeout(callback, 1000 / 60);\n      };\n    }(); // -- DOM methods\n\n\n    helpers$1.getRelativePosition = function (evt, chart) {\n      var mouseX, mouseY;\n      var e = evt.originalEvent || evt;\n      var canvas = evt.target || evt.srcElement;\n      var boundingRect = canvas.getBoundingClientRect();\n      var touches = e.touches;\n\n      if (touches && touches.length > 0) {\n        mouseX = touches[0].clientX;\n        mouseY = touches[0].clientY;\n      } else {\n        mouseX = e.clientX;\n        mouseY = e.clientY;\n      } // Scale mouse coordinates into canvas coordinates\n      // by following the pattern laid out by 'jerryj' in the comments of\n      // https://www.html5canvastutorials.com/advanced/html5-canvas-mouse-coordinates/\n\n\n      var paddingLeft = parseFloat(helpers$1.getStyle(canvas, 'padding-left'));\n      var paddingTop = parseFloat(helpers$1.getStyle(canvas, 'padding-top'));\n      var paddingRight = parseFloat(helpers$1.getStyle(canvas, 'padding-right'));\n      var paddingBottom = parseFloat(helpers$1.getStyle(canvas, 'padding-bottom'));\n      var width = boundingRect.right - boundingRect.left - paddingLeft - paddingRight;\n      var height = boundingRect.bottom - boundingRect.top - paddingTop - paddingBottom; // We divide by the current device pixel ratio, because the canvas is scaled up by that amount in each direction. However\n      // the backend model is in unscaled coordinates. Since we are going to deal with our model coordinates, we go back here\n\n      mouseX = Math.round((mouseX - boundingRect.left - paddingLeft) / width * canvas.width / chart.currentDevicePixelRatio);\n      mouseY = Math.round((mouseY - boundingRect.top - paddingTop) / height * canvas.height / chart.currentDevicePixelRatio);\n      return {\n        x: mouseX,\n        y: mouseY\n      };\n    }; // Private helper function to convert max-width/max-height values that may be percentages into a number\n\n\n    function parseMaxStyle(styleValue, node, parentProperty) {\n      var valueInPixels;\n\n      if (typeof styleValue === 'string') {\n        valueInPixels = parseInt(styleValue, 10);\n\n        if (styleValue.indexOf('%') !== -1) {\n          // percentage * size in dimension\n          valueInPixels = valueInPixels / 100 * node.parentNode[parentProperty];\n        }\n      } else {\n        valueInPixels = styleValue;\n      }\n\n      return valueInPixels;\n    }\n    /**\n     * Returns if the given value contains an effective constraint.\n     * @private\n     */\n\n\n    function isConstrainedValue(value) {\n      return value !== undefined && value !== null && value !== 'none';\n    }\n    /**\n     * Returns the max width or height of the given DOM node in a cross-browser compatible fashion\n     * @param {HTMLElement} domNode - the node to check the constraint on\n     * @param {string} maxStyle - the style that defines the maximum for the direction we are using ('max-width' / 'max-height')\n     * @param {string} percentageProperty - property of parent to use when calculating width as a percentage\n     * @see {@link https://www.nathanaeljones.com/blog/2013/reading-max-width-cross-browser}\n     */\n\n\n    function getConstraintDimension(domNode, maxStyle, percentageProperty) {\n      var view = document.defaultView;\n\n      var parentNode = helpers$1._getParentNode(domNode);\n\n      var constrainedNode = view.getComputedStyle(domNode)[maxStyle];\n      var constrainedContainer = view.getComputedStyle(parentNode)[maxStyle];\n      var hasCNode = isConstrainedValue(constrainedNode);\n      var hasCContainer = isConstrainedValue(constrainedContainer);\n      var infinity = Number.POSITIVE_INFINITY;\n\n      if (hasCNode || hasCContainer) {\n        return Math.min(hasCNode ? parseMaxStyle(constrainedNode, domNode, percentageProperty) : infinity, hasCContainer ? parseMaxStyle(constrainedContainer, parentNode, percentageProperty) : infinity);\n      }\n\n      return 'none';\n    } // returns Number or undefined if no constraint\n\n\n    helpers$1.getConstraintWidth = function (domNode) {\n      return getConstraintDimension(domNode, 'max-width', 'clientWidth');\n    }; // returns Number or undefined if no constraint\n\n\n    helpers$1.getConstraintHeight = function (domNode) {\n      return getConstraintDimension(domNode, 'max-height', 'clientHeight');\n    };\n    /**\n     * @private\n    \t */\n\n\n    helpers$1._calculatePadding = function (container, padding, parentDimension) {\n      padding = helpers$1.getStyle(container, padding);\n      return padding.indexOf('%') > -1 ? parentDimension * parseInt(padding, 10) / 100 : parseInt(padding, 10);\n    };\n    /**\n     * @private\n     */\n\n\n    helpers$1._getParentNode = function (domNode) {\n      var parent = domNode.parentNode;\n\n      if (parent && parent.toString() === '[object ShadowRoot]') {\n        parent = parent.host;\n      }\n\n      return parent;\n    };\n\n    helpers$1.getMaximumWidth = function (domNode) {\n      var container = helpers$1._getParentNode(domNode);\n\n      if (!container) {\n        return domNode.clientWidth;\n      }\n\n      var clientWidth = container.clientWidth;\n\n      var paddingLeft = helpers$1._calculatePadding(container, 'padding-left', clientWidth);\n\n      var paddingRight = helpers$1._calculatePadding(container, 'padding-right', clientWidth);\n\n      var w = clientWidth - paddingLeft - paddingRight;\n      var cw = helpers$1.getConstraintWidth(domNode);\n      return isNaN(cw) ? w : Math.min(w, cw);\n    };\n\n    helpers$1.getMaximumHeight = function (domNode) {\n      var container = helpers$1._getParentNode(domNode);\n\n      if (!container) {\n        return domNode.clientHeight;\n      }\n\n      var clientHeight = container.clientHeight;\n\n      var paddingTop = helpers$1._calculatePadding(container, 'padding-top', clientHeight);\n\n      var paddingBottom = helpers$1._calculatePadding(container, 'padding-bottom', clientHeight);\n\n      var h = clientHeight - paddingTop - paddingBottom;\n      var ch = helpers$1.getConstraintHeight(domNode);\n      return isNaN(ch) ? h : Math.min(h, ch);\n    };\n\n    helpers$1.getStyle = function (el, property) {\n      return el.currentStyle ? el.currentStyle[property] : document.defaultView.getComputedStyle(el, null).getPropertyValue(property);\n    };\n\n    helpers$1.retinaScale = function (chart, forceRatio) {\n      var pixelRatio = chart.currentDevicePixelRatio = forceRatio || typeof window !== 'undefined' && window.devicePixelRatio || 1;\n\n      if (pixelRatio === 1) {\n        return;\n      }\n\n      var canvas = chart.canvas;\n      var height = chart.height;\n      var width = chart.width;\n      canvas.height = height * pixelRatio;\n      canvas.width = width * pixelRatio;\n      chart.ctx.scale(pixelRatio, pixelRatio); // If no style has been set on the canvas, the render size is used as display size,\n      // making the chart visually bigger, so let's enforce it to the \"correct\" values.\n      // See https://github.com/chartjs/Chart.js/issues/3575\n\n      if (!canvas.style.height && !canvas.style.width) {\n        canvas.style.height = height + 'px';\n        canvas.style.width = width + 'px';\n      }\n    }; // -- Canvas methods\n\n\n    helpers$1.fontString = function (pixelSize, fontStyle, fontFamily) {\n      return fontStyle + ' ' + pixelSize + 'px ' + fontFamily;\n    };\n\n    helpers$1.longestText = function (ctx, font, arrayOfThings, cache) {\n      cache = cache || {};\n      var data = cache.data = cache.data || {};\n      var gc = cache.garbageCollect = cache.garbageCollect || [];\n\n      if (cache.font !== font) {\n        data = cache.data = {};\n        gc = cache.garbageCollect = [];\n        cache.font = font;\n      }\n\n      ctx.font = font;\n      var longest = 0;\n      helpers$1.each(arrayOfThings, function (thing) {\n        // Undefined strings and arrays should not be measured\n        if (thing !== undefined && thing !== null && helpers$1.isArray(thing) !== true) {\n          longest = helpers$1.measureText(ctx, data, gc, longest, thing);\n        } else if (helpers$1.isArray(thing)) {\n          // if it is an array lets measure each element\n          // to do maybe simplify this function a bit so we can do this more recursively?\n          helpers$1.each(thing, function (nestedThing) {\n            // Undefined strings and arrays should not be measured\n            if (nestedThing !== undefined && nestedThing !== null && !helpers$1.isArray(nestedThing)) {\n              longest = helpers$1.measureText(ctx, data, gc, longest, nestedThing);\n            }\n          });\n        }\n      });\n      var gcLen = gc.length / 2;\n\n      if (gcLen > arrayOfThings.length) {\n        for (var i = 0; i < gcLen; i++) {\n          delete data[gc[i]];\n        }\n\n        gc.splice(0, gcLen);\n      }\n\n      return longest;\n    };\n\n    helpers$1.measureText = function (ctx, data, gc, longest, string) {\n      var textWidth = data[string];\n\n      if (!textWidth) {\n        textWidth = data[string] = ctx.measureText(string).width;\n        gc.push(string);\n      }\n\n      if (textWidth > longest) {\n        longest = textWidth;\n      }\n\n      return longest;\n    };\n\n    helpers$1.numberOfLabelLines = function (arrayOfThings) {\n      var numberOfLines = 1;\n      helpers$1.each(arrayOfThings, function (thing) {\n        if (helpers$1.isArray(thing)) {\n          if (thing.length > numberOfLines) {\n            numberOfLines = thing.length;\n          }\n        }\n      });\n      return numberOfLines;\n    };\n\n    helpers$1.color = !chartjsColor ? function (value) {\n      console.error('Color.js not found!');\n      return value;\n    } : function (value) {\n      /* global CanvasGradient */\n      if (value instanceof CanvasGradient) {\n        value = core_defaults.global.defaultColor;\n      }\n\n      return chartjsColor(value);\n    };\n\n    helpers$1.getHoverColor = function (colorValue) {\n      /* global CanvasPattern */\n      return colorValue instanceof CanvasPattern || colorValue instanceof CanvasGradient ? colorValue : helpers$1.color(colorValue).saturate(0.5).darken(0.1).rgbString();\n    };\n  };\n\n  function abstract() {\n    throw new Error('This method is not implemented: either no adapter can ' + 'be found or an incomplete integration was provided.');\n  }\n  /**\n   * Date adapter (current used by the time scale)\n   * @namespace Chart._adapters._date\n   * @memberof Chart._adapters\n   * @private\n   */\n\n  /**\n   * Currently supported unit string values.\n   * @typedef {('millisecond'|'second'|'minute'|'hour'|'day'|'week'|'month'|'quarter'|'year')}\n   * @memberof Chart._adapters._date\n   * @name Unit\n   */\n\n  /**\n   * @class\n   */\n\n\n  function DateAdapter(options) {\n    this.options = options || {};\n  }\n\n  helpers$1.extend(DateAdapter.prototype,\n  /** @lends DateAdapter */\n  {\n    /**\n     * Returns a map of time formats for the supported formatting units defined\n     * in Unit as well as 'datetime' representing a detailed date/time string.\n     * @returns {{string: string}}\n     */\n    formats: abstract,\n\n    /**\n     * Parses the given `value` and return the associated timestamp.\n     * @param {any} value - the value to parse (usually comes from the data)\n     * @param {string} [format] - the expected data format\n     * @returns {(number|null)}\n     * @function\n     */\n    parse: abstract,\n\n    /**\n     * Returns the formatted date in the specified `format` for a given `timestamp`.\n     * @param {number} timestamp - the timestamp to format\n     * @param {string} format - the date/time token\n     * @return {string}\n     * @function\n     */\n    format: abstract,\n\n    /**\n     * Adds the specified `amount` of `unit` to the given `timestamp`.\n     * @param {number} timestamp - the input timestamp\n     * @param {number} amount - the amount to add\n     * @param {Unit} unit - the unit as string\n     * @return {number}\n     * @function\n     */\n    add: abstract,\n\n    /**\n     * Returns the number of `unit` between the given timestamps.\n     * @param {number} max - the input timestamp (reference)\n     * @param {number} min - the timestamp to substract\n     * @param {Unit} unit - the unit as string\n     * @return {number}\n     * @function\n     */\n    diff: abstract,\n\n    /**\n     * Returns start of `unit` for the given `timestamp`.\n     * @param {number} timestamp - the input timestamp\n     * @param {Unit} unit - the unit as string\n     * @param {number} [weekday] - the ISO day of the week with 1 being Monday\n     * and 7 being Sunday (only needed if param *unit* is `isoWeek`).\n     * @function\n     */\n    startOf: abstract,\n\n    /**\n     * Returns end of `unit` for the given `timestamp`.\n     * @param {number} timestamp - the input timestamp\n     * @param {Unit} unit - the unit as string\n     * @function\n     */\n    endOf: abstract,\n    // DEPRECATIONS\n\n    /**\n     * Provided for backward compatibility for scale.getValueForPixel(),\n     * this method should be overridden only by the moment adapter.\n     * @deprecated since version 2.8.0\n     * @todo remove at version 3\n     * @private\n     */\n    _create: function _create(value) {\n      return value;\n    }\n  });\n\n  DateAdapter.override = function (members) {\n    helpers$1.extend(DateAdapter.prototype, members);\n  };\n\n  var _date = DateAdapter;\n  var core_adapters = {\n    _date: _date\n  };\n  /**\n   * Namespace to hold static tick generation functions\n   * @namespace Chart.Ticks\n   */\n\n  var core_ticks = {\n    /**\n     * Namespace to hold formatters for different types of ticks\n     * @namespace Chart.Ticks.formatters\n     */\n    formatters: {\n      /**\n       * Formatter for value labels\n       * @method Chart.Ticks.formatters.values\n       * @param value the value to display\n       * @return {string|string[]} the label to display\n       */\n      values: function values(value) {\n        return helpers$1.isArray(value) ? value : '' + value;\n      },\n\n      /**\n       * Formatter for linear numeric ticks\n       * @method Chart.Ticks.formatters.linear\n       * @param tickValue {number} the value to be formatted\n       * @param index {number} the position of the tickValue parameter in the ticks array\n       * @param ticks {number[]} the list of ticks being converted\n       * @return {string} string representation of the tickValue parameter\n       */\n      linear: function linear(tickValue, index, ticks) {\n        // If we have lots of ticks, don't use the ones\n        var delta = ticks.length > 3 ? ticks[2] - ticks[1] : ticks[1] - ticks[0]; // If we have a number like 2.5 as the delta, figure out how many decimal places we need\n\n        if (Math.abs(delta) > 1) {\n          if (tickValue !== Math.floor(tickValue)) {\n            // not an integer\n            delta = tickValue - Math.floor(tickValue);\n          }\n        }\n\n        var logDelta = helpers$1.log10(Math.abs(delta));\n        var tickString = '';\n\n        if (tickValue !== 0) {\n          var maxTick = Math.max(Math.abs(ticks[0]), Math.abs(ticks[ticks.length - 1]));\n\n          if (maxTick < 1e-4) {\n            // all ticks are small numbers; use scientific notation\n            var logTick = helpers$1.log10(Math.abs(tickValue));\n            tickString = tickValue.toExponential(Math.floor(logTick) - Math.floor(logDelta));\n          } else {\n            var numDecimal = -1 * Math.floor(logDelta);\n            numDecimal = Math.max(Math.min(numDecimal, 20), 0); // toFixed has a max of 20 decimal places\n\n            tickString = tickValue.toFixed(numDecimal);\n          }\n        } else {\n          tickString = '0'; // never show decimal places for 0\n        }\n\n        return tickString;\n      },\n      logarithmic: function logarithmic(tickValue, index, ticks) {\n        var remain = tickValue / Math.pow(10, Math.floor(helpers$1.log10(tickValue)));\n\n        if (tickValue === 0) {\n          return '0';\n        } else if (remain === 1 || remain === 2 || remain === 5 || index === 0 || index === ticks.length - 1) {\n          return tickValue.toExponential();\n        }\n\n        return '';\n      }\n    }\n  };\n  var valueOrDefault$9 = helpers$1.valueOrDefault;\n  var valueAtIndexOrDefault = helpers$1.valueAtIndexOrDefault;\n\n  core_defaults._set('scale', {\n    display: true,\n    position: 'left',\n    offset: false,\n    // grid line settings\n    gridLines: {\n      display: true,\n      color: 'rgba(0, 0, 0, 0.1)',\n      lineWidth: 1,\n      drawBorder: true,\n      drawOnChartArea: true,\n      drawTicks: true,\n      tickMarkLength: 10,\n      zeroLineWidth: 1,\n      zeroLineColor: 'rgba(0,0,0,0.25)',\n      zeroLineBorderDash: [],\n      zeroLineBorderDashOffset: 0.0,\n      offsetGridLines: false,\n      borderDash: [],\n      borderDashOffset: 0.0\n    },\n    // scale label\n    scaleLabel: {\n      // display property\n      display: false,\n      // actual label\n      labelString: '',\n      // top/bottom padding\n      padding: {\n        top: 4,\n        bottom: 4\n      }\n    },\n    // label settings\n    ticks: {\n      beginAtZero: false,\n      minRotation: 0,\n      maxRotation: 50,\n      mirror: false,\n      padding: 0,\n      reverse: false,\n      display: true,\n      autoSkip: true,\n      autoSkipPadding: 0,\n      labelOffset: 0,\n      // We pass through arrays to be rendered as multiline labels, we convert Others to strings here.\n      callback: core_ticks.formatters.values,\n      minor: {},\n      major: {}\n    }\n  });\n\n  function labelsFromTicks(ticks) {\n    var labels = [];\n    var i, ilen;\n\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      labels.push(ticks[i].label);\n    }\n\n    return labels;\n  }\n\n  function getPixelForGridLine(scale, index, offsetGridLines) {\n    var lineValue = scale.getPixelForTick(index);\n\n    if (offsetGridLines) {\n      if (scale.getTicks().length === 1) {\n        lineValue -= scale.isHorizontal() ? Math.max(lineValue - scale.left, scale.right - lineValue) : Math.max(lineValue - scale.top, scale.bottom - lineValue);\n      } else if (index === 0) {\n        lineValue -= (scale.getPixelForTick(1) - lineValue) / 2;\n      } else {\n        lineValue -= (lineValue - scale.getPixelForTick(index - 1)) / 2;\n      }\n    }\n\n    return lineValue;\n  }\n\n  function computeTextSize(context, tick, font) {\n    return helpers$1.isArray(tick) ? helpers$1.longestText(context, font, tick) : context.measureText(tick).width;\n  }\n\n  var core_scale = core_element.extend({\n    /**\n     * Get the padding needed for the scale\n     * @method getPadding\n     * @private\n     * @returns {Padding} the necessary padding\n     */\n    getPadding: function getPadding() {\n      var me = this;\n      return {\n        left: me.paddingLeft || 0,\n        top: me.paddingTop || 0,\n        right: me.paddingRight || 0,\n        bottom: me.paddingBottom || 0\n      };\n    },\n\n    /**\n     * Returns the scale tick objects ({label, major})\n     * @since 2.7\n     */\n    getTicks: function getTicks() {\n      return this._ticks;\n    },\n    // These methods are ordered by lifecyle. Utilities then follow.\n    // Any function defined here is inherited by all scale types.\n    // Any function can be extended by the scale type\n    mergeTicksOptions: function mergeTicksOptions() {\n      var ticks = this.options.ticks;\n\n      if (ticks.minor === false) {\n        ticks.minor = {\n          display: false\n        };\n      }\n\n      if (ticks.major === false) {\n        ticks.major = {\n          display: false\n        };\n      }\n\n      for (var key in ticks) {\n        if (key !== 'major' && key !== 'minor') {\n          if (typeof ticks.minor[key] === 'undefined') {\n            ticks.minor[key] = ticks[key];\n          }\n\n          if (typeof ticks.major[key] === 'undefined') {\n            ticks.major[key] = ticks[key];\n          }\n        }\n      }\n    },\n    beforeUpdate: function beforeUpdate() {\n      helpers$1.callback(this.options.beforeUpdate, [this]);\n    },\n    update: function update(maxWidth, maxHeight, margins) {\n      var me = this;\n      var i, ilen, labels, label, ticks, tick; // Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\n\n      me.beforeUpdate(); // Absorb the master measurements\n\n      me.maxWidth = maxWidth;\n      me.maxHeight = maxHeight;\n      me.margins = helpers$1.extend({\n        left: 0,\n        right: 0,\n        top: 0,\n        bottom: 0\n      }, margins);\n      me._maxLabelLines = 0;\n      me.longestLabelWidth = 0;\n      me.longestTextCache = me.longestTextCache || {}; // Dimensions\n\n      me.beforeSetDimensions();\n      me.setDimensions();\n      me.afterSetDimensions(); // Data min/max\n\n      me.beforeDataLimits();\n      me.determineDataLimits();\n      me.afterDataLimits(); // Ticks - `this.ticks` is now DEPRECATED!\n      // Internal ticks are now stored as objects in the PRIVATE `this._ticks` member\n      // and must not be accessed directly from outside this class. `this.ticks` being\n      // around for long time and not marked as private, we can't change its structure\n      // without unexpected breaking changes. If you need to access the scale ticks,\n      // use scale.getTicks() instead.\n\n      me.beforeBuildTicks(); // New implementations should return an array of objects but for BACKWARD COMPAT,\n      // we still support no return (`this.ticks` internally set by calling this method).\n\n      ticks = me.buildTicks() || []; // Allow modification of ticks in callback.\n\n      ticks = me.afterBuildTicks(ticks) || ticks;\n      me.beforeTickToLabelConversion(); // New implementations should return the formatted tick labels but for BACKWARD\n      // COMPAT, we still support no return (`this.ticks` internally changed by calling\n      // this method and supposed to contain only string values).\n\n      labels = me.convertTicksToLabels(ticks) || me.ticks;\n      me.afterTickToLabelConversion();\n      me.ticks = labels; // BACKWARD COMPATIBILITY\n      // IMPORTANT: from this point, we consider that `this.ticks` will NEVER change!\n      // BACKWARD COMPAT: synchronize `_ticks` with labels (so potentially `this.ticks`)\n\n      for (i = 0, ilen = labels.length; i < ilen; ++i) {\n        label = labels[i];\n        tick = ticks[i];\n\n        if (!tick) {\n          ticks.push(tick = {\n            label: label,\n            major: false\n          });\n        } else {\n          tick.label = label;\n        }\n      }\n\n      me._ticks = ticks; // Tick Rotation\n\n      me.beforeCalculateTickRotation();\n      me.calculateTickRotation();\n      me.afterCalculateTickRotation(); // Fit\n\n      me.beforeFit();\n      me.fit();\n      me.afterFit(); //\n\n      me.afterUpdate();\n      return me.minSize;\n    },\n    afterUpdate: function afterUpdate() {\n      helpers$1.callback(this.options.afterUpdate, [this]);\n    },\n    //\n    beforeSetDimensions: function beforeSetDimensions() {\n      helpers$1.callback(this.options.beforeSetDimensions, [this]);\n    },\n    setDimensions: function setDimensions() {\n      var me = this; // Set the unconstrained dimension before label rotation\n\n      if (me.isHorizontal()) {\n        // Reset position before calculating rotation\n        me.width = me.maxWidth;\n        me.left = 0;\n        me.right = me.width;\n      } else {\n        me.height = me.maxHeight; // Reset position before calculating rotation\n\n        me.top = 0;\n        me.bottom = me.height;\n      } // Reset padding\n\n\n      me.paddingLeft = 0;\n      me.paddingTop = 0;\n      me.paddingRight = 0;\n      me.paddingBottom = 0;\n    },\n    afterSetDimensions: function afterSetDimensions() {\n      helpers$1.callback(this.options.afterSetDimensions, [this]);\n    },\n    // Data limits\n    beforeDataLimits: function beforeDataLimits() {\n      helpers$1.callback(this.options.beforeDataLimits, [this]);\n    },\n    determineDataLimits: helpers$1.noop,\n    afterDataLimits: function afterDataLimits() {\n      helpers$1.callback(this.options.afterDataLimits, [this]);\n    },\n    //\n    beforeBuildTicks: function beforeBuildTicks() {\n      helpers$1.callback(this.options.beforeBuildTicks, [this]);\n    },\n    buildTicks: helpers$1.noop,\n    afterBuildTicks: function afterBuildTicks(ticks) {\n      var me = this; // ticks is empty for old axis implementations here\n\n      if (helpers$1.isArray(ticks) && ticks.length) {\n        return helpers$1.callback(me.options.afterBuildTicks, [me, ticks]);\n      } // Support old implementations (that modified `this.ticks` directly in buildTicks)\n\n\n      me.ticks = helpers$1.callback(me.options.afterBuildTicks, [me, me.ticks]) || me.ticks;\n      return ticks;\n    },\n    beforeTickToLabelConversion: function beforeTickToLabelConversion() {\n      helpers$1.callback(this.options.beforeTickToLabelConversion, [this]);\n    },\n    convertTicksToLabels: function convertTicksToLabels() {\n      var me = this; // Convert ticks to strings\n\n      var tickOpts = me.options.ticks;\n      me.ticks = me.ticks.map(tickOpts.userCallback || tickOpts.callback, this);\n    },\n    afterTickToLabelConversion: function afterTickToLabelConversion() {\n      helpers$1.callback(this.options.afterTickToLabelConversion, [this]);\n    },\n    //\n    beforeCalculateTickRotation: function beforeCalculateTickRotation() {\n      helpers$1.callback(this.options.beforeCalculateTickRotation, [this]);\n    },\n    calculateTickRotation: function calculateTickRotation() {\n      var me = this;\n      var context = me.ctx;\n      var tickOpts = me.options.ticks;\n      var labels = labelsFromTicks(me._ticks); // Get the width of each grid by calculating the difference\n      // between x offsets between 0 and 1.\n\n      var tickFont = helpers$1.options._parseFont(tickOpts);\n\n      context.font = tickFont.string;\n      var labelRotation = tickOpts.minRotation || 0;\n\n      if (labels.length && me.options.display && me.isHorizontal()) {\n        var originalLabelWidth = helpers$1.longestText(context, tickFont.string, labels, me.longestTextCache);\n        var labelWidth = originalLabelWidth;\n        var cosRotation, sinRotation; // Allow 3 pixels x2 padding either side for label readability\n\n        var tickWidth = me.getPixelForTick(1) - me.getPixelForTick(0) - 6; // Max label rotation can be set or default to 90 - also act as a loop counter\n\n        while (labelWidth > tickWidth && labelRotation < tickOpts.maxRotation) {\n          var angleRadians = helpers$1.toRadians(labelRotation);\n          cosRotation = Math.cos(angleRadians);\n          sinRotation = Math.sin(angleRadians);\n\n          if (sinRotation * originalLabelWidth > me.maxHeight) {\n            // go back one step\n            labelRotation--;\n            break;\n          }\n\n          labelRotation++;\n          labelWidth = cosRotation * originalLabelWidth;\n        }\n      }\n\n      me.labelRotation = labelRotation;\n    },\n    afterCalculateTickRotation: function afterCalculateTickRotation() {\n      helpers$1.callback(this.options.afterCalculateTickRotation, [this]);\n    },\n    //\n    beforeFit: function beforeFit() {\n      helpers$1.callback(this.options.beforeFit, [this]);\n    },\n    fit: function fit() {\n      var me = this; // Reset\n\n      var minSize = me.minSize = {\n        width: 0,\n        height: 0\n      };\n      var labels = labelsFromTicks(me._ticks);\n      var opts = me.options;\n      var tickOpts = opts.ticks;\n      var scaleLabelOpts = opts.scaleLabel;\n      var gridLineOpts = opts.gridLines;\n\n      var display = me._isVisible();\n\n      var position = opts.position;\n      var isHorizontal = me.isHorizontal();\n      var parseFont = helpers$1.options._parseFont;\n      var tickFont = parseFont(tickOpts);\n      var tickMarkLength = opts.gridLines.tickMarkLength; // Width\n\n      if (isHorizontal) {\n        // subtract the margins to line up with the chartArea if we are a full width scale\n        minSize.width = me.isFullWidth() ? me.maxWidth - me.margins.left - me.margins.right : me.maxWidth;\n      } else {\n        minSize.width = display && gridLineOpts.drawTicks ? tickMarkLength : 0;\n      } // height\n\n\n      if (isHorizontal) {\n        minSize.height = display && gridLineOpts.drawTicks ? tickMarkLength : 0;\n      } else {\n        minSize.height = me.maxHeight; // fill all the height\n      } // Are we showing a title for the scale?\n\n\n      if (scaleLabelOpts.display && display) {\n        var scaleLabelFont = parseFont(scaleLabelOpts);\n        var scaleLabelPadding = helpers$1.options.toPadding(scaleLabelOpts.padding);\n        var deltaHeight = scaleLabelFont.lineHeight + scaleLabelPadding.height;\n\n        if (isHorizontal) {\n          minSize.height += deltaHeight;\n        } else {\n          minSize.width += deltaHeight;\n        }\n      } // Don't bother fitting the ticks if we are not showing the labels\n\n\n      if (tickOpts.display && display) {\n        var largestTextWidth = helpers$1.longestText(me.ctx, tickFont.string, labels, me.longestTextCache);\n        var tallestLabelHeightInLines = helpers$1.numberOfLabelLines(labels);\n        var lineSpace = tickFont.size * 0.5;\n        var tickPadding = me.options.ticks.padding; // Store max number of lines and widest label for _autoSkip\n\n        me._maxLabelLines = tallestLabelHeightInLines;\n        me.longestLabelWidth = largestTextWidth;\n\n        if (isHorizontal) {\n          var angleRadians = helpers$1.toRadians(me.labelRotation);\n          var cosRotation = Math.cos(angleRadians);\n          var sinRotation = Math.sin(angleRadians); // TODO - improve this calculation\n\n          var labelHeight = sinRotation * largestTextWidth + tickFont.lineHeight * tallestLabelHeightInLines + lineSpace; // padding\n\n          minSize.height = Math.min(me.maxHeight, minSize.height + labelHeight + tickPadding);\n          me.ctx.font = tickFont.string;\n          var firstLabelWidth = computeTextSize(me.ctx, labels[0], tickFont.string);\n          var lastLabelWidth = computeTextSize(me.ctx, labels[labels.length - 1], tickFont.string);\n          var offsetLeft = me.getPixelForTick(0) - me.left;\n          var offsetRight = me.right - me.getPixelForTick(labels.length - 1);\n          var paddingLeft, paddingRight; // Ensure that our ticks are always inside the canvas. When rotated, ticks are right aligned\n          // which means that the right padding is dominated by the font height\n\n          if (me.labelRotation !== 0) {\n            paddingLeft = position === 'bottom' ? cosRotation * firstLabelWidth : cosRotation * lineSpace;\n            paddingRight = position === 'bottom' ? cosRotation * lineSpace : cosRotation * lastLabelWidth;\n          } else {\n            paddingLeft = firstLabelWidth / 2;\n            paddingRight = lastLabelWidth / 2;\n          }\n\n          me.paddingLeft = Math.max(paddingLeft - offsetLeft, 0) + 3; // add 3 px to move away from canvas edges\n\n          me.paddingRight = Math.max(paddingRight - offsetRight, 0) + 3;\n        } else {\n          // A vertical axis is more constrained by the width. Labels are the\n          // dominant factor here, so get that length first and account for padding\n          if (tickOpts.mirror) {\n            largestTextWidth = 0;\n          } else {\n            // use lineSpace for consistency with horizontal axis\n            // tickPadding is not implemented for horizontal\n            largestTextWidth += tickPadding + lineSpace;\n          }\n\n          minSize.width = Math.min(me.maxWidth, minSize.width + largestTextWidth);\n          me.paddingTop = tickFont.size / 2;\n          me.paddingBottom = tickFont.size / 2;\n        }\n      }\n\n      me.handleMargins();\n      me.width = minSize.width;\n      me.height = minSize.height;\n    },\n\n    /**\n     * Handle margins and padding interactions\n     * @private\n     */\n    handleMargins: function handleMargins() {\n      var me = this;\n\n      if (me.margins) {\n        me.paddingLeft = Math.max(me.paddingLeft - me.margins.left, 0);\n        me.paddingTop = Math.max(me.paddingTop - me.margins.top, 0);\n        me.paddingRight = Math.max(me.paddingRight - me.margins.right, 0);\n        me.paddingBottom = Math.max(me.paddingBottom - me.margins.bottom, 0);\n      }\n    },\n    afterFit: function afterFit() {\n      helpers$1.callback(this.options.afterFit, [this]);\n    },\n    // Shared Methods\n    isHorizontal: function isHorizontal() {\n      return this.options.position === 'top' || this.options.position === 'bottom';\n    },\n    isFullWidth: function isFullWidth() {\n      return this.options.fullWidth;\n    },\n    // Get the correct value. NaN bad inputs, If the value type is object get the x or y based on whether we are horizontal or not\n    getRightValue: function getRightValue(rawValue) {\n      // Null and undefined values first\n      if (helpers$1.isNullOrUndef(rawValue)) {\n        return NaN;\n      } // isNaN(object) returns true, so make sure NaN is checking for a number; Discard Infinite values\n\n\n      if ((typeof rawValue === 'number' || rawValue instanceof Number) && !isFinite(rawValue)) {\n        return NaN;\n      } // If it is in fact an object, dive in one more level\n\n\n      if (rawValue) {\n        if (this.isHorizontal()) {\n          if (rawValue.x !== undefined) {\n            return this.getRightValue(rawValue.x);\n          }\n        } else if (rawValue.y !== undefined) {\n          return this.getRightValue(rawValue.y);\n        }\n      } // Value is good, return it\n\n\n      return rawValue;\n    },\n\n    /**\n     * Used to get the value to display in the tooltip for the data at the given index\n     * @param index\n     * @param datasetIndex\n     */\n    getLabelForIndex: helpers$1.noop,\n\n    /**\n     * Returns the location of the given data point. Value can either be an index or a numerical value\n     * The coordinate (0, 0) is at the upper-left corner of the canvas\n     * @param value\n     * @param index\n     * @param datasetIndex\n     */\n    getPixelForValue: helpers$1.noop,\n\n    /**\n     * Used to get the data value from a given pixel. This is the inverse of getPixelForValue\n     * The coordinate (0, 0) is at the upper-left corner of the canvas\n     * @param pixel\n     */\n    getValueForPixel: helpers$1.noop,\n\n    /**\n     * Returns the location of the tick at the given index\n     * The coordinate (0, 0) is at the upper-left corner of the canvas\n     */\n    getPixelForTick: function getPixelForTick(index) {\n      var me = this;\n      var offset = me.options.offset;\n\n      if (me.isHorizontal()) {\n        var innerWidth = me.width - (me.paddingLeft + me.paddingRight);\n        var tickWidth = innerWidth / Math.max(me._ticks.length - (offset ? 0 : 1), 1);\n        var pixel = tickWidth * index + me.paddingLeft;\n\n        if (offset) {\n          pixel += tickWidth / 2;\n        }\n\n        var finalVal = me.left + pixel;\n        finalVal += me.isFullWidth() ? me.margins.left : 0;\n        return finalVal;\n      }\n\n      var innerHeight = me.height - (me.paddingTop + me.paddingBottom);\n      return me.top + index * (innerHeight / (me._ticks.length - 1));\n    },\n\n    /**\n     * Utility for getting the pixel location of a percentage of scale\n     * The coordinate (0, 0) is at the upper-left corner of the canvas\n     */\n    getPixelForDecimal: function getPixelForDecimal(decimal) {\n      var me = this;\n\n      if (me.isHorizontal()) {\n        var innerWidth = me.width - (me.paddingLeft + me.paddingRight);\n        var valueOffset = innerWidth * decimal + me.paddingLeft;\n        var finalVal = me.left + valueOffset;\n        finalVal += me.isFullWidth() ? me.margins.left : 0;\n        return finalVal;\n      }\n\n      return me.top + decimal * me.height;\n    },\n\n    /**\n     * Returns the pixel for the minimum chart value\n     * The coordinate (0, 0) is at the upper-left corner of the canvas\n     */\n    getBasePixel: function getBasePixel() {\n      return this.getPixelForValue(this.getBaseValue());\n    },\n    getBaseValue: function getBaseValue() {\n      var me = this;\n      var min = me.min;\n      var max = me.max;\n      return me.beginAtZero ? 0 : min < 0 && max < 0 ? max : min > 0 && max > 0 ? min : 0;\n    },\n\n    /**\n     * Returns a subset of ticks to be plotted to avoid overlapping labels.\n     * @private\n     */\n    _autoSkip: function _autoSkip(ticks) {\n      var me = this;\n      var isHorizontal = me.isHorizontal();\n      var optionTicks = me.options.ticks.minor;\n      var tickCount = ticks.length;\n      var skipRatio = false;\n      var maxTicks = optionTicks.maxTicksLimit; // Total space needed to display all ticks. First and last ticks are\n      // drawn as their center at end of axis, so tickCount-1\n\n      var ticksLength = me._tickSize() * (tickCount - 1); // Axis length\n\n      var axisLength = isHorizontal ? me.width - (me.paddingLeft + me.paddingRight) : me.height - (me.paddingTop + me.PaddingBottom);\n      var result = [];\n      var i, tick;\n\n      if (ticksLength > axisLength) {\n        skipRatio = 1 + Math.floor(ticksLength / axisLength);\n      } // if they defined a max number of optionTicks,\n      // increase skipRatio until that number is met\n\n\n      if (tickCount > maxTicks) {\n        skipRatio = Math.max(skipRatio, 1 + Math.floor(tickCount / maxTicks));\n      }\n\n      for (i = 0; i < tickCount; i++) {\n        tick = ticks[i];\n\n        if (skipRatio > 1 && i % skipRatio > 0) {\n          // leave tick in place but make sure it's not displayed (#4635)\n          delete tick.label;\n        }\n\n        result.push(tick);\n      }\n\n      return result;\n    },\n\n    /**\n     * @private\n     */\n    _tickSize: function _tickSize() {\n      var me = this;\n      var isHorizontal = me.isHorizontal();\n      var optionTicks = me.options.ticks.minor; // Calculate space needed by label in axis direction.\n\n      var rot = helpers$1.toRadians(me.labelRotation);\n      var cos = Math.abs(Math.cos(rot));\n      var sin = Math.abs(Math.sin(rot));\n      var padding = optionTicks.autoSkipPadding || 0;\n      var w = me.longestLabelWidth + padding || 0;\n\n      var tickFont = helpers$1.options._parseFont(optionTicks);\n\n      var h = me._maxLabelLines * tickFont.lineHeight + padding || 0; // Calculate space needed for 1 tick in axis direction.\n\n      return isHorizontal ? h * cos > w * sin ? w / cos : h / sin : h * sin < w * cos ? h / cos : w / sin;\n    },\n\n    /**\n     * @private\n     */\n    _isVisible: function _isVisible() {\n      var me = this;\n      var chart = me.chart;\n      var display = me.options.display;\n      var i, ilen, meta;\n\n      if (display !== 'auto') {\n        return !!display;\n      } // When 'auto', the scale is visible if at least one associated dataset is visible.\n\n\n      for (i = 0, ilen = chart.data.datasets.length; i < ilen; ++i) {\n        if (chart.isDatasetVisible(i)) {\n          meta = chart.getDatasetMeta(i);\n\n          if (meta.xAxisID === me.id || meta.yAxisID === me.id) {\n            return true;\n          }\n        }\n      }\n\n      return false;\n    },\n\n    /**\n     * Actually draw the scale on the canvas\n     * @param {object} chartArea - the area of the chart to draw full grid lines on\n     */\n    draw: function draw(chartArea) {\n      var me = this;\n      var options = me.options;\n\n      if (!me._isVisible()) {\n        return;\n      }\n\n      var chart = me.chart;\n      var context = me.ctx;\n      var globalDefaults = core_defaults.global;\n      var defaultFontColor = globalDefaults.defaultFontColor;\n      var optionTicks = options.ticks.minor;\n      var optionMajorTicks = options.ticks.major || optionTicks;\n      var gridLines = options.gridLines;\n      var scaleLabel = options.scaleLabel;\n      var position = options.position;\n      var isRotated = me.labelRotation !== 0;\n      var isMirrored = optionTicks.mirror;\n      var isHorizontal = me.isHorizontal();\n      var parseFont = helpers$1.options._parseFont;\n      var ticks = optionTicks.display && optionTicks.autoSkip ? me._autoSkip(me.getTicks()) : me.getTicks();\n      var tickFontColor = valueOrDefault$9(optionTicks.fontColor, defaultFontColor);\n      var tickFont = parseFont(optionTicks);\n      var lineHeight = tickFont.lineHeight;\n      var majorTickFontColor = valueOrDefault$9(optionMajorTicks.fontColor, defaultFontColor);\n      var majorTickFont = parseFont(optionMajorTicks);\n      var tickPadding = optionTicks.padding;\n      var labelOffset = optionTicks.labelOffset;\n      var tl = gridLines.drawTicks ? gridLines.tickMarkLength : 0;\n      var scaleLabelFontColor = valueOrDefault$9(scaleLabel.fontColor, defaultFontColor);\n      var scaleLabelFont = parseFont(scaleLabel);\n      var scaleLabelPadding = helpers$1.options.toPadding(scaleLabel.padding);\n      var labelRotationRadians = helpers$1.toRadians(me.labelRotation);\n      var itemsToDraw = [];\n      var axisWidth = gridLines.drawBorder ? valueAtIndexOrDefault(gridLines.lineWidth, 0, 0) : 0;\n      var alignPixel = helpers$1._alignPixel;\n      var borderValue, tickStart, tickEnd;\n\n      if (position === 'top') {\n        borderValue = alignPixel(chart, me.bottom, axisWidth);\n        tickStart = me.bottom - tl;\n        tickEnd = borderValue - axisWidth / 2;\n      } else if (position === 'bottom') {\n        borderValue = alignPixel(chart, me.top, axisWidth);\n        tickStart = borderValue + axisWidth / 2;\n        tickEnd = me.top + tl;\n      } else if (position === 'left') {\n        borderValue = alignPixel(chart, me.right, axisWidth);\n        tickStart = me.right - tl;\n        tickEnd = borderValue - axisWidth / 2;\n      } else {\n        borderValue = alignPixel(chart, me.left, axisWidth);\n        tickStart = borderValue + axisWidth / 2;\n        tickEnd = me.left + tl;\n      }\n\n      var epsilon = 0.0000001; // 0.0000001 is margin in pixels for Accumulated error.\n\n      helpers$1.each(ticks, function (tick, index) {\n        // autoskipper skipped this tick (#4635)\n        if (helpers$1.isNullOrUndef(tick.label)) {\n          return;\n        }\n\n        var label = tick.label;\n        var lineWidth, lineColor, borderDash, borderDashOffset;\n\n        if (index === me.zeroLineIndex && options.offset === gridLines.offsetGridLines) {\n          // Draw the first index specially\n          lineWidth = gridLines.zeroLineWidth;\n          lineColor = gridLines.zeroLineColor;\n          borderDash = gridLines.zeroLineBorderDash || [];\n          borderDashOffset = gridLines.zeroLineBorderDashOffset || 0.0;\n        } else {\n          lineWidth = valueAtIndexOrDefault(gridLines.lineWidth, index);\n          lineColor = valueAtIndexOrDefault(gridLines.color, index);\n          borderDash = gridLines.borderDash || [];\n          borderDashOffset = gridLines.borderDashOffset || 0.0;\n        } // Common properties\n\n\n        var tx1, ty1, tx2, ty2, x1, y1, x2, y2, labelX, labelY, textOffset, textAlign;\n        var labelCount = helpers$1.isArray(label) ? label.length : 1;\n        var lineValue = getPixelForGridLine(me, index, gridLines.offsetGridLines);\n\n        if (isHorizontal) {\n          var labelYOffset = tl + tickPadding;\n\n          if (lineValue < me.left - epsilon) {\n            lineColor = 'rgba(0,0,0,0)';\n          }\n\n          tx1 = tx2 = x1 = x2 = alignPixel(chart, lineValue, lineWidth);\n          ty1 = tickStart;\n          ty2 = tickEnd;\n          labelX = me.getPixelForTick(index) + labelOffset; // x values for optionTicks (need to consider offsetLabel option)\n\n          if (position === 'top') {\n            y1 = alignPixel(chart, chartArea.top, axisWidth) + axisWidth / 2;\n            y2 = chartArea.bottom;\n            textOffset = ((!isRotated ? 0.5 : 1) - labelCount) * lineHeight;\n            textAlign = !isRotated ? 'center' : 'left';\n            labelY = me.bottom - labelYOffset;\n          } else {\n            y1 = chartArea.top;\n            y2 = alignPixel(chart, chartArea.bottom, axisWidth) - axisWidth / 2;\n            textOffset = (!isRotated ? 0.5 : 0) * lineHeight;\n            textAlign = !isRotated ? 'center' : 'right';\n            labelY = me.top + labelYOffset;\n          }\n        } else {\n          var labelXOffset = (isMirrored ? 0 : tl) + tickPadding;\n\n          if (lineValue < me.top - epsilon) {\n            lineColor = 'rgba(0,0,0,0)';\n          }\n\n          tx1 = tickStart;\n          tx2 = tickEnd;\n          ty1 = ty2 = y1 = y2 = alignPixel(chart, lineValue, lineWidth);\n          labelY = me.getPixelForTick(index) + labelOffset;\n          textOffset = (1 - labelCount) * lineHeight / 2;\n\n          if (position === 'left') {\n            x1 = alignPixel(chart, chartArea.left, axisWidth) + axisWidth / 2;\n            x2 = chartArea.right;\n            textAlign = isMirrored ? 'left' : 'right';\n            labelX = me.right - labelXOffset;\n          } else {\n            x1 = chartArea.left;\n            x2 = alignPixel(chart, chartArea.right, axisWidth) - axisWidth / 2;\n            textAlign = isMirrored ? 'right' : 'left';\n            labelX = me.left + labelXOffset;\n          }\n        }\n\n        itemsToDraw.push({\n          tx1: tx1,\n          ty1: ty1,\n          tx2: tx2,\n          ty2: ty2,\n          x1: x1,\n          y1: y1,\n          x2: x2,\n          y2: y2,\n          labelX: labelX,\n          labelY: labelY,\n          glWidth: lineWidth,\n          glColor: lineColor,\n          glBorderDash: borderDash,\n          glBorderDashOffset: borderDashOffset,\n          rotation: -1 * labelRotationRadians,\n          label: label,\n          major: tick.major,\n          textOffset: textOffset,\n          textAlign: textAlign\n        });\n      }); // Draw all of the tick labels, tick marks, and grid lines at the correct places\n\n      helpers$1.each(itemsToDraw, function (itemToDraw) {\n        var glWidth = itemToDraw.glWidth;\n        var glColor = itemToDraw.glColor;\n\n        if (gridLines.display && glWidth && glColor) {\n          context.save();\n          context.lineWidth = glWidth;\n          context.strokeStyle = glColor;\n\n          if (context.setLineDash) {\n            context.setLineDash(itemToDraw.glBorderDash);\n            context.lineDashOffset = itemToDraw.glBorderDashOffset;\n          }\n\n          context.beginPath();\n\n          if (gridLines.drawTicks) {\n            context.moveTo(itemToDraw.tx1, itemToDraw.ty1);\n            context.lineTo(itemToDraw.tx2, itemToDraw.ty2);\n          }\n\n          if (gridLines.drawOnChartArea) {\n            context.moveTo(itemToDraw.x1, itemToDraw.y1);\n            context.lineTo(itemToDraw.x2, itemToDraw.y2);\n          }\n\n          context.stroke();\n          context.restore();\n        }\n\n        if (optionTicks.display) {\n          // Make sure we draw text in the correct color and font\n          context.save();\n          context.translate(itemToDraw.labelX, itemToDraw.labelY);\n          context.rotate(itemToDraw.rotation);\n          context.font = itemToDraw.major ? majorTickFont.string : tickFont.string;\n          context.fillStyle = itemToDraw.major ? majorTickFontColor : tickFontColor;\n          context.textBaseline = 'middle';\n          context.textAlign = itemToDraw.textAlign;\n          var label = itemToDraw.label;\n          var y = itemToDraw.textOffset;\n\n          if (helpers$1.isArray(label)) {\n            for (var i = 0; i < label.length; ++i) {\n              // We just make sure the multiline element is a string here..\n              context.fillText('' + label[i], 0, y);\n              y += lineHeight;\n            }\n          } else {\n            context.fillText(label, 0, y);\n          }\n\n          context.restore();\n        }\n      });\n\n      if (scaleLabel.display) {\n        // Draw the scale label\n        var scaleLabelX;\n        var scaleLabelY;\n        var rotation = 0;\n        var halfLineHeight = scaleLabelFont.lineHeight / 2;\n\n        if (isHorizontal) {\n          scaleLabelX = me.left + (me.right - me.left) / 2; // midpoint of the width\n\n          scaleLabelY = position === 'bottom' ? me.bottom - halfLineHeight - scaleLabelPadding.bottom : me.top + halfLineHeight + scaleLabelPadding.top;\n        } else {\n          var isLeft = position === 'left';\n          scaleLabelX = isLeft ? me.left + halfLineHeight + scaleLabelPadding.top : me.right - halfLineHeight - scaleLabelPadding.top;\n          scaleLabelY = me.top + (me.bottom - me.top) / 2;\n          rotation = isLeft ? -0.5 * Math.PI : 0.5 * Math.PI;\n        }\n\n        context.save();\n        context.translate(scaleLabelX, scaleLabelY);\n        context.rotate(rotation);\n        context.textAlign = 'center';\n        context.textBaseline = 'middle';\n        context.fillStyle = scaleLabelFontColor; // render in correct colour\n\n        context.font = scaleLabelFont.string;\n        context.fillText(scaleLabel.labelString, 0, 0);\n        context.restore();\n      }\n\n      if (axisWidth) {\n        // Draw the line at the edge of the axis\n        var firstLineWidth = axisWidth;\n        var lastLineWidth = valueAtIndexOrDefault(gridLines.lineWidth, ticks.length - 1, 0);\n        var x1, x2, y1, y2;\n\n        if (isHorizontal) {\n          x1 = alignPixel(chart, me.left, firstLineWidth) - firstLineWidth / 2;\n          x2 = alignPixel(chart, me.right, lastLineWidth) + lastLineWidth / 2;\n          y1 = y2 = borderValue;\n        } else {\n          y1 = alignPixel(chart, me.top, firstLineWidth) - firstLineWidth / 2;\n          y2 = alignPixel(chart, me.bottom, lastLineWidth) + lastLineWidth / 2;\n          x1 = x2 = borderValue;\n        }\n\n        context.lineWidth = axisWidth;\n        context.strokeStyle = valueAtIndexOrDefault(gridLines.color, 0);\n        context.beginPath();\n        context.moveTo(x1, y1);\n        context.lineTo(x2, y2);\n        context.stroke();\n      }\n    }\n  });\n  var defaultConfig = {\n    position: 'bottom'\n  };\n  var scale_category = core_scale.extend({\n    /**\n    * Internal function to get the correct labels. If data.xLabels or data.yLabels are defined, use those\n    * else fall back to data.labels\n    * @private\n    */\n    getLabels: function getLabels() {\n      var data = this.chart.data;\n      return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels;\n    },\n    determineDataLimits: function determineDataLimits() {\n      var me = this;\n      var labels = me.getLabels();\n      me.minIndex = 0;\n      me.maxIndex = labels.length - 1;\n      var findIndex;\n\n      if (me.options.ticks.min !== undefined) {\n        // user specified min value\n        findIndex = labels.indexOf(me.options.ticks.min);\n        me.minIndex = findIndex !== -1 ? findIndex : me.minIndex;\n      }\n\n      if (me.options.ticks.max !== undefined) {\n        // user specified max value\n        findIndex = labels.indexOf(me.options.ticks.max);\n        me.maxIndex = findIndex !== -1 ? findIndex : me.maxIndex;\n      }\n\n      me.min = labels[me.minIndex];\n      me.max = labels[me.maxIndex];\n    },\n    buildTicks: function buildTicks() {\n      var me = this;\n      var labels = me.getLabels(); // If we are viewing some subset of labels, slice the original array\n\n      me.ticks = me.minIndex === 0 && me.maxIndex === labels.length - 1 ? labels : labels.slice(me.minIndex, me.maxIndex + 1);\n    },\n    getLabelForIndex: function getLabelForIndex(index, datasetIndex) {\n      var me = this;\n      var chart = me.chart;\n\n      if (chart.getDatasetMeta(datasetIndex).controller._getValueScaleId() === me.id) {\n        return me.getRightValue(chart.data.datasets[datasetIndex].data[index]);\n      }\n\n      return me.ticks[index - me.minIndex];\n    },\n    // Used to get data value locations.  Value can either be an index or a numerical value\n    getPixelForValue: function getPixelForValue(value, index) {\n      var me = this;\n      var offset = me.options.offset; // 1 is added because we need the length but we have the indexes\n\n      var offsetAmt = Math.max(me.maxIndex + 1 - me.minIndex - (offset ? 0 : 1), 1); // If value is a data object, then index is the index in the data array,\n      // not the index of the scale. We need to change that.\n\n      var valueCategory;\n\n      if (value !== undefined && value !== null) {\n        valueCategory = me.isHorizontal() ? value.x : value.y;\n      }\n\n      if (valueCategory !== undefined || value !== undefined && isNaN(index)) {\n        var labels = me.getLabels();\n        value = valueCategory || value;\n        var idx = labels.indexOf(value);\n        index = idx !== -1 ? idx : index;\n      }\n\n      if (me.isHorizontal()) {\n        var valueWidth = me.width / offsetAmt;\n        var widthOffset = valueWidth * (index - me.minIndex);\n\n        if (offset) {\n          widthOffset += valueWidth / 2;\n        }\n\n        return me.left + widthOffset;\n      }\n\n      var valueHeight = me.height / offsetAmt;\n      var heightOffset = valueHeight * (index - me.minIndex);\n\n      if (offset) {\n        heightOffset += valueHeight / 2;\n      }\n\n      return me.top + heightOffset;\n    },\n    getPixelForTick: function getPixelForTick(index) {\n      return this.getPixelForValue(this.ticks[index], index + this.minIndex, null);\n    },\n    getValueForPixel: function getValueForPixel(pixel) {\n      var me = this;\n      var offset = me.options.offset;\n      var value;\n      var offsetAmt = Math.max(me._ticks.length - (offset ? 0 : 1), 1);\n      var horz = me.isHorizontal();\n      var valueDimension = (horz ? me.width : me.height) / offsetAmt;\n      pixel -= horz ? me.left : me.top;\n\n      if (offset) {\n        pixel -= valueDimension / 2;\n      }\n\n      if (pixel <= 0) {\n        value = 0;\n      } else {\n        value = Math.round(pixel / valueDimension);\n      }\n\n      return value + me.minIndex;\n    },\n    getBasePixel: function getBasePixel() {\n      return this.bottom;\n    }\n  }); // INTERNAL: static default options, registered in src/index.js\n\n  var _defaults = defaultConfig;\n  scale_category._defaults = _defaults;\n  var noop = helpers$1.noop;\n  var isNullOrUndef = helpers$1.isNullOrUndef;\n  /**\n   * Generate a set of linear ticks\n   * @param generationOptions the options used to generate the ticks\n   * @param dataRange the range of the data\n   * @returns {number[]} array of tick values\n   */\n\n  function generateTicks(generationOptions, dataRange) {\n    var ticks = []; // To get a \"nice\" value for the tick spacing, we will use the appropriately named\n    // \"nice number\" algorithm. See https://stackoverflow.com/questions/8506881/nice-label-algorithm-for-charts-with-minimum-ticks\n    // for details.\n\n    var MIN_SPACING = 1e-14;\n    var stepSize = generationOptions.stepSize;\n    var unit = stepSize || 1;\n    var maxNumSpaces = generationOptions.maxTicks - 1;\n    var min = generationOptions.min;\n    var max = generationOptions.max;\n    var precision = generationOptions.precision;\n    var rmin = dataRange.min;\n    var rmax = dataRange.max;\n    var spacing = helpers$1.niceNum((rmax - rmin) / maxNumSpaces / unit) * unit;\n    var factor, niceMin, niceMax, numSpaces; // Beyond MIN_SPACING floating point numbers being to lose precision\n    // such that we can't do the math necessary to generate ticks\n\n    if (spacing < MIN_SPACING && isNullOrUndef(min) && isNullOrUndef(max)) {\n      return [rmin, rmax];\n    }\n\n    numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n\n    if (numSpaces > maxNumSpaces) {\n      // If the calculated num of spaces exceeds maxNumSpaces, recalculate it\n      spacing = helpers$1.niceNum(numSpaces * spacing / maxNumSpaces / unit) * unit;\n    }\n\n    if (stepSize || isNullOrUndef(precision)) {\n      // If a precision is not specified, calculate factor based on spacing\n      factor = Math.pow(10, helpers$1._decimalPlaces(spacing));\n    } else {\n      // If the user specified a precision, round to that number of decimal places\n      factor = Math.pow(10, precision);\n      spacing = Math.ceil(spacing * factor) / factor;\n    }\n\n    niceMin = Math.floor(rmin / spacing) * spacing;\n    niceMax = Math.ceil(rmax / spacing) * spacing; // If min, max and stepSize is set and they make an evenly spaced scale use it.\n\n    if (stepSize) {\n      // If very close to our whole number, use it.\n      if (!isNullOrUndef(min) && helpers$1.almostWhole(min / spacing, spacing / 1000)) {\n        niceMin = min;\n      }\n\n      if (!isNullOrUndef(max) && helpers$1.almostWhole(max / spacing, spacing / 1000)) {\n        niceMax = max;\n      }\n    }\n\n    numSpaces = (niceMax - niceMin) / spacing; // If very close to our rounded value, use it.\n\n    if (helpers$1.almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n      numSpaces = Math.round(numSpaces);\n    } else {\n      numSpaces = Math.ceil(numSpaces);\n    }\n\n    niceMin = Math.round(niceMin * factor) / factor;\n    niceMax = Math.round(niceMax * factor) / factor;\n    ticks.push(isNullOrUndef(min) ? niceMin : min);\n\n    for (var j = 1; j < numSpaces; ++j) {\n      ticks.push(Math.round((niceMin + j * spacing) * factor) / factor);\n    }\n\n    ticks.push(isNullOrUndef(max) ? niceMax : max);\n    return ticks;\n  }\n\n  var scale_linearbase = core_scale.extend({\n    getRightValue: function getRightValue(value) {\n      if (typeof value === 'string') {\n        return +value;\n      }\n\n      return core_scale.prototype.getRightValue.call(this, value);\n    },\n    handleTickRangeOptions: function handleTickRangeOptions() {\n      var me = this;\n      var opts = me.options;\n      var tickOpts = opts.ticks; // If we are forcing it to begin at 0, but 0 will already be rendered on the chart,\n      // do nothing since that would make the chart weird. If the user really wants a weird chart\n      // axis, they can manually override it\n\n      if (tickOpts.beginAtZero) {\n        var minSign = helpers$1.sign(me.min);\n        var maxSign = helpers$1.sign(me.max);\n\n        if (minSign < 0 && maxSign < 0) {\n          // move the top up to 0\n          me.max = 0;\n        } else if (minSign > 0 && maxSign > 0) {\n          // move the bottom down to 0\n          me.min = 0;\n        }\n      }\n\n      var setMin = tickOpts.min !== undefined || tickOpts.suggestedMin !== undefined;\n      var setMax = tickOpts.max !== undefined || tickOpts.suggestedMax !== undefined;\n\n      if (tickOpts.min !== undefined) {\n        me.min = tickOpts.min;\n      } else if (tickOpts.suggestedMin !== undefined) {\n        if (me.min === null) {\n          me.min = tickOpts.suggestedMin;\n        } else {\n          me.min = Math.min(me.min, tickOpts.suggestedMin);\n        }\n      }\n\n      if (tickOpts.max !== undefined) {\n        me.max = tickOpts.max;\n      } else if (tickOpts.suggestedMax !== undefined) {\n        if (me.max === null) {\n          me.max = tickOpts.suggestedMax;\n        } else {\n          me.max = Math.max(me.max, tickOpts.suggestedMax);\n        }\n      }\n\n      if (setMin !== setMax) {\n        // We set the min or the max but not both.\n        // So ensure that our range is good\n        // Inverted or 0 length range can happen when\n        // ticks.min is set, and no datasets are visible\n        if (me.min >= me.max) {\n          if (setMin) {\n            me.max = me.min + 1;\n          } else {\n            me.min = me.max - 1;\n          }\n        }\n      }\n\n      if (me.min === me.max) {\n        me.max++;\n\n        if (!tickOpts.beginAtZero) {\n          me.min--;\n        }\n      }\n    },\n    getTickLimit: function getTickLimit() {\n      var me = this;\n      var tickOpts = me.options.ticks;\n      var stepSize = tickOpts.stepSize;\n      var maxTicksLimit = tickOpts.maxTicksLimit;\n      var maxTicks;\n\n      if (stepSize) {\n        maxTicks = Math.ceil(me.max / stepSize) - Math.floor(me.min / stepSize) + 1;\n      } else {\n        maxTicks = me._computeTickLimit();\n        maxTicksLimit = maxTicksLimit || 11;\n      }\n\n      if (maxTicksLimit) {\n        maxTicks = Math.min(maxTicksLimit, maxTicks);\n      }\n\n      return maxTicks;\n    },\n    _computeTickLimit: function _computeTickLimit() {\n      return Number.POSITIVE_INFINITY;\n    },\n    handleDirectionalChanges: noop,\n    buildTicks: function buildTicks() {\n      var me = this;\n      var opts = me.options;\n      var tickOpts = opts.ticks; // Figure out what the max number of ticks we can support it is based on the size of\n      // the axis area. For now, we say that the minimum tick spacing in pixels must be 40\n      // We also limit the maximum number of ticks to 11 which gives a nice 10 squares on\n      // the graph. Make sure we always have at least 2 ticks\n\n      var maxTicks = me.getTickLimit();\n      maxTicks = Math.max(2, maxTicks);\n      var numericGeneratorOptions = {\n        maxTicks: maxTicks,\n        min: tickOpts.min,\n        max: tickOpts.max,\n        precision: tickOpts.precision,\n        stepSize: helpers$1.valueOrDefault(tickOpts.fixedStepSize, tickOpts.stepSize)\n      };\n      var ticks = me.ticks = generateTicks(numericGeneratorOptions, me);\n      me.handleDirectionalChanges(); // At this point, we need to update our max and min given the tick values since we have expanded the\n      // range of the scale\n\n      me.max = helpers$1.max(ticks);\n      me.min = helpers$1.min(ticks);\n\n      if (tickOpts.reverse) {\n        ticks.reverse();\n        me.start = me.max;\n        me.end = me.min;\n      } else {\n        me.start = me.min;\n        me.end = me.max;\n      }\n    },\n    convertTicksToLabels: function convertTicksToLabels() {\n      var me = this;\n      me.ticksAsNumbers = me.ticks.slice();\n      me.zeroLineIndex = me.ticks.indexOf(0);\n      core_scale.prototype.convertTicksToLabels.call(me);\n    }\n  });\n  var defaultConfig$1 = {\n    position: 'left',\n    ticks: {\n      callback: core_ticks.formatters.linear\n    }\n  };\n  var scale_linear = scale_linearbase.extend({\n    determineDataLimits: function determineDataLimits() {\n      var me = this;\n      var opts = me.options;\n      var chart = me.chart;\n      var data = chart.data;\n      var datasets = data.datasets;\n      var isHorizontal = me.isHorizontal();\n      var DEFAULT_MIN = 0;\n      var DEFAULT_MAX = 1;\n\n      function IDMatches(meta) {\n        return isHorizontal ? meta.xAxisID === me.id : meta.yAxisID === me.id;\n      } // First Calculate the range\n\n\n      me.min = null;\n      me.max = null;\n      var hasStacks = opts.stacked;\n\n      if (hasStacks === undefined) {\n        helpers$1.each(datasets, function (dataset, datasetIndex) {\n          if (hasStacks) {\n            return;\n          }\n\n          var meta = chart.getDatasetMeta(datasetIndex);\n\n          if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta) && meta.stack !== undefined) {\n            hasStacks = true;\n          }\n        });\n      }\n\n      if (opts.stacked || hasStacks) {\n        var valuesPerStack = {};\n        helpers$1.each(datasets, function (dataset, datasetIndex) {\n          var meta = chart.getDatasetMeta(datasetIndex);\n          var key = [meta.type, // we have a separate stack for stack=undefined datasets when the opts.stacked is undefined\n          opts.stacked === undefined && meta.stack === undefined ? datasetIndex : '', meta.stack].join('.');\n\n          if (valuesPerStack[key] === undefined) {\n            valuesPerStack[key] = {\n              positiveValues: [],\n              negativeValues: []\n            };\n          } // Store these per type\n\n\n          var positiveValues = valuesPerStack[key].positiveValues;\n          var negativeValues = valuesPerStack[key].negativeValues;\n\n          if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\n            helpers$1.each(dataset.data, function (rawValue, index) {\n              var value = +me.getRightValue(rawValue);\n\n              if (isNaN(value) || meta.data[index].hidden) {\n                return;\n              }\n\n              positiveValues[index] = positiveValues[index] || 0;\n              negativeValues[index] = negativeValues[index] || 0;\n\n              if (opts.relativePoints) {\n                positiveValues[index] = 100;\n              } else if (value < 0) {\n                negativeValues[index] += value;\n              } else {\n                positiveValues[index] += value;\n              }\n            });\n          }\n        });\n        helpers$1.each(valuesPerStack, function (valuesForType) {\n          var values = valuesForType.positiveValues.concat(valuesForType.negativeValues);\n          var minVal = helpers$1.min(values);\n          var maxVal = helpers$1.max(values);\n          me.min = me.min === null ? minVal : Math.min(me.min, minVal);\n          me.max = me.max === null ? maxVal : Math.max(me.max, maxVal);\n        });\n      } else {\n        helpers$1.each(datasets, function (dataset, datasetIndex) {\n          var meta = chart.getDatasetMeta(datasetIndex);\n\n          if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\n            helpers$1.each(dataset.data, function (rawValue, index) {\n              var value = +me.getRightValue(rawValue);\n\n              if (isNaN(value) || meta.data[index].hidden) {\n                return;\n              }\n\n              if (me.min === null) {\n                me.min = value;\n              } else if (value < me.min) {\n                me.min = value;\n              }\n\n              if (me.max === null) {\n                me.max = value;\n              } else if (value > me.max) {\n                me.max = value;\n              }\n            });\n          }\n        });\n      }\n\n      me.min = isFinite(me.min) && !isNaN(me.min) ? me.min : DEFAULT_MIN;\n      me.max = isFinite(me.max) && !isNaN(me.max) ? me.max : DEFAULT_MAX; // Common base implementation to handle ticks.min, ticks.max, ticks.beginAtZero\n\n      this.handleTickRangeOptions();\n    },\n    // Returns the maximum number of ticks based on the scale dimension\n    _computeTickLimit: function _computeTickLimit() {\n      var me = this;\n      var tickFont;\n\n      if (me.isHorizontal()) {\n        return Math.ceil(me.width / 40);\n      }\n\n      tickFont = helpers$1.options._parseFont(me.options.ticks);\n      return Math.ceil(me.height / tickFont.lineHeight);\n    },\n    // Called after the ticks are built. We need\n    handleDirectionalChanges: function handleDirectionalChanges() {\n      if (!this.isHorizontal()) {\n        // We are in a vertical orientation. The top value is the highest. So reverse the array\n        this.ticks.reverse();\n      }\n    },\n    getLabelForIndex: function getLabelForIndex(index, datasetIndex) {\n      return +this.getRightValue(this.chart.data.datasets[datasetIndex].data[index]);\n    },\n    // Utils\n    getPixelForValue: function getPixelForValue(value) {\n      // This must be called after fit has been run so that\n      // this.left, this.top, this.right, and this.bottom have been defined\n      var me = this;\n      var start = me.start;\n      var rightValue = +me.getRightValue(value);\n      var pixel;\n      var range = me.end - start;\n\n      if (me.isHorizontal()) {\n        pixel = me.left + me.width / range * (rightValue - start);\n      } else {\n        pixel = me.bottom - me.height / range * (rightValue - start);\n      }\n\n      return pixel;\n    },\n    getValueForPixel: function getValueForPixel(pixel) {\n      var me = this;\n      var isHorizontal = me.isHorizontal();\n      var innerDimension = isHorizontal ? me.width : me.height;\n      var offset = (isHorizontal ? pixel - me.left : me.bottom - pixel) / innerDimension;\n      return me.start + (me.end - me.start) * offset;\n    },\n    getPixelForTick: function getPixelForTick(index) {\n      return this.getPixelForValue(this.ticksAsNumbers[index]);\n    }\n  }); // INTERNAL: static default options, registered in src/index.js\n\n  var _defaults$1 = defaultConfig$1;\n  scale_linear._defaults = _defaults$1;\n  var valueOrDefault$a = helpers$1.valueOrDefault;\n  /**\n   * Generate a set of logarithmic ticks\n   * @param generationOptions the options used to generate the ticks\n   * @param dataRange the range of the data\n   * @returns {number[]} array of tick values\n   */\n\n  function generateTicks$1(generationOptions, dataRange) {\n    var ticks = [];\n    var tickVal = valueOrDefault$a(generationOptions.min, Math.pow(10, Math.floor(helpers$1.log10(dataRange.min))));\n    var endExp = Math.floor(helpers$1.log10(dataRange.max));\n    var endSignificand = Math.ceil(dataRange.max / Math.pow(10, endExp));\n    var exp, significand;\n\n    if (tickVal === 0) {\n      exp = Math.floor(helpers$1.log10(dataRange.minNotZero));\n      significand = Math.floor(dataRange.minNotZero / Math.pow(10, exp));\n      ticks.push(tickVal);\n      tickVal = significand * Math.pow(10, exp);\n    } else {\n      exp = Math.floor(helpers$1.log10(tickVal));\n      significand = Math.floor(tickVal / Math.pow(10, exp));\n    }\n\n    var precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n\n    do {\n      ticks.push(tickVal);\n      ++significand;\n\n      if (significand === 10) {\n        significand = 1;\n        ++exp;\n        precision = exp >= 0 ? 1 : precision;\n      }\n\n      tickVal = Math.round(significand * Math.pow(10, exp) * precision) / precision;\n    } while (exp < endExp || exp === endExp && significand < endSignificand);\n\n    var lastTick = valueOrDefault$a(generationOptions.max, tickVal);\n    ticks.push(lastTick);\n    return ticks;\n  }\n\n  var defaultConfig$2 = {\n    position: 'left',\n    // label settings\n    ticks: {\n      callback: core_ticks.formatters.logarithmic\n    }\n  }; // TODO(v3): change this to positiveOrDefault\n\n  function nonNegativeOrDefault(value, defaultValue) {\n    return helpers$1.isFinite(value) && value >= 0 ? value : defaultValue;\n  }\n\n  var scale_logarithmic = core_scale.extend({\n    determineDataLimits: function determineDataLimits() {\n      var me = this;\n      var opts = me.options;\n      var chart = me.chart;\n      var data = chart.data;\n      var datasets = data.datasets;\n      var isHorizontal = me.isHorizontal();\n\n      function IDMatches(meta) {\n        return isHorizontal ? meta.xAxisID === me.id : meta.yAxisID === me.id;\n      } // Calculate Range\n\n\n      me.min = null;\n      me.max = null;\n      me.minNotZero = null;\n      var hasStacks = opts.stacked;\n\n      if (hasStacks === undefined) {\n        helpers$1.each(datasets, function (dataset, datasetIndex) {\n          if (hasStacks) {\n            return;\n          }\n\n          var meta = chart.getDatasetMeta(datasetIndex);\n\n          if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta) && meta.stack !== undefined) {\n            hasStacks = true;\n          }\n        });\n      }\n\n      if (opts.stacked || hasStacks) {\n        var valuesPerStack = {};\n        helpers$1.each(datasets, function (dataset, datasetIndex) {\n          var meta = chart.getDatasetMeta(datasetIndex);\n          var key = [meta.type, // we have a separate stack for stack=undefined datasets when the opts.stacked is undefined\n          opts.stacked === undefined && meta.stack === undefined ? datasetIndex : '', meta.stack].join('.');\n\n          if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\n            if (valuesPerStack[key] === undefined) {\n              valuesPerStack[key] = [];\n            }\n\n            helpers$1.each(dataset.data, function (rawValue, index) {\n              var values = valuesPerStack[key];\n              var value = +me.getRightValue(rawValue); // invalid, hidden and negative values are ignored\n\n              if (isNaN(value) || meta.data[index].hidden || value < 0) {\n                return;\n              }\n\n              values[index] = values[index] || 0;\n              values[index] += value;\n            });\n          }\n        });\n        helpers$1.each(valuesPerStack, function (valuesForType) {\n          if (valuesForType.length > 0) {\n            var minVal = helpers$1.min(valuesForType);\n            var maxVal = helpers$1.max(valuesForType);\n            me.min = me.min === null ? minVal : Math.min(me.min, minVal);\n            me.max = me.max === null ? maxVal : Math.max(me.max, maxVal);\n          }\n        });\n      } else {\n        helpers$1.each(datasets, function (dataset, datasetIndex) {\n          var meta = chart.getDatasetMeta(datasetIndex);\n\n          if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\n            helpers$1.each(dataset.data, function (rawValue, index) {\n              var value = +me.getRightValue(rawValue); // invalid, hidden and negative values are ignored\n\n              if (isNaN(value) || meta.data[index].hidden || value < 0) {\n                return;\n              }\n\n              if (me.min === null) {\n                me.min = value;\n              } else if (value < me.min) {\n                me.min = value;\n              }\n\n              if (me.max === null) {\n                me.max = value;\n              } else if (value > me.max) {\n                me.max = value;\n              }\n\n              if (value !== 0 && (me.minNotZero === null || value < me.minNotZero)) {\n                me.minNotZero = value;\n              }\n            });\n          }\n        });\n      } // Common base implementation to handle ticks.min, ticks.max\n\n\n      this.handleTickRangeOptions();\n    },\n    handleTickRangeOptions: function handleTickRangeOptions() {\n      var me = this;\n      var tickOpts = me.options.ticks;\n      var DEFAULT_MIN = 1;\n      var DEFAULT_MAX = 10;\n      me.min = nonNegativeOrDefault(tickOpts.min, me.min);\n      me.max = nonNegativeOrDefault(tickOpts.max, me.max);\n\n      if (me.min === me.max) {\n        if (me.min !== 0 && me.min !== null) {\n          me.min = Math.pow(10, Math.floor(helpers$1.log10(me.min)) - 1);\n          me.max = Math.pow(10, Math.floor(helpers$1.log10(me.max)) + 1);\n        } else {\n          me.min = DEFAULT_MIN;\n          me.max = DEFAULT_MAX;\n        }\n      }\n\n      if (me.min === null) {\n        me.min = Math.pow(10, Math.floor(helpers$1.log10(me.max)) - 1);\n      }\n\n      if (me.max === null) {\n        me.max = me.min !== 0 ? Math.pow(10, Math.floor(helpers$1.log10(me.min)) + 1) : DEFAULT_MAX;\n      }\n\n      if (me.minNotZero === null) {\n        if (me.min > 0) {\n          me.minNotZero = me.min;\n        } else if (me.max < 1) {\n          me.minNotZero = Math.pow(10, Math.floor(helpers$1.log10(me.max)));\n        } else {\n          me.minNotZero = DEFAULT_MIN;\n        }\n      }\n    },\n    buildTicks: function buildTicks() {\n      var me = this;\n      var tickOpts = me.options.ticks;\n      var reverse = !me.isHorizontal();\n      var generationOptions = {\n        min: nonNegativeOrDefault(tickOpts.min),\n        max: nonNegativeOrDefault(tickOpts.max)\n      };\n      var ticks = me.ticks = generateTicks$1(generationOptions, me); // At this point, we need to update our max and min given the tick values since we have expanded the\n      // range of the scale\n\n      me.max = helpers$1.max(ticks);\n      me.min = helpers$1.min(ticks);\n\n      if (tickOpts.reverse) {\n        reverse = !reverse;\n        me.start = me.max;\n        me.end = me.min;\n      } else {\n        me.start = me.min;\n        me.end = me.max;\n      }\n\n      if (reverse) {\n        ticks.reverse();\n      }\n    },\n    convertTicksToLabels: function convertTicksToLabels() {\n      this.tickValues = this.ticks.slice();\n      core_scale.prototype.convertTicksToLabels.call(this);\n    },\n    // Get the correct tooltip label\n    getLabelForIndex: function getLabelForIndex(index, datasetIndex) {\n      return +this.getRightValue(this.chart.data.datasets[datasetIndex].data[index]);\n    },\n    getPixelForTick: function getPixelForTick(index) {\n      return this.getPixelForValue(this.tickValues[index]);\n    },\n\n    /**\n     * Returns the value of the first tick.\n     * @param {number} value - The minimum not zero value.\n     * @return {number} The first tick value.\n     * @private\n     */\n    _getFirstTickValue: function _getFirstTickValue(value) {\n      var exp = Math.floor(helpers$1.log10(value));\n      var significand = Math.floor(value / Math.pow(10, exp));\n      return significand * Math.pow(10, exp);\n    },\n    getPixelForValue: function getPixelForValue(value) {\n      var me = this;\n      var tickOpts = me.options.ticks;\n      var reverse = tickOpts.reverse;\n      var log10 = helpers$1.log10;\n\n      var firstTickValue = me._getFirstTickValue(me.minNotZero);\n\n      var offset = 0;\n      var innerDimension, pixel, start, end, sign;\n      value = +me.getRightValue(value);\n\n      if (reverse) {\n        start = me.end;\n        end = me.start;\n        sign = -1;\n      } else {\n        start = me.start;\n        end = me.end;\n        sign = 1;\n      }\n\n      if (me.isHorizontal()) {\n        innerDimension = me.width;\n        pixel = reverse ? me.right : me.left;\n      } else {\n        innerDimension = me.height;\n        sign *= -1; // invert, since the upper-left corner of the canvas is at pixel (0, 0)\n\n        pixel = reverse ? me.top : me.bottom;\n      }\n\n      if (value !== start) {\n        if (start === 0) {\n          // include zero tick\n          offset = valueOrDefault$a(tickOpts.fontSize, core_defaults.global.defaultFontSize);\n          innerDimension -= offset;\n          start = firstTickValue;\n        }\n\n        if (value !== 0) {\n          offset += innerDimension / (log10(end) - log10(start)) * (log10(value) - log10(start));\n        }\n\n        pixel += sign * offset;\n      }\n\n      return pixel;\n    },\n    getValueForPixel: function getValueForPixel(pixel) {\n      var me = this;\n      var tickOpts = me.options.ticks;\n      var reverse = tickOpts.reverse;\n      var log10 = helpers$1.log10;\n\n      var firstTickValue = me._getFirstTickValue(me.minNotZero);\n\n      var innerDimension, start, end, value;\n\n      if (reverse) {\n        start = me.end;\n        end = me.start;\n      } else {\n        start = me.start;\n        end = me.end;\n      }\n\n      if (me.isHorizontal()) {\n        innerDimension = me.width;\n        value = reverse ? me.right - pixel : pixel - me.left;\n      } else {\n        innerDimension = me.height;\n        value = reverse ? pixel - me.top : me.bottom - pixel;\n      }\n\n      if (value !== start) {\n        if (start === 0) {\n          // include zero tick\n          var offset = valueOrDefault$a(tickOpts.fontSize, core_defaults.global.defaultFontSize);\n          value -= offset;\n          innerDimension -= offset;\n          start = firstTickValue;\n        }\n\n        value *= log10(end) - log10(start);\n        value /= innerDimension;\n        value = Math.pow(10, log10(start) + value);\n      }\n\n      return value;\n    }\n  }); // INTERNAL: static default options, registered in src/index.js\n\n  var _defaults$2 = defaultConfig$2;\n  scale_logarithmic._defaults = _defaults$2;\n  var valueOrDefault$b = helpers$1.valueOrDefault;\n  var valueAtIndexOrDefault$1 = helpers$1.valueAtIndexOrDefault;\n  var resolve$7 = helpers$1.options.resolve;\n  var defaultConfig$3 = {\n    display: true,\n    // Boolean - Whether to animate scaling the chart from the centre\n    animate: true,\n    position: 'chartArea',\n    angleLines: {\n      display: true,\n      color: 'rgba(0, 0, 0, 0.1)',\n      lineWidth: 1,\n      borderDash: [],\n      borderDashOffset: 0.0\n    },\n    gridLines: {\n      circular: false\n    },\n    // label settings\n    ticks: {\n      // Boolean - Show a backdrop to the scale label\n      showLabelBackdrop: true,\n      // String - The colour of the label backdrop\n      backdropColor: 'rgba(255,255,255,0.75)',\n      // Number - The backdrop padding above & below the label in pixels\n      backdropPaddingY: 2,\n      // Number - The backdrop padding to the side of the label in pixels\n      backdropPaddingX: 2,\n      callback: core_ticks.formatters.linear\n    },\n    pointLabels: {\n      // Boolean - if true, show point labels\n      display: true,\n      // Number - Point label font size in pixels\n      fontSize: 10,\n      // Function - Used to convert point labels\n      callback: function callback(label) {\n        return label;\n      }\n    }\n  };\n\n  function getValueCount(scale) {\n    var opts = scale.options;\n    return opts.angleLines.display || opts.pointLabels.display ? scale.chart.data.labels.length : 0;\n  }\n\n  function getTickBackdropHeight(opts) {\n    var tickOpts = opts.ticks;\n\n    if (tickOpts.display && opts.display) {\n      return valueOrDefault$b(tickOpts.fontSize, core_defaults.global.defaultFontSize) + tickOpts.backdropPaddingY * 2;\n    }\n\n    return 0;\n  }\n\n  function measureLabelSize(ctx, lineHeight, label) {\n    if (helpers$1.isArray(label)) {\n      return {\n        w: helpers$1.longestText(ctx, ctx.font, label),\n        h: label.length * lineHeight\n      };\n    }\n\n    return {\n      w: ctx.measureText(label).width,\n      h: lineHeight\n    };\n  }\n\n  function determineLimits(angle, pos, size, min, max) {\n    if (angle === min || angle === max) {\n      return {\n        start: pos - size / 2,\n        end: pos + size / 2\n      };\n    } else if (angle < min || angle > max) {\n      return {\n        start: pos - size,\n        end: pos\n      };\n    }\n\n    return {\n      start: pos,\n      end: pos + size\n    };\n  }\n  /**\n   * Helper function to fit a radial linear scale with point labels\n   */\n\n\n  function fitWithPointLabels(scale) {\n    // Right, this is really confusing and there is a lot of maths going on here\n    // The gist of the problem is here: https://gist.github.com/nnnick/696cc9c55f4b0beb8fe9\n    //\n    // Reaction: https://dl.dropboxusercontent.com/u/34601363/toomuchscience.gif\n    //\n    // Solution:\n    //\n    // We assume the radius of the polygon is half the size of the canvas at first\n    // at each index we check if the text overlaps.\n    //\n    // Where it does, we store that angle and that index.\n    //\n    // After finding the largest index and angle we calculate how much we need to remove\n    // from the shape radius to move the point inwards by that x.\n    //\n    // We average the left and right distances to get the maximum shape radius that can fit in the box\n    // along with labels.\n    //\n    // Once we have that, we can find the centre point for the chart, by taking the x text protrusion\n    // on each side, removing that from the size, halving it and adding the left x protrusion width.\n    //\n    // This will mean we have a shape fitted to the canvas, as large as it can be with the labels\n    // and position it in the most space efficient manner\n    //\n    // https://dl.dropboxusercontent.com/u/34601363/yeahscience.gif\n    var plFont = helpers$1.options._parseFont(scale.options.pointLabels); // Get maximum radius of the polygon. Either half the height (minus the text width) or half the width.\n    // Use this to calculate the offset + change. - Make sure L/R protrusion is at least 0 to stop issues with centre points\n\n\n    var furthestLimits = {\n      l: 0,\n      r: scale.width,\n      t: 0,\n      b: scale.height - scale.paddingTop\n    };\n    var furthestAngles = {};\n    var i, textSize, pointPosition;\n    scale.ctx.font = plFont.string;\n    scale._pointLabelSizes = [];\n    var valueCount = getValueCount(scale);\n\n    for (i = 0; i < valueCount; i++) {\n      pointPosition = scale.getPointPosition(i, scale.drawingArea + 5);\n      textSize = measureLabelSize(scale.ctx, plFont.lineHeight, scale.pointLabels[i] || '');\n      scale._pointLabelSizes[i] = textSize; // Add quarter circle to make degree 0 mean top of circle\n\n      var angleRadians = scale.getIndexAngle(i);\n      var angle = helpers$1.toDegrees(angleRadians) % 360;\n      var hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n      var vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n\n      if (hLimits.start < furthestLimits.l) {\n        furthestLimits.l = hLimits.start;\n        furthestAngles.l = angleRadians;\n      }\n\n      if (hLimits.end > furthestLimits.r) {\n        furthestLimits.r = hLimits.end;\n        furthestAngles.r = angleRadians;\n      }\n\n      if (vLimits.start < furthestLimits.t) {\n        furthestLimits.t = vLimits.start;\n        furthestAngles.t = angleRadians;\n      }\n\n      if (vLimits.end > furthestLimits.b) {\n        furthestLimits.b = vLimits.end;\n        furthestAngles.b = angleRadians;\n      }\n    }\n\n    scale.setReductions(scale.drawingArea, furthestLimits, furthestAngles);\n  }\n\n  function getTextAlignForAngle(angle) {\n    if (angle === 0 || angle === 180) {\n      return 'center';\n    } else if (angle < 180) {\n      return 'left';\n    }\n\n    return 'right';\n  }\n\n  function fillText(ctx, text, position, lineHeight) {\n    var y = position.y + lineHeight / 2;\n    var i, ilen;\n\n    if (helpers$1.isArray(text)) {\n      for (i = 0, ilen = text.length; i < ilen; ++i) {\n        ctx.fillText(text[i], position.x, y);\n        y += lineHeight;\n      }\n    } else {\n      ctx.fillText(text, position.x, y);\n    }\n  }\n\n  function adjustPointPositionForLabelHeight(angle, textSize, position) {\n    if (angle === 90 || angle === 270) {\n      position.y -= textSize.h / 2;\n    } else if (angle > 270 || angle < 90) {\n      position.y -= textSize.h;\n    }\n  }\n\n  function drawPointLabels(scale) {\n    var ctx = scale.ctx;\n    var opts = scale.options;\n    var angleLineOpts = opts.angleLines;\n    var gridLineOpts = opts.gridLines;\n    var pointLabelOpts = opts.pointLabels;\n    var lineWidth = valueOrDefault$b(angleLineOpts.lineWidth, gridLineOpts.lineWidth);\n    var lineColor = valueOrDefault$b(angleLineOpts.color, gridLineOpts.color);\n    var tickBackdropHeight = getTickBackdropHeight(opts);\n    ctx.save();\n    ctx.lineWidth = lineWidth;\n    ctx.strokeStyle = lineColor;\n\n    if (ctx.setLineDash) {\n      ctx.setLineDash(resolve$7([angleLineOpts.borderDash, gridLineOpts.borderDash, []]));\n      ctx.lineDashOffset = resolve$7([angleLineOpts.borderDashOffset, gridLineOpts.borderDashOffset, 0.0]);\n    }\n\n    var outerDistance = scale.getDistanceFromCenterForValue(opts.ticks.reverse ? scale.min : scale.max); // Point Label Font\n\n    var plFont = helpers$1.options._parseFont(pointLabelOpts);\n\n    ctx.font = plFont.string;\n    ctx.textBaseline = 'middle';\n\n    for (var i = getValueCount(scale) - 1; i >= 0; i--) {\n      if (angleLineOpts.display && lineWidth && lineColor) {\n        var outerPosition = scale.getPointPosition(i, outerDistance);\n        ctx.beginPath();\n        ctx.moveTo(scale.xCenter, scale.yCenter);\n        ctx.lineTo(outerPosition.x, outerPosition.y);\n        ctx.stroke();\n      }\n\n      if (pointLabelOpts.display) {\n        // Extra pixels out for some label spacing\n        var extra = i === 0 ? tickBackdropHeight / 2 : 0;\n        var pointLabelPosition = scale.getPointPosition(i, outerDistance + extra + 5); // Keep this in loop since we may support array properties here\n\n        var pointLabelFontColor = valueAtIndexOrDefault$1(pointLabelOpts.fontColor, i, core_defaults.global.defaultFontColor);\n        ctx.fillStyle = pointLabelFontColor;\n        var angleRadians = scale.getIndexAngle(i);\n        var angle = helpers$1.toDegrees(angleRadians);\n        ctx.textAlign = getTextAlignForAngle(angle);\n        adjustPointPositionForLabelHeight(angle, scale._pointLabelSizes[i], pointLabelPosition);\n        fillText(ctx, scale.pointLabels[i] || '', pointLabelPosition, plFont.lineHeight);\n      }\n    }\n\n    ctx.restore();\n  }\n\n  function drawRadiusLine(scale, gridLineOpts, radius, index) {\n    var ctx = scale.ctx;\n    var circular = gridLineOpts.circular;\n    var valueCount = getValueCount(scale);\n    var lineColor = valueAtIndexOrDefault$1(gridLineOpts.color, index - 1);\n    var lineWidth = valueAtIndexOrDefault$1(gridLineOpts.lineWidth, index - 1);\n    var pointPosition;\n\n    if (!circular && !valueCount || !lineColor || !lineWidth) {\n      return;\n    }\n\n    ctx.save();\n    ctx.strokeStyle = lineColor;\n    ctx.lineWidth = lineWidth;\n\n    if (ctx.setLineDash) {\n      ctx.setLineDash(gridLineOpts.borderDash || []);\n      ctx.lineDashOffset = gridLineOpts.borderDashOffset || 0.0;\n    }\n\n    ctx.beginPath();\n\n    if (circular) {\n      // Draw circular arcs between the points\n      ctx.arc(scale.xCenter, scale.yCenter, radius, 0, Math.PI * 2);\n    } else {\n      // Draw straight lines connecting each index\n      pointPosition = scale.getPointPosition(0, radius);\n      ctx.moveTo(pointPosition.x, pointPosition.y);\n\n      for (var i = 1; i < valueCount; i++) {\n        pointPosition = scale.getPointPosition(i, radius);\n        ctx.lineTo(pointPosition.x, pointPosition.y);\n      }\n    }\n\n    ctx.closePath();\n    ctx.stroke();\n    ctx.restore();\n  }\n\n  function numberOrZero(param) {\n    return helpers$1.isNumber(param) ? param : 0;\n  }\n\n  var scale_radialLinear = scale_linearbase.extend({\n    setDimensions: function setDimensions() {\n      var me = this; // Set the unconstrained dimension before label rotation\n\n      me.width = me.maxWidth;\n      me.height = me.maxHeight;\n      me.paddingTop = getTickBackdropHeight(me.options) / 2;\n      me.xCenter = Math.floor(me.width / 2);\n      me.yCenter = Math.floor((me.height - me.paddingTop) / 2);\n      me.drawingArea = Math.min(me.height - me.paddingTop, me.width) / 2;\n    },\n    determineDataLimits: function determineDataLimits() {\n      var me = this;\n      var chart = me.chart;\n      var min = Number.POSITIVE_INFINITY;\n      var max = Number.NEGATIVE_INFINITY;\n      helpers$1.each(chart.data.datasets, function (dataset, datasetIndex) {\n        if (chart.isDatasetVisible(datasetIndex)) {\n          var meta = chart.getDatasetMeta(datasetIndex);\n          helpers$1.each(dataset.data, function (rawValue, index) {\n            var value = +me.getRightValue(rawValue);\n\n            if (isNaN(value) || meta.data[index].hidden) {\n              return;\n            }\n\n            min = Math.min(value, min);\n            max = Math.max(value, max);\n          });\n        }\n      });\n      me.min = min === Number.POSITIVE_INFINITY ? 0 : min;\n      me.max = max === Number.NEGATIVE_INFINITY ? 0 : max; // Common base implementation to handle ticks.min, ticks.max, ticks.beginAtZero\n\n      me.handleTickRangeOptions();\n    },\n    // Returns the maximum number of ticks based on the scale dimension\n    _computeTickLimit: function _computeTickLimit() {\n      return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n    },\n    convertTicksToLabels: function convertTicksToLabels() {\n      var me = this;\n      scale_linearbase.prototype.convertTicksToLabels.call(me); // Point labels\n\n      me.pointLabels = me.chart.data.labels.map(me.options.pointLabels.callback, me);\n    },\n    getLabelForIndex: function getLabelForIndex(index, datasetIndex) {\n      return +this.getRightValue(this.chart.data.datasets[datasetIndex].data[index]);\n    },\n    fit: function fit() {\n      var me = this;\n      var opts = me.options;\n\n      if (opts.display && opts.pointLabels.display) {\n        fitWithPointLabels(me);\n      } else {\n        me.setCenterPoint(0, 0, 0, 0);\n      }\n    },\n\n    /**\n     * Set radius reductions and determine new radius and center point\n     * @private\n     */\n    setReductions: function setReductions(largestPossibleRadius, furthestLimits, furthestAngles) {\n      var me = this;\n      var radiusReductionLeft = furthestLimits.l / Math.sin(furthestAngles.l);\n      var radiusReductionRight = Math.max(furthestLimits.r - me.width, 0) / Math.sin(furthestAngles.r);\n      var radiusReductionTop = -furthestLimits.t / Math.cos(furthestAngles.t);\n      var radiusReductionBottom = -Math.max(furthestLimits.b - (me.height - me.paddingTop), 0) / Math.cos(furthestAngles.b);\n      radiusReductionLeft = numberOrZero(radiusReductionLeft);\n      radiusReductionRight = numberOrZero(radiusReductionRight);\n      radiusReductionTop = numberOrZero(radiusReductionTop);\n      radiusReductionBottom = numberOrZero(radiusReductionBottom);\n      me.drawingArea = Math.min(Math.floor(largestPossibleRadius - (radiusReductionLeft + radiusReductionRight) / 2), Math.floor(largestPossibleRadius - (radiusReductionTop + radiusReductionBottom) / 2));\n      me.setCenterPoint(radiusReductionLeft, radiusReductionRight, radiusReductionTop, radiusReductionBottom);\n    },\n    setCenterPoint: function setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n      var me = this;\n      var maxRight = me.width - rightMovement - me.drawingArea;\n      var maxLeft = leftMovement + me.drawingArea;\n      var maxTop = topMovement + me.drawingArea;\n      var maxBottom = me.height - me.paddingTop - bottomMovement - me.drawingArea;\n      me.xCenter = Math.floor((maxLeft + maxRight) / 2 + me.left);\n      me.yCenter = Math.floor((maxTop + maxBottom) / 2 + me.top + me.paddingTop);\n    },\n    getIndexAngle: function getIndexAngle(index) {\n      var angleMultiplier = Math.PI * 2 / getValueCount(this);\n      var startAngle = this.chart.options && this.chart.options.startAngle ? this.chart.options.startAngle : 0;\n      var startAngleRadians = startAngle * Math.PI * 2 / 360; // Start from the top instead of right, so remove a quarter of the circle\n\n      return index * angleMultiplier + startAngleRadians;\n    },\n    getDistanceFromCenterForValue: function getDistanceFromCenterForValue(value) {\n      var me = this;\n\n      if (value === null) {\n        return 0; // null always in center\n      } // Take into account half font size + the yPadding of the top value\n\n\n      var scalingFactor = me.drawingArea / (me.max - me.min);\n\n      if (me.options.ticks.reverse) {\n        return (me.max - value) * scalingFactor;\n      }\n\n      return (value - me.min) * scalingFactor;\n    },\n    getPointPosition: function getPointPosition(index, distanceFromCenter) {\n      var me = this;\n      var thisAngle = me.getIndexAngle(index) - Math.PI / 2;\n      return {\n        x: Math.cos(thisAngle) * distanceFromCenter + me.xCenter,\n        y: Math.sin(thisAngle) * distanceFromCenter + me.yCenter\n      };\n    },\n    getPointPositionForValue: function getPointPositionForValue(index, value) {\n      return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n    },\n    getBasePosition: function getBasePosition() {\n      var me = this;\n      var min = me.min;\n      var max = me.max;\n      return me.getPointPositionForValue(0, me.beginAtZero ? 0 : min < 0 && max < 0 ? max : min > 0 && max > 0 ? min : 0);\n    },\n    draw: function draw() {\n      var me = this;\n      var opts = me.options;\n      var gridLineOpts = opts.gridLines;\n      var tickOpts = opts.ticks;\n\n      if (opts.display) {\n        var ctx = me.ctx;\n        var startAngle = this.getIndexAngle(0);\n\n        var tickFont = helpers$1.options._parseFont(tickOpts);\n\n        if (opts.angleLines.display || opts.pointLabels.display) {\n          drawPointLabels(me);\n        }\n\n        helpers$1.each(me.ticks, function (label, index) {\n          // Don't draw a centre value (if it is minimum)\n          if (index > 0 || tickOpts.reverse) {\n            var yCenterOffset = me.getDistanceFromCenterForValue(me.ticksAsNumbers[index]); // Draw circular lines around the scale\n\n            if (gridLineOpts.display && index !== 0) {\n              drawRadiusLine(me, gridLineOpts, yCenterOffset, index);\n            }\n\n            if (tickOpts.display) {\n              var tickFontColor = valueOrDefault$b(tickOpts.fontColor, core_defaults.global.defaultFontColor);\n              ctx.font = tickFont.string;\n              ctx.save();\n              ctx.translate(me.xCenter, me.yCenter);\n              ctx.rotate(startAngle);\n\n              if (tickOpts.showLabelBackdrop) {\n                var labelWidth = ctx.measureText(label).width;\n                ctx.fillStyle = tickOpts.backdropColor;\n                ctx.fillRect(-labelWidth / 2 - tickOpts.backdropPaddingX, -yCenterOffset - tickFont.size / 2 - tickOpts.backdropPaddingY, labelWidth + tickOpts.backdropPaddingX * 2, tickFont.size + tickOpts.backdropPaddingY * 2);\n              }\n\n              ctx.textAlign = 'center';\n              ctx.textBaseline = 'middle';\n              ctx.fillStyle = tickFontColor;\n              ctx.fillText(label, 0, -yCenterOffset);\n              ctx.restore();\n            }\n          }\n        });\n      }\n    }\n  }); // INTERNAL: static default options, registered in src/index.js\n\n  var _defaults$3 = defaultConfig$3;\n  scale_radialLinear._defaults = _defaults$3;\n  var valueOrDefault$c = helpers$1.valueOrDefault; // Integer constants are from the ES6 spec.\n\n  var MIN_INTEGER = Number.MIN_SAFE_INTEGER || -9007199254740991;\n  var MAX_INTEGER = Number.MAX_SAFE_INTEGER || 9007199254740991;\n  var INTERVALS = {\n    millisecond: {\n      common: true,\n      size: 1,\n      steps: [1, 2, 5, 10, 20, 50, 100, 250, 500]\n    },\n    second: {\n      common: true,\n      size: 1000,\n      steps: [1, 2, 5, 10, 15, 30]\n    },\n    minute: {\n      common: true,\n      size: 60000,\n      steps: [1, 2, 5, 10, 15, 30]\n    },\n    hour: {\n      common: true,\n      size: 3600000,\n      steps: [1, 2, 3, 6, 12]\n    },\n    day: {\n      common: true,\n      size: 86400000,\n      steps: [1, 2, 5]\n    },\n    week: {\n      common: false,\n      size: 604800000,\n      steps: [1, 2, 3, 4]\n    },\n    month: {\n      common: true,\n      size: 2.628e9,\n      steps: [1, 2, 3]\n    },\n    quarter: {\n      common: false,\n      size: 7.884e9,\n      steps: [1, 2, 3, 4]\n    },\n    year: {\n      common: true,\n      size: 3.154e10\n    }\n  };\n  var UNITS = Object.keys(INTERVALS);\n\n  function sorter(a, b) {\n    return a - b;\n  }\n\n  function arrayUnique(items) {\n    var hash = {};\n    var out = [];\n    var i, ilen, item;\n\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      item = items[i];\n\n      if (!hash[item]) {\n        hash[item] = true;\n        out.push(item);\n      }\n    }\n\n    return out;\n  }\n  /**\n   * Returns an array of {time, pos} objects used to interpolate a specific `time` or position\n   * (`pos`) on the scale, by searching entries before and after the requested value. `pos` is\n   * a decimal between 0 and 1: 0 being the start of the scale (left or top) and 1 the other\n   * extremity (left + width or top + height). Note that it would be more optimized to directly\n   * store pre-computed pixels, but the scale dimensions are not guaranteed at the time we need\n   * to create the lookup table. The table ALWAYS contains at least two items: min and max.\n   *\n   * @param {number[]} timestamps - timestamps sorted from lowest to highest.\n   * @param {string} distribution - If 'linear', timestamps will be spread linearly along the min\n   * and max range, so basically, the table will contains only two items: {min, 0} and {max, 1}.\n   * If 'series', timestamps will be positioned at the same distance from each other. In this\n   * case, only timestamps that break the time linearity are registered, meaning that in the\n   * best case, all timestamps are linear, the table contains only min and max.\n   */\n\n\n  function buildLookupTable(timestamps, min, max, distribution) {\n    if (distribution === 'linear' || !timestamps.length) {\n      return [{\n        time: min,\n        pos: 0\n      }, {\n        time: max,\n        pos: 1\n      }];\n    }\n\n    var table = [];\n    var items = [min];\n    var i, ilen, prev, curr, next;\n\n    for (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n      curr = timestamps[i];\n\n      if (curr > min && curr < max) {\n        items.push(curr);\n      }\n    }\n\n    items.push(max);\n\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      next = items[i + 1];\n      prev = items[i - 1];\n      curr = items[i]; // only add points that breaks the scale linearity\n\n      if (prev === undefined || next === undefined || Math.round((next + prev) / 2) !== curr) {\n        table.push({\n          time: curr,\n          pos: i / (ilen - 1)\n        });\n      }\n    }\n\n    return table;\n  } // @see adapted from https://www.anujgakhar.com/2014/03/01/binary-search-in-javascript/\n\n\n  function lookup(table, key, value) {\n    var lo = 0;\n    var hi = table.length - 1;\n    var mid, i0, i1;\n\n    while (lo >= 0 && lo <= hi) {\n      mid = lo + hi >> 1;\n      i0 = table[mid - 1] || null;\n      i1 = table[mid];\n\n      if (!i0) {\n        // given value is outside table (before first item)\n        return {\n          lo: null,\n          hi: i1\n        };\n      } else if (i1[key] < value) {\n        lo = mid + 1;\n      } else if (i0[key] > value) {\n        hi = mid - 1;\n      } else {\n        return {\n          lo: i0,\n          hi: i1\n        };\n      }\n    } // given value is outside table (after last item)\n\n\n    return {\n      lo: i1,\n      hi: null\n    };\n  }\n  /**\n   * Linearly interpolates the given source `value` using the table items `skey` values and\n   * returns the associated `tkey` value. For example, interpolate(table, 'time', 42, 'pos')\n   * returns the position for a timestamp equal to 42. If value is out of bounds, values at\n   * index [0, 1] or [n - 1, n] are used for the interpolation.\n   */\n\n\n  function interpolate$1(table, skey, sval, tkey) {\n    var range = lookup(table, skey, sval); // Note: the lookup table ALWAYS contains at least 2 items (min and max)\n\n    var prev = !range.lo ? table[0] : !range.hi ? table[table.length - 2] : range.lo;\n    var next = !range.lo ? table[1] : !range.hi ? table[table.length - 1] : range.hi;\n    var span = next[skey] - prev[skey];\n    var ratio = span ? (sval - prev[skey]) / span : 0;\n    var offset = (next[tkey] - prev[tkey]) * ratio;\n    return prev[tkey] + offset;\n  }\n\n  function toTimestamp(scale, input) {\n    var adapter = scale._adapter;\n    var options = scale.options.time;\n    var parser = options.parser;\n    var format = parser || options.format;\n    var value = input;\n\n    if (typeof parser === 'function') {\n      value = parser(value);\n    } // Only parse if its not a timestamp already\n\n\n    if (!helpers$1.isFinite(value)) {\n      value = typeof format === 'string' ? adapter.parse(value, format) : adapter.parse(value);\n    }\n\n    if (value !== null) {\n      return +value;\n    } // Labels are in an incompatible format and no `parser` has been provided.\n    // The user might still use the deprecated `format` option for parsing.\n\n\n    if (!parser && typeof format === 'function') {\n      value = format(input); // `format` could return something else than a timestamp, if so, parse it\n\n      if (!helpers$1.isFinite(value)) {\n        value = adapter.parse(value);\n      }\n    }\n\n    return value;\n  }\n\n  function parse(scale, input) {\n    if (helpers$1.isNullOrUndef(input)) {\n      return null;\n    }\n\n    var options = scale.options.time;\n    var value = toTimestamp(scale, scale.getRightValue(input));\n\n    if (value === null) {\n      return value;\n    }\n\n    if (options.round) {\n      value = +scale._adapter.startOf(value, options.round);\n    }\n\n    return value;\n  }\n  /**\n   * Returns the number of unit to skip to be able to display up to `capacity` number of ticks\n   * in `unit` for the given `min` / `max` range and respecting the interval steps constraints.\n   */\n\n\n  function determineStepSize(min, max, unit, capacity) {\n    var range = max - min;\n    var interval = INTERVALS[unit];\n    var milliseconds = interval.size;\n    var steps = interval.steps;\n    var i, ilen, factor;\n\n    if (!steps) {\n      return Math.ceil(range / (capacity * milliseconds));\n    }\n\n    for (i = 0, ilen = steps.length; i < ilen; ++i) {\n      factor = steps[i];\n\n      if (Math.ceil(range / (milliseconds * factor)) <= capacity) {\n        break;\n      }\n    }\n\n    return factor;\n  }\n  /**\n   * Figures out what unit results in an appropriate number of auto-generated ticks\n   */\n\n\n  function determineUnitForAutoTicks(minUnit, min, max, capacity) {\n    var ilen = UNITS.length;\n    var i, interval, factor;\n\n    for (i = UNITS.indexOf(minUnit); i < ilen - 1; ++i) {\n      interval = INTERVALS[UNITS[i]];\n      factor = interval.steps ? interval.steps[interval.steps.length - 1] : MAX_INTEGER;\n\n      if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n        return UNITS[i];\n      }\n    }\n\n    return UNITS[ilen - 1];\n  }\n  /**\n   * Figures out what unit to format a set of ticks with\n   */\n\n\n  function determineUnitForFormatting(scale, ticks, minUnit, min, max) {\n    var ilen = UNITS.length;\n    var i, unit;\n\n    for (i = ilen - 1; i >= UNITS.indexOf(minUnit); i--) {\n      unit = UNITS[i];\n\n      if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= ticks.length) {\n        return unit;\n      }\n    }\n\n    return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n  }\n\n  function determineMajorUnit(unit) {\n    for (var i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i) {\n      if (INTERVALS[UNITS[i]].common) {\n        return UNITS[i];\n      }\n    }\n  }\n  /**\n   * Generates a maximum of `capacity` timestamps between min and max, rounded to the\n   * `minor` unit, aligned on the `major` unit and using the given scale time `options`.\n   * Important: this method can return ticks outside the min and max range, it's the\n   * responsibility of the calling code to clamp values if needed.\n   */\n\n\n  function generate(scale, min, max, capacity) {\n    var adapter = scale._adapter;\n    var options = scale.options;\n    var timeOpts = options.time;\n    var minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, capacity);\n    var major = determineMajorUnit(minor);\n    var stepSize = valueOrDefault$c(timeOpts.stepSize, timeOpts.unitStepSize);\n    var weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n    var majorTicksEnabled = options.ticks.major.enabled;\n    var interval = INTERVALS[minor];\n    var first = min;\n    var last = max;\n    var ticks = [];\n    var time;\n\n    if (!stepSize) {\n      stepSize = determineStepSize(min, max, minor, capacity);\n    } // For 'week' unit, handle the first day of week option\n\n\n    if (weekday) {\n      first = +adapter.startOf(first, 'isoWeek', weekday);\n      last = +adapter.startOf(last, 'isoWeek', weekday);\n    } // Align first/last ticks on unit\n\n\n    first = +adapter.startOf(first, weekday ? 'day' : minor);\n    last = +adapter.startOf(last, weekday ? 'day' : minor); // Make sure that the last tick include max\n\n    if (last < max) {\n      last = +adapter.add(last, 1, minor);\n    }\n\n    time = first;\n\n    if (majorTicksEnabled && major && !weekday && !timeOpts.round) {\n      // Align the first tick on the previous `minor` unit aligned on the `major` unit:\n      // we first aligned time on the previous `major` unit then add the number of full\n      // stepSize there is between first and the previous major time.\n      time = +adapter.startOf(time, major);\n      time = +adapter.add(time, ~~((first - time) / (interval.size * stepSize)) * stepSize, minor);\n    }\n\n    for (; time < last; time = +adapter.add(time, stepSize, minor)) {\n      ticks.push(+time);\n    }\n\n    ticks.push(+time);\n    return ticks;\n  }\n  /**\n   * Returns the start and end offsets from edges in the form of {start, end}\n   * where each value is a relative width to the scale and ranges between 0 and 1.\n   * They add extra margins on the both sides by scaling down the original scale.\n   * Offsets are added when the `offset` option is true.\n   */\n\n\n  function computeOffsets(table, ticks, min, max, options) {\n    var start = 0;\n    var end = 0;\n    var first, last;\n\n    if (options.offset && ticks.length) {\n      if (!options.time.min) {\n        first = interpolate$1(table, 'time', ticks[0], 'pos');\n\n        if (ticks.length === 1) {\n          start = 1 - first;\n        } else {\n          start = (interpolate$1(table, 'time', ticks[1], 'pos') - first) / 2;\n        }\n      }\n\n      if (!options.time.max) {\n        last = interpolate$1(table, 'time', ticks[ticks.length - 1], 'pos');\n\n        if (ticks.length === 1) {\n          end = last;\n        } else {\n          end = (last - interpolate$1(table, 'time', ticks[ticks.length - 2], 'pos')) / 2;\n        }\n      }\n    }\n\n    return {\n      start: start,\n      end: end\n    };\n  }\n\n  function ticksFromTimestamps(scale, values, majorUnit) {\n    var ticks = [];\n    var i, ilen, value, major;\n\n    for (i = 0, ilen = values.length; i < ilen; ++i) {\n      value = values[i];\n      major = majorUnit ? value === +scale._adapter.startOf(value, majorUnit) : false;\n      ticks.push({\n        value: value,\n        major: major\n      });\n    }\n\n    return ticks;\n  }\n\n  var defaultConfig$4 = {\n    position: 'bottom',\n\n    /**\n     * Data distribution along the scale:\n     * - 'linear': data are spread according to their time (distances can vary),\n     * - 'series': data are spread at the same distance from each other.\n     * @see https://github.com/chartjs/Chart.js/pull/4507\n     * @since 2.7.0\n     */\n    distribution: 'linear',\n\n    /**\n     * Scale boundary strategy (bypassed by min/max time options)\n     * - `data`: make sure data are fully visible, ticks outside are removed\n     * - `ticks`: make sure ticks are fully visible, data outside are truncated\n     * @see https://github.com/chartjs/Chart.js/pull/4556\n     * @since 2.7.0\n     */\n    bounds: 'data',\n    adapters: {},\n    time: {\n      parser: false,\n      // false == a pattern string from https://momentjs.com/docs/#/parsing/string-format/ or a custom callback that converts its argument to a moment\n      format: false,\n      // DEPRECATED false == date objects, moment object, callback or a pattern string from https://momentjs.com/docs/#/parsing/string-format/\n      unit: false,\n      // false == automatic or override with week, month, year, etc.\n      round: false,\n      // none, or override with week, month, year, etc.\n      displayFormat: false,\n      // DEPRECATED\n      isoWeekday: false,\n      // override week start day - see https://momentjs.com/docs/#/get-set/iso-weekday/\n      minUnit: 'millisecond',\n      displayFormats: {}\n    },\n    ticks: {\n      autoSkip: false,\n\n      /**\n       * Ticks generation input values:\n       * - 'auto': generates \"optimal\" ticks based on scale size and time options.\n       * - 'data': generates ticks from data (including labels from data {t|x|y} objects).\n       * - 'labels': generates ticks from user given `data.labels` values ONLY.\n       * @see https://github.com/chartjs/Chart.js/pull/4507\n       * @since 2.7.0\n       */\n      source: 'auto',\n      major: {\n        enabled: false\n      }\n    }\n  };\n  var scale_time = core_scale.extend({\n    initialize: function initialize() {\n      this.mergeTicksOptions();\n      core_scale.prototype.initialize.call(this);\n    },\n    update: function update() {\n      var me = this;\n      var options = me.options;\n      var time = options.time || (options.time = {});\n      var adapter = me._adapter = new core_adapters._date(options.adapters.date); // DEPRECATIONS: output a message only one time per update\n\n      if (time.format) {\n        console.warn('options.time.format is deprecated and replaced by options.time.parser.');\n      } // Backward compatibility: before introducing adapter, `displayFormats` was\n      // supposed to contain *all* unit/string pairs but this can't be resolved\n      // when loading the scale (adapters are loaded afterward), so let's populate\n      // missing formats on update\n\n\n      helpers$1.mergeIf(time.displayFormats, adapter.formats());\n      return core_scale.prototype.update.apply(me, arguments);\n    },\n\n    /**\n     * Allows data to be referenced via 't' attribute\n     */\n    getRightValue: function getRightValue(rawValue) {\n      if (rawValue && rawValue.t !== undefined) {\n        rawValue = rawValue.t;\n      }\n\n      return core_scale.prototype.getRightValue.call(this, rawValue);\n    },\n    determineDataLimits: function determineDataLimits() {\n      var me = this;\n      var chart = me.chart;\n      var adapter = me._adapter;\n      var timeOpts = me.options.time;\n      var unit = timeOpts.unit || 'day';\n      var min = MAX_INTEGER;\n      var max = MIN_INTEGER;\n      var timestamps = [];\n      var datasets = [];\n      var labels = [];\n      var i, j, ilen, jlen, data, timestamp;\n      var dataLabels = chart.data.labels || []; // Convert labels to timestamps\n\n      for (i = 0, ilen = dataLabels.length; i < ilen; ++i) {\n        labels.push(parse(me, dataLabels[i]));\n      } // Convert data to timestamps\n\n\n      for (i = 0, ilen = (chart.data.datasets || []).length; i < ilen; ++i) {\n        if (chart.isDatasetVisible(i)) {\n          data = chart.data.datasets[i].data; // Let's consider that all data have the same format.\n\n          if (helpers$1.isObject(data[0])) {\n            datasets[i] = [];\n\n            for (j = 0, jlen = data.length; j < jlen; ++j) {\n              timestamp = parse(me, data[j]);\n              timestamps.push(timestamp);\n              datasets[i][j] = timestamp;\n            }\n          } else {\n            for (j = 0, jlen = labels.length; j < jlen; ++j) {\n              timestamps.push(labels[j]);\n            }\n\n            datasets[i] = labels.slice(0);\n          }\n        } else {\n          datasets[i] = [];\n        }\n      }\n\n      if (labels.length) {\n        // Sort labels **after** data have been converted\n        labels = arrayUnique(labels).sort(sorter);\n        min = Math.min(min, labels[0]);\n        max = Math.max(max, labels[labels.length - 1]);\n      }\n\n      if (timestamps.length) {\n        timestamps = arrayUnique(timestamps).sort(sorter);\n        min = Math.min(min, timestamps[0]);\n        max = Math.max(max, timestamps[timestamps.length - 1]);\n      }\n\n      min = parse(me, timeOpts.min) || min;\n      max = parse(me, timeOpts.max) || max; // In case there is no valid min/max, set limits based on unit time option\n\n      min = min === MAX_INTEGER ? +adapter.startOf(Date.now(), unit) : min;\n      max = max === MIN_INTEGER ? +adapter.endOf(Date.now(), unit) + 1 : max; // Make sure that max is strictly higher than min (required by the lookup table)\n\n      me.min = Math.min(min, max);\n      me.max = Math.max(min + 1, max); // PRIVATE\n\n      me._horizontal = me.isHorizontal();\n      me._table = [];\n      me._timestamps = {\n        data: timestamps,\n        datasets: datasets,\n        labels: labels\n      };\n    },\n    buildTicks: function buildTicks() {\n      var me = this;\n      var min = me.min;\n      var max = me.max;\n      var options = me.options;\n      var timeOpts = options.time;\n      var timestamps = [];\n      var ticks = [];\n      var i, ilen, timestamp;\n\n      switch (options.ticks.source) {\n        case 'data':\n          timestamps = me._timestamps.data;\n          break;\n\n        case 'labels':\n          timestamps = me._timestamps.labels;\n          break;\n\n        case 'auto':\n        default:\n          timestamps = generate(me, min, max, me.getLabelCapacity(min), options);\n      }\n\n      if (options.bounds === 'ticks' && timestamps.length) {\n        min = timestamps[0];\n        max = timestamps[timestamps.length - 1];\n      } // Enforce limits with user min/max options\n\n\n      min = parse(me, timeOpts.min) || min;\n      max = parse(me, timeOpts.max) || max; // Remove ticks outside the min/max range\n\n      for (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n        timestamp = timestamps[i];\n\n        if (timestamp >= min && timestamp <= max) {\n          ticks.push(timestamp);\n        }\n      }\n\n      me.min = min;\n      me.max = max; // PRIVATE\n\n      me._unit = timeOpts.unit || determineUnitForFormatting(me, ticks, timeOpts.minUnit, me.min, me.max);\n      me._majorUnit = determineMajorUnit(me._unit);\n      me._table = buildLookupTable(me._timestamps.data, min, max, options.distribution);\n      me._offsets = computeOffsets(me._table, ticks, min, max, options);\n\n      if (options.ticks.reverse) {\n        ticks.reverse();\n      }\n\n      return ticksFromTimestamps(me, ticks, me._majorUnit);\n    },\n    getLabelForIndex: function getLabelForIndex(index, datasetIndex) {\n      var me = this;\n      var adapter = me._adapter;\n      var data = me.chart.data;\n      var timeOpts = me.options.time;\n      var label = data.labels && index < data.labels.length ? data.labels[index] : '';\n      var value = data.datasets[datasetIndex].data[index];\n\n      if (helpers$1.isObject(value)) {\n        label = me.getRightValue(value);\n      }\n\n      if (timeOpts.tooltipFormat) {\n        return adapter.format(toTimestamp(me, label), timeOpts.tooltipFormat);\n      }\n\n      if (typeof label === 'string') {\n        return label;\n      }\n\n      return adapter.format(toTimestamp(me, label), timeOpts.displayFormats.datetime);\n    },\n\n    /**\n     * Function to format an individual tick mark\n     * @private\n     */\n    tickFormatFunction: function tickFormatFunction(time, index, ticks, format) {\n      var me = this;\n      var adapter = me._adapter;\n      var options = me.options;\n      var formats = options.time.displayFormats;\n      var minorFormat = formats[me._unit];\n      var majorUnit = me._majorUnit;\n      var majorFormat = formats[majorUnit];\n      var majorTime = +adapter.startOf(time, majorUnit);\n      var majorTickOpts = options.ticks.major;\n      var major = majorTickOpts.enabled && majorUnit && majorFormat && time === majorTime;\n      var label = adapter.format(time, format ? format : major ? majorFormat : minorFormat);\n      var tickOpts = major ? majorTickOpts : options.ticks.minor;\n      var formatter = valueOrDefault$c(tickOpts.callback, tickOpts.userCallback);\n      return formatter ? formatter(label, index, ticks) : label;\n    },\n    convertTicksToLabels: function convertTicksToLabels(ticks) {\n      var labels = [];\n      var i, ilen;\n\n      for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n        labels.push(this.tickFormatFunction(ticks[i].value, i, ticks));\n      }\n\n      return labels;\n    },\n\n    /**\n     * @private\n     */\n    getPixelForOffset: function getPixelForOffset(time) {\n      var me = this;\n      var isReverse = me.options.ticks.reverse;\n      var size = me._horizontal ? me.width : me.height;\n      var start = me._horizontal ? isReverse ? me.right : me.left : isReverse ? me.bottom : me.top;\n      var pos = interpolate$1(me._table, 'time', time, 'pos');\n      var offset = size * (me._offsets.start + pos) / (me._offsets.start + 1 + me._offsets.end);\n      return isReverse ? start - offset : start + offset;\n    },\n    getPixelForValue: function getPixelForValue(value, index, datasetIndex) {\n      var me = this;\n      var time = null;\n\n      if (index !== undefined && datasetIndex !== undefined) {\n        time = me._timestamps.datasets[datasetIndex][index];\n      }\n\n      if (time === null) {\n        time = parse(me, value);\n      }\n\n      if (time !== null) {\n        return me.getPixelForOffset(time);\n      }\n    },\n    getPixelForTick: function getPixelForTick(index) {\n      var ticks = this.getTicks();\n      return index >= 0 && index < ticks.length ? this.getPixelForOffset(ticks[index].value) : null;\n    },\n    getValueForPixel: function getValueForPixel(pixel) {\n      var me = this;\n      var size = me._horizontal ? me.width : me.height;\n      var start = me._horizontal ? me.left : me.top;\n      var pos = (size ? (pixel - start) / size : 0) * (me._offsets.start + 1 + me._offsets.start) - me._offsets.end;\n      var time = interpolate$1(me._table, 'pos', pos, 'time'); // DEPRECATION, we should return time directly\n\n      return me._adapter._create(time);\n    },\n\n    /**\n     * Crude approximation of what the label width might be\n     * @private\n     */\n    getLabelWidth: function getLabelWidth(label) {\n      var me = this;\n      var ticksOpts = me.options.ticks;\n      var tickLabelWidth = me.ctx.measureText(label).width;\n      var angle = helpers$1.toRadians(ticksOpts.maxRotation);\n      var cosRotation = Math.cos(angle);\n      var sinRotation = Math.sin(angle);\n      var tickFontSize = valueOrDefault$c(ticksOpts.fontSize, core_defaults.global.defaultFontSize);\n      return tickLabelWidth * cosRotation + tickFontSize * sinRotation;\n    },\n\n    /**\n     * @private\n     */\n    getLabelCapacity: function getLabelCapacity(exampleTime) {\n      var me = this; // pick the longest format (milliseconds) for guestimation\n\n      var format = me.options.time.displayFormats.millisecond;\n      var exampleLabel = me.tickFormatFunction(exampleTime, 0, [], format);\n      var tickLabelWidth = me.getLabelWidth(exampleLabel);\n      var innerWidth = me.isHorizontal() ? me.width : me.height;\n      var capacity = Math.floor(innerWidth / tickLabelWidth);\n      return capacity > 0 ? capacity : 1;\n    }\n  }); // INTERNAL: static default options, registered in src/index.js\n\n  var _defaults$4 = defaultConfig$4;\n  scale_time._defaults = _defaults$4;\n  var scales = {\n    category: scale_category,\n    linear: scale_linear,\n    logarithmic: scale_logarithmic,\n    radialLinear: scale_radialLinear,\n    time: scale_time\n  };\n  var FORMATS = {\n    datetime: 'MMM D, YYYY, h:mm:ss a',\n    millisecond: 'h:mm:ss.SSS a',\n    second: 'h:mm:ss a',\n    minute: 'h:mm a',\n    hour: 'hA',\n    day: 'MMM D',\n    week: 'll',\n    month: 'MMM YYYY',\n    quarter: '[Q]Q - YYYY',\n    year: 'YYYY'\n  };\n\n  core_adapters._date.override(typeof moment === 'function' ? {\n    _id: 'moment',\n    // DEBUG ONLY\n    formats: function formats() {\n      return FORMATS;\n    },\n    parse: function parse(value, format) {\n      if (typeof value === 'string' && typeof format === 'string') {\n        value = moment(value, format);\n      } else if (!(value instanceof moment)) {\n        value = moment(value);\n      }\n\n      return value.isValid() ? value.valueOf() : null;\n    },\n    format: function format(time, _format) {\n      return moment(time).format(_format);\n    },\n    add: function add(time, amount, unit) {\n      return moment(time).add(amount, unit).valueOf();\n    },\n    diff: function diff(max, min, unit) {\n      return moment.duration(moment(max).diff(moment(min))).as(unit);\n    },\n    startOf: function startOf(time, unit, weekday) {\n      time = moment(time);\n\n      if (unit === 'isoWeek') {\n        return time.isoWeekday(weekday).valueOf();\n      }\n\n      return time.startOf(unit).valueOf();\n    },\n    endOf: function endOf(time, unit) {\n      return moment(time).endOf(unit).valueOf();\n    },\n    // DEPRECATIONS\n\n    /**\n     * Provided for backward compatibility with scale.getValueForPixel().\n     * @deprecated since version 2.8.0\n     * @todo remove at version 3\n     * @private\n     */\n    _create: function _create(time) {\n      return moment(time);\n    }\n  } : {});\n\n  core_defaults._set('global', {\n    plugins: {\n      filler: {\n        propagate: true\n      }\n    }\n  });\n\n  var mappers = {\n    dataset: function dataset(source) {\n      var index = source.fill;\n      var chart = source.chart;\n      var meta = chart.getDatasetMeta(index);\n      var visible = meta && chart.isDatasetVisible(index);\n      var points = visible && meta.dataset._children || [];\n      var length = points.length || 0;\n      return !length ? null : function (point, i) {\n        return i < length && points[i]._view || null;\n      };\n    },\n    boundary: function boundary(source) {\n      var boundary = source.boundary;\n      var x = boundary ? boundary.x : null;\n      var y = boundary ? boundary.y : null;\n      return function (point) {\n        return {\n          x: x === null ? point.x : x,\n          y: y === null ? point.y : y\n        };\n      };\n    }\n  }; // @todo if (fill[0] === '#')\n\n  function decodeFill(el, index, count) {\n    var model = el._model || {};\n    var fill = model.fill;\n    var target;\n\n    if (fill === undefined) {\n      fill = !!model.backgroundColor;\n    }\n\n    if (fill === false || fill === null) {\n      return false;\n    }\n\n    if (fill === true) {\n      return 'origin';\n    }\n\n    target = parseFloat(fill, 10);\n\n    if (isFinite(target) && Math.floor(target) === target) {\n      if (fill[0] === '-' || fill[0] === '+') {\n        target = index + target;\n      }\n\n      if (target === index || target < 0 || target >= count) {\n        return false;\n      }\n\n      return target;\n    }\n\n    switch (fill) {\n      // compatibility\n      case 'bottom':\n        return 'start';\n\n      case 'top':\n        return 'end';\n\n      case 'zero':\n        return 'origin';\n      // supported boundaries\n\n      case 'origin':\n      case 'start':\n      case 'end':\n        return fill;\n      // invalid fill values\n\n      default:\n        return false;\n    }\n  }\n\n  function computeBoundary(source) {\n    var model = source.el._model || {};\n    var scale = source.el._scale || {};\n    var fill = source.fill;\n    var target = null;\n    var horizontal;\n\n    if (isFinite(fill)) {\n      return null;\n    } // Backward compatibility: until v3, we still need to support boundary values set on\n    // the model (scaleTop, scaleBottom and scaleZero) because some external plugins and\n    // controllers might still use it (e.g. the Smith chart).\n\n\n    if (fill === 'start') {\n      target = model.scaleBottom === undefined ? scale.bottom : model.scaleBottom;\n    } else if (fill === 'end') {\n      target = model.scaleTop === undefined ? scale.top : model.scaleTop;\n    } else if (model.scaleZero !== undefined) {\n      target = model.scaleZero;\n    } else if (scale.getBasePosition) {\n      target = scale.getBasePosition();\n    } else if (scale.getBasePixel) {\n      target = scale.getBasePixel();\n    }\n\n    if (target !== undefined && target !== null) {\n      if (target.x !== undefined && target.y !== undefined) {\n        return target;\n      }\n\n      if (helpers$1.isFinite(target)) {\n        horizontal = scale.isHorizontal();\n        return {\n          x: horizontal ? target : null,\n          y: horizontal ? null : target\n        };\n      }\n    }\n\n    return null;\n  }\n\n  function resolveTarget(sources, index, propagate) {\n    var source = sources[index];\n    var fill = source.fill;\n    var visited = [index];\n    var target;\n\n    if (!propagate) {\n      return fill;\n    }\n\n    while (fill !== false && visited.indexOf(fill) === -1) {\n      if (!isFinite(fill)) {\n        return fill;\n      }\n\n      target = sources[fill];\n\n      if (!target) {\n        return false;\n      }\n\n      if (target.visible) {\n        return fill;\n      }\n\n      visited.push(fill);\n      fill = target.fill;\n    }\n\n    return false;\n  }\n\n  function createMapper(source) {\n    var fill = source.fill;\n    var type = 'dataset';\n\n    if (fill === false) {\n      return null;\n    }\n\n    if (!isFinite(fill)) {\n      type = 'boundary';\n    }\n\n    return mappers[type](source);\n  }\n\n  function isDrawable(point) {\n    return point && !point.skip;\n  }\n\n  function drawArea(ctx, curve0, curve1, len0, len1) {\n    var i;\n\n    if (!len0 || !len1) {\n      return;\n    } // building first area curve (normal)\n\n\n    ctx.moveTo(curve0[0].x, curve0[0].y);\n\n    for (i = 1; i < len0; ++i) {\n      helpers$1.canvas.lineTo(ctx, curve0[i - 1], curve0[i]);\n    } // joining the two area curves\n\n\n    ctx.lineTo(curve1[len1 - 1].x, curve1[len1 - 1].y); // building opposite area curve (reverse)\n\n    for (i = len1 - 1; i > 0; --i) {\n      helpers$1.canvas.lineTo(ctx, curve1[i], curve1[i - 1], true);\n    }\n  }\n\n  function doFill(ctx, points, mapper, view, color, loop) {\n    var count = points.length;\n    var span = view.spanGaps;\n    var curve0 = [];\n    var curve1 = [];\n    var len0 = 0;\n    var len1 = 0;\n    var i, ilen, index, p0, p1, d0, d1;\n    ctx.beginPath();\n\n    for (i = 0, ilen = count + !!loop; i < ilen; ++i) {\n      index = i % count;\n      p0 = points[index]._view;\n      p1 = mapper(p0, index, view);\n      d0 = isDrawable(p0);\n      d1 = isDrawable(p1);\n\n      if (d0 && d1) {\n        len0 = curve0.push(p0);\n        len1 = curve1.push(p1);\n      } else if (len0 && len1) {\n        if (!span) {\n          drawArea(ctx, curve0, curve1, len0, len1);\n          len0 = len1 = 0;\n          curve0 = [];\n          curve1 = [];\n        } else {\n          if (d0) {\n            curve0.push(p0);\n          }\n\n          if (d1) {\n            curve1.push(p1);\n          }\n        }\n      }\n    }\n\n    drawArea(ctx, curve0, curve1, len0, len1);\n    ctx.closePath();\n    ctx.fillStyle = color;\n    ctx.fill();\n  }\n\n  var plugin_filler = {\n    id: 'filler',\n    afterDatasetsUpdate: function afterDatasetsUpdate(chart, options) {\n      var count = (chart.data.datasets || []).length;\n      var propagate = options.propagate;\n      var sources = [];\n      var meta, i, el, source;\n\n      for (i = 0; i < count; ++i) {\n        meta = chart.getDatasetMeta(i);\n        el = meta.dataset;\n        source = null;\n\n        if (el && el._model && el instanceof elements.Line) {\n          source = {\n            visible: chart.isDatasetVisible(i),\n            fill: decodeFill(el, i, count),\n            chart: chart,\n            el: el\n          };\n        }\n\n        meta.$filler = source;\n        sources.push(source);\n      }\n\n      for (i = 0; i < count; ++i) {\n        source = sources[i];\n\n        if (!source) {\n          continue;\n        }\n\n        source.fill = resolveTarget(sources, i, propagate);\n        source.boundary = computeBoundary(source);\n        source.mapper = createMapper(source);\n      }\n    },\n    beforeDatasetDraw: function beforeDatasetDraw(chart, args) {\n      var meta = args.meta.$filler;\n\n      if (!meta) {\n        return;\n      }\n\n      var ctx = chart.ctx;\n      var el = meta.el;\n      var view = el._view;\n      var points = el._children || [];\n      var mapper = meta.mapper;\n      var color = view.backgroundColor || core_defaults.global.defaultColor;\n\n      if (mapper && color && points.length) {\n        helpers$1.canvas.clipArea(ctx, chart.chartArea);\n        doFill(ctx, points, mapper, view, color, el._loop);\n        helpers$1.canvas.unclipArea(ctx);\n      }\n    }\n  };\n  var noop$1 = helpers$1.noop;\n  var valueOrDefault$d = helpers$1.valueOrDefault;\n\n  core_defaults._set('global', {\n    legend: {\n      display: true,\n      position: 'top',\n      fullWidth: true,\n      reverse: false,\n      weight: 1000,\n      // a callback that will handle\n      onClick: function onClick(e, legendItem) {\n        var index = legendItem.datasetIndex;\n        var ci = this.chart;\n        var meta = ci.getDatasetMeta(index); // See controller.isDatasetVisible comment\n\n        meta.hidden = meta.hidden === null ? !ci.data.datasets[index].hidden : null; // We hid a dataset ... rerender the chart\n\n        ci.update();\n      },\n      onHover: null,\n      onLeave: null,\n      labels: {\n        boxWidth: 40,\n        padding: 10,\n        // Generates labels shown in the legend\n        // Valid properties to return:\n        // text : text to display\n        // fillStyle : fill of coloured box\n        // strokeStyle: stroke of coloured box\n        // hidden : if this legend item refers to a hidden item\n        // lineCap : cap style for line\n        // lineDash\n        // lineDashOffset :\n        // lineJoin :\n        // lineWidth :\n        generateLabels: function generateLabels(chart) {\n          var data = chart.data;\n          return helpers$1.isArray(data.datasets) ? data.datasets.map(function (dataset, i) {\n            return {\n              text: dataset.label,\n              fillStyle: !helpers$1.isArray(dataset.backgroundColor) ? dataset.backgroundColor : dataset.backgroundColor[0],\n              hidden: !chart.isDatasetVisible(i),\n              lineCap: dataset.borderCapStyle,\n              lineDash: dataset.borderDash,\n              lineDashOffset: dataset.borderDashOffset,\n              lineJoin: dataset.borderJoinStyle,\n              lineWidth: dataset.borderWidth,\n              strokeStyle: dataset.borderColor,\n              pointStyle: dataset.pointStyle,\n              // Below is extra data used for toggling the datasets\n              datasetIndex: i\n            };\n          }, this) : [];\n        }\n      }\n    },\n    legendCallback: function legendCallback(chart) {\n      var text = [];\n      text.push('<ul class=\"' + chart.id + '-legend\">');\n\n      for (var i = 0; i < chart.data.datasets.length; i++) {\n        text.push('<li><span style=\"background-color:' + chart.data.datasets[i].backgroundColor + '\"></span>');\n\n        if (chart.data.datasets[i].label) {\n          text.push(chart.data.datasets[i].label);\n        }\n\n        text.push('</li>');\n      }\n\n      text.push('</ul>');\n      return text.join('');\n    }\n  });\n  /**\n   * Helper function to get the box width based on the usePointStyle option\n   * @param {object} labelopts - the label options on the legend\n   * @param {number} fontSize - the label font size\n   * @return {number} width of the color box area\n   */\n\n\n  function getBoxWidth(labelOpts, fontSize) {\n    return labelOpts.usePointStyle && labelOpts.boxWidth > fontSize ? fontSize : labelOpts.boxWidth;\n  }\n  /**\n   * IMPORTANT: this class is exposed publicly as Chart.Legend, backward compatibility required!\n   */\n\n\n  var Legend = core_element.extend({\n    initialize: function initialize(config) {\n      helpers$1.extend(this, config); // Contains hit boxes for each dataset (in dataset order)\n\n      this.legendHitBoxes = [];\n      /**\n      \t * @private\n      \t */\n\n      this._hoveredItem = null; // Are we in doughnut mode which has a different data type\n\n      this.doughnutMode = false;\n    },\n    // These methods are ordered by lifecycle. Utilities then follow.\n    // Any function defined here is inherited by all legend types.\n    // Any function can be extended by the legend type\n    beforeUpdate: noop$1,\n    update: function update(maxWidth, maxHeight, margins) {\n      var me = this; // Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\n\n      me.beforeUpdate(); // Absorb the master measurements\n\n      me.maxWidth = maxWidth;\n      me.maxHeight = maxHeight;\n      me.margins = margins; // Dimensions\n\n      me.beforeSetDimensions();\n      me.setDimensions();\n      me.afterSetDimensions(); // Labels\n\n      me.beforeBuildLabels();\n      me.buildLabels();\n      me.afterBuildLabels(); // Fit\n\n      me.beforeFit();\n      me.fit();\n      me.afterFit(); //\n\n      me.afterUpdate();\n      return me.minSize;\n    },\n    afterUpdate: noop$1,\n    //\n    beforeSetDimensions: noop$1,\n    setDimensions: function setDimensions() {\n      var me = this; // Set the unconstrained dimension before label rotation\n\n      if (me.isHorizontal()) {\n        // Reset position before calculating rotation\n        me.width = me.maxWidth;\n        me.left = 0;\n        me.right = me.width;\n      } else {\n        me.height = me.maxHeight; // Reset position before calculating rotation\n\n        me.top = 0;\n        me.bottom = me.height;\n      } // Reset padding\n\n\n      me.paddingLeft = 0;\n      me.paddingTop = 0;\n      me.paddingRight = 0;\n      me.paddingBottom = 0; // Reset minSize\n\n      me.minSize = {\n        width: 0,\n        height: 0\n      };\n    },\n    afterSetDimensions: noop$1,\n    //\n    beforeBuildLabels: noop$1,\n    buildLabels: function buildLabels() {\n      var me = this;\n      var labelOpts = me.options.labels || {};\n      var legendItems = helpers$1.callback(labelOpts.generateLabels, [me.chart], me) || [];\n\n      if (labelOpts.filter) {\n        legendItems = legendItems.filter(function (item) {\n          return labelOpts.filter(item, me.chart.data);\n        });\n      }\n\n      if (me.options.reverse) {\n        legendItems.reverse();\n      }\n\n      me.legendItems = legendItems;\n    },\n    afterBuildLabels: noop$1,\n    //\n    beforeFit: noop$1,\n    fit: function fit() {\n      var me = this;\n      var opts = me.options;\n      var labelOpts = opts.labels;\n      var display = opts.display;\n      var ctx = me.ctx;\n\n      var labelFont = helpers$1.options._parseFont(labelOpts);\n\n      var fontSize = labelFont.size; // Reset hit boxes\n\n      var hitboxes = me.legendHitBoxes = [];\n      var minSize = me.minSize;\n      var isHorizontal = me.isHorizontal();\n\n      if (isHorizontal) {\n        minSize.width = me.maxWidth; // fill all the width\n\n        minSize.height = display ? 10 : 0;\n      } else {\n        minSize.width = display ? 10 : 0;\n        minSize.height = me.maxHeight; // fill all the height\n      } // Increase sizes here\n\n\n      if (display) {\n        ctx.font = labelFont.string;\n\n        if (isHorizontal) {\n          // Labels\n          // Width of each line of legend boxes. Labels wrap onto multiple lines when there are too many to fit on one\n          var lineWidths = me.lineWidths = [0];\n          var totalHeight = 0;\n          ctx.textAlign = 'left';\n          ctx.textBaseline = 'top';\n          helpers$1.each(me.legendItems, function (legendItem, i) {\n            var boxWidth = getBoxWidth(labelOpts, fontSize);\n            var width = boxWidth + fontSize / 2 + ctx.measureText(legendItem.text).width;\n\n            if (i === 0 || lineWidths[lineWidths.length - 1] + width + labelOpts.padding > minSize.width) {\n              totalHeight += fontSize + labelOpts.padding;\n              lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = labelOpts.padding;\n            } // Store the hitbox width and height here. Final position will be updated in `draw`\n\n\n            hitboxes[i] = {\n              left: 0,\n              top: 0,\n              width: width,\n              height: fontSize\n            };\n            lineWidths[lineWidths.length - 1] += width + labelOpts.padding;\n          });\n          minSize.height += totalHeight;\n        } else {\n          var vPadding = labelOpts.padding;\n          var columnWidths = me.columnWidths = [];\n          var totalWidth = labelOpts.padding;\n          var currentColWidth = 0;\n          var currentColHeight = 0;\n          var itemHeight = fontSize + vPadding;\n          helpers$1.each(me.legendItems, function (legendItem, i) {\n            var boxWidth = getBoxWidth(labelOpts, fontSize);\n            var itemWidth = boxWidth + fontSize / 2 + ctx.measureText(legendItem.text).width; // If too tall, go to new column\n\n            if (i > 0 && currentColHeight + itemHeight > minSize.height - vPadding) {\n              totalWidth += currentColWidth + labelOpts.padding;\n              columnWidths.push(currentColWidth); // previous column width\n\n              currentColWidth = 0;\n              currentColHeight = 0;\n            } // Get max width\n\n\n            currentColWidth = Math.max(currentColWidth, itemWidth);\n            currentColHeight += itemHeight; // Store the hitbox width and height here. Final position will be updated in `draw`\n\n            hitboxes[i] = {\n              left: 0,\n              top: 0,\n              width: itemWidth,\n              height: fontSize\n            };\n          });\n          totalWidth += currentColWidth;\n          columnWidths.push(currentColWidth);\n          minSize.width += totalWidth;\n        }\n      }\n\n      me.width = minSize.width;\n      me.height = minSize.height;\n    },\n    afterFit: noop$1,\n    // Shared Methods\n    isHorizontal: function isHorizontal() {\n      return this.options.position === 'top' || this.options.position === 'bottom';\n    },\n    // Actually draw the legend on the canvas\n    draw: function draw() {\n      var me = this;\n      var opts = me.options;\n      var labelOpts = opts.labels;\n      var globalDefaults = core_defaults.global;\n      var defaultColor = globalDefaults.defaultColor;\n      var lineDefault = globalDefaults.elements.line;\n      var legendWidth = me.width;\n      var lineWidths = me.lineWidths;\n\n      if (opts.display) {\n        var ctx = me.ctx;\n        var fontColor = valueOrDefault$d(labelOpts.fontColor, globalDefaults.defaultFontColor);\n\n        var labelFont = helpers$1.options._parseFont(labelOpts);\n\n        var fontSize = labelFont.size;\n        var cursor; // Canvas setup\n\n        ctx.textAlign = 'left';\n        ctx.textBaseline = 'middle';\n        ctx.lineWidth = 0.5;\n        ctx.strokeStyle = fontColor; // for strikethrough effect\n\n        ctx.fillStyle = fontColor; // render in correct colour\n\n        ctx.font = labelFont.string;\n        var boxWidth = getBoxWidth(labelOpts, fontSize);\n        var hitboxes = me.legendHitBoxes; // current position\n\n        var drawLegendBox = function drawLegendBox(x, y, legendItem) {\n          if (isNaN(boxWidth) || boxWidth <= 0) {\n            return;\n          } // Set the ctx for the box\n\n\n          ctx.save();\n          var lineWidth = valueOrDefault$d(legendItem.lineWidth, lineDefault.borderWidth);\n          ctx.fillStyle = valueOrDefault$d(legendItem.fillStyle, defaultColor);\n          ctx.lineCap = valueOrDefault$d(legendItem.lineCap, lineDefault.borderCapStyle);\n          ctx.lineDashOffset = valueOrDefault$d(legendItem.lineDashOffset, lineDefault.borderDashOffset);\n          ctx.lineJoin = valueOrDefault$d(legendItem.lineJoin, lineDefault.borderJoinStyle);\n          ctx.lineWidth = lineWidth;\n          ctx.strokeStyle = valueOrDefault$d(legendItem.strokeStyle, defaultColor);\n\n          if (ctx.setLineDash) {\n            // IE 9 and 10 do not support line dash\n            ctx.setLineDash(valueOrDefault$d(legendItem.lineDash, lineDefault.borderDash));\n          }\n\n          if (opts.labels && opts.labels.usePointStyle) {\n            // Recalculate x and y for drawPoint() because its expecting\n            // x and y to be center of figure (instead of top left)\n            var radius = boxWidth * Math.SQRT2 / 2;\n            var centerX = x + boxWidth / 2;\n            var centerY = y + fontSize / 2; // Draw pointStyle as legend symbol\n\n            helpers$1.canvas.drawPoint(ctx, legendItem.pointStyle, radius, centerX, centerY);\n          } else {\n            // Draw box as legend symbol\n            if (lineWidth !== 0) {\n              ctx.strokeRect(x, y, boxWidth, fontSize);\n            }\n\n            ctx.fillRect(x, y, boxWidth, fontSize);\n          }\n\n          ctx.restore();\n        };\n\n        var fillText = function fillText(x, y, legendItem, textWidth) {\n          var halfFontSize = fontSize / 2;\n          var xLeft = boxWidth + halfFontSize + x;\n          var yMiddle = y + halfFontSize;\n          ctx.fillText(legendItem.text, xLeft, yMiddle);\n\n          if (legendItem.hidden) {\n            // Strikethrough the text if hidden\n            ctx.beginPath();\n            ctx.lineWidth = 2;\n            ctx.moveTo(xLeft, yMiddle);\n            ctx.lineTo(xLeft + textWidth, yMiddle);\n            ctx.stroke();\n          }\n        }; // Horizontal\n\n\n        var isHorizontal = me.isHorizontal();\n\n        if (isHorizontal) {\n          cursor = {\n            x: me.left + (legendWidth - lineWidths[0]) / 2 + labelOpts.padding,\n            y: me.top + labelOpts.padding,\n            line: 0\n          };\n        } else {\n          cursor = {\n            x: me.left + labelOpts.padding,\n            y: me.top + labelOpts.padding,\n            line: 0\n          };\n        }\n\n        var itemHeight = fontSize + labelOpts.padding;\n        helpers$1.each(me.legendItems, function (legendItem, i) {\n          var textWidth = ctx.measureText(legendItem.text).width;\n          var width = boxWidth + fontSize / 2 + textWidth;\n          var x = cursor.x;\n          var y = cursor.y; // Use (me.left + me.minSize.width) and (me.top + me.minSize.height)\n          // instead of me.right and me.bottom because me.width and me.height\n          // may have been changed since me.minSize was calculated\n\n          if (isHorizontal) {\n            if (i > 0 && x + width + labelOpts.padding > me.left + me.minSize.width) {\n              y = cursor.y += itemHeight;\n              cursor.line++;\n              x = cursor.x = me.left + (legendWidth - lineWidths[cursor.line]) / 2 + labelOpts.padding;\n            }\n          } else if (i > 0 && y + itemHeight > me.top + me.minSize.height) {\n            x = cursor.x = x + me.columnWidths[cursor.line] + labelOpts.padding;\n            y = cursor.y = me.top + labelOpts.padding;\n            cursor.line++;\n          }\n\n          drawLegendBox(x, y, legendItem);\n          hitboxes[i].left = x;\n          hitboxes[i].top = y; // Fill the actual label\n\n          fillText(x, y, legendItem, textWidth);\n\n          if (isHorizontal) {\n            cursor.x += width + labelOpts.padding;\n          } else {\n            cursor.y += itemHeight;\n          }\n        });\n      }\n    },\n\n    /**\n     * @private\n     */\n    _getLegendItemAt: function _getLegendItemAt(x, y) {\n      var me = this;\n      var i, hitBox, lh;\n\n      if (x >= me.left && x <= me.right && y >= me.top && y <= me.bottom) {\n        // See if we are touching one of the dataset boxes\n        lh = me.legendHitBoxes;\n\n        for (i = 0; i < lh.length; ++i) {\n          hitBox = lh[i];\n\n          if (x >= hitBox.left && x <= hitBox.left + hitBox.width && y >= hitBox.top && y <= hitBox.top + hitBox.height) {\n            // Touching an element\n            return me.legendItems[i];\n          }\n        }\n      }\n\n      return null;\n    },\n\n    /**\n     * Handle an event\n     * @private\n     * @param {IEvent} event - The event to handle\n     */\n    handleEvent: function handleEvent(e) {\n      var me = this;\n      var opts = me.options;\n      var type = e.type === 'mouseup' ? 'click' : e.type;\n      var hoveredItem;\n\n      if (type === 'mousemove') {\n        if (!opts.onHover && !opts.onLeave) {\n          return;\n        }\n      } else if (type === 'click') {\n        if (!opts.onClick) {\n          return;\n        }\n      } else {\n        return;\n      } // Chart event already has relative position in it\n\n\n      hoveredItem = me._getLegendItemAt(e.x, e.y);\n\n      if (type === 'click') {\n        if (hoveredItem && opts.onClick) {\n          // use e.native for backwards compatibility\n          opts.onClick.call(me, e.native, hoveredItem);\n        }\n      } else {\n        if (opts.onLeave && hoveredItem !== me._hoveredItem) {\n          if (me._hoveredItem) {\n            opts.onLeave.call(me, e.native, me._hoveredItem);\n          }\n\n          me._hoveredItem = hoveredItem;\n        }\n\n        if (opts.onHover && hoveredItem) {\n          // use e.native for backwards compatibility\n          opts.onHover.call(me, e.native, hoveredItem);\n        }\n      }\n    }\n  });\n\n  function createNewLegendAndAttach(chart, legendOpts) {\n    var legend = new Legend({\n      ctx: chart.ctx,\n      options: legendOpts,\n      chart: chart\n    });\n    core_layouts.configure(chart, legend, legendOpts);\n    core_layouts.addBox(chart, legend);\n    chart.legend = legend;\n  }\n\n  var plugin_legend = {\n    id: 'legend',\n\n    /**\n     * Backward compatibility: since 2.1.5, the legend is registered as a plugin, making\n     * Chart.Legend obsolete. To avoid a breaking change, we export the Legend as part of\n     * the plugin, which one will be re-exposed in the chart.js file.\n     * https://github.com/chartjs/Chart.js/pull/2640\n     * @private\n     */\n    _element: Legend,\n    beforeInit: function beforeInit(chart) {\n      var legendOpts = chart.options.legend;\n\n      if (legendOpts) {\n        createNewLegendAndAttach(chart, legendOpts);\n      }\n    },\n    beforeUpdate: function beforeUpdate(chart) {\n      var legendOpts = chart.options.legend;\n      var legend = chart.legend;\n\n      if (legendOpts) {\n        helpers$1.mergeIf(legendOpts, core_defaults.global.legend);\n\n        if (legend) {\n          core_layouts.configure(chart, legend, legendOpts);\n          legend.options = legendOpts;\n        } else {\n          createNewLegendAndAttach(chart, legendOpts);\n        }\n      } else if (legend) {\n        core_layouts.removeBox(chart, legend);\n        delete chart.legend;\n      }\n    },\n    afterEvent: function afterEvent(chart, e) {\n      var legend = chart.legend;\n\n      if (legend) {\n        legend.handleEvent(e);\n      }\n    }\n  };\n  var noop$2 = helpers$1.noop;\n\n  core_defaults._set('global', {\n    title: {\n      display: false,\n      fontStyle: 'bold',\n      fullWidth: true,\n      padding: 10,\n      position: 'top',\n      text: '',\n      weight: 2000 // by default greater than legend (1000) to be above\n\n    }\n  });\n  /**\n   * IMPORTANT: this class is exposed publicly as Chart.Legend, backward compatibility required!\n   */\n\n\n  var Title = core_element.extend({\n    initialize: function initialize(config) {\n      var me = this;\n      helpers$1.extend(me, config); // Contains hit boxes for each dataset (in dataset order)\n\n      me.legendHitBoxes = [];\n    },\n    // These methods are ordered by lifecycle. Utilities then follow.\n    beforeUpdate: noop$2,\n    update: function update(maxWidth, maxHeight, margins) {\n      var me = this; // Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\n\n      me.beforeUpdate(); // Absorb the master measurements\n\n      me.maxWidth = maxWidth;\n      me.maxHeight = maxHeight;\n      me.margins = margins; // Dimensions\n\n      me.beforeSetDimensions();\n      me.setDimensions();\n      me.afterSetDimensions(); // Labels\n\n      me.beforeBuildLabels();\n      me.buildLabels();\n      me.afterBuildLabels(); // Fit\n\n      me.beforeFit();\n      me.fit();\n      me.afterFit(); //\n\n      me.afterUpdate();\n      return me.minSize;\n    },\n    afterUpdate: noop$2,\n    //\n    beforeSetDimensions: noop$2,\n    setDimensions: function setDimensions() {\n      var me = this; // Set the unconstrained dimension before label rotation\n\n      if (me.isHorizontal()) {\n        // Reset position before calculating rotation\n        me.width = me.maxWidth;\n        me.left = 0;\n        me.right = me.width;\n      } else {\n        me.height = me.maxHeight; // Reset position before calculating rotation\n\n        me.top = 0;\n        me.bottom = me.height;\n      } // Reset padding\n\n\n      me.paddingLeft = 0;\n      me.paddingTop = 0;\n      me.paddingRight = 0;\n      me.paddingBottom = 0; // Reset minSize\n\n      me.minSize = {\n        width: 0,\n        height: 0\n      };\n    },\n    afterSetDimensions: noop$2,\n    //\n    beforeBuildLabels: noop$2,\n    buildLabels: noop$2,\n    afterBuildLabels: noop$2,\n    //\n    beforeFit: noop$2,\n    fit: function fit() {\n      var me = this;\n      var opts = me.options;\n      var display = opts.display;\n      var minSize = me.minSize;\n      var lineCount = helpers$1.isArray(opts.text) ? opts.text.length : 1;\n\n      var fontOpts = helpers$1.options._parseFont(opts);\n\n      var textSize = display ? lineCount * fontOpts.lineHeight + opts.padding * 2 : 0;\n\n      if (me.isHorizontal()) {\n        minSize.width = me.maxWidth; // fill all the width\n\n        minSize.height = textSize;\n      } else {\n        minSize.width = textSize;\n        minSize.height = me.maxHeight; // fill all the height\n      }\n\n      me.width = minSize.width;\n      me.height = minSize.height;\n    },\n    afterFit: noop$2,\n    // Shared Methods\n    isHorizontal: function isHorizontal() {\n      var pos = this.options.position;\n      return pos === 'top' || pos === 'bottom';\n    },\n    // Actually draw the title block on the canvas\n    draw: function draw() {\n      var me = this;\n      var ctx = me.ctx;\n      var opts = me.options;\n\n      if (opts.display) {\n        var fontOpts = helpers$1.options._parseFont(opts);\n\n        var lineHeight = fontOpts.lineHeight;\n        var offset = lineHeight / 2 + opts.padding;\n        var rotation = 0;\n        var top = me.top;\n        var left = me.left;\n        var bottom = me.bottom;\n        var right = me.right;\n        var maxWidth, titleX, titleY;\n        ctx.fillStyle = helpers$1.valueOrDefault(opts.fontColor, core_defaults.global.defaultFontColor); // render in correct colour\n\n        ctx.font = fontOpts.string; // Horizontal\n\n        if (me.isHorizontal()) {\n          titleX = left + (right - left) / 2; // midpoint of the width\n\n          titleY = top + offset;\n          maxWidth = right - left;\n        } else {\n          titleX = opts.position === 'left' ? left + offset : right - offset;\n          titleY = top + (bottom - top) / 2;\n          maxWidth = bottom - top;\n          rotation = Math.PI * (opts.position === 'left' ? -0.5 : 0.5);\n        }\n\n        ctx.save();\n        ctx.translate(titleX, titleY);\n        ctx.rotate(rotation);\n        ctx.textAlign = 'center';\n        ctx.textBaseline = 'middle';\n        var text = opts.text;\n\n        if (helpers$1.isArray(text)) {\n          var y = 0;\n\n          for (var i = 0; i < text.length; ++i) {\n            ctx.fillText(text[i], 0, y, maxWidth);\n            y += lineHeight;\n          }\n        } else {\n          ctx.fillText(text, 0, 0, maxWidth);\n        }\n\n        ctx.restore();\n      }\n    }\n  });\n\n  function createNewTitleBlockAndAttach(chart, titleOpts) {\n    var title = new Title({\n      ctx: chart.ctx,\n      options: titleOpts,\n      chart: chart\n    });\n    core_layouts.configure(chart, title, titleOpts);\n    core_layouts.addBox(chart, title);\n    chart.titleBlock = title;\n  }\n\n  var plugin_title = {\n    id: 'title',\n\n    /**\n     * Backward compatibility: since 2.1.5, the title is registered as a plugin, making\n     * Chart.Title obsolete. To avoid a breaking change, we export the Title as part of\n     * the plugin, which one will be re-exposed in the chart.js file.\n     * https://github.com/chartjs/Chart.js/pull/2640\n     * @private\n     */\n    _element: Title,\n    beforeInit: function beforeInit(chart) {\n      var titleOpts = chart.options.title;\n\n      if (titleOpts) {\n        createNewTitleBlockAndAttach(chart, titleOpts);\n      }\n    },\n    beforeUpdate: function beforeUpdate(chart) {\n      var titleOpts = chart.options.title;\n      var titleBlock = chart.titleBlock;\n\n      if (titleOpts) {\n        helpers$1.mergeIf(titleOpts, core_defaults.global.title);\n\n        if (titleBlock) {\n          core_layouts.configure(chart, titleBlock, titleOpts);\n          titleBlock.options = titleOpts;\n        } else {\n          createNewTitleBlockAndAttach(chart, titleOpts);\n        }\n      } else if (titleBlock) {\n        core_layouts.removeBox(chart, titleBlock);\n        delete chart.titleBlock;\n      }\n    }\n  };\n  var plugins = {};\n  var filler = plugin_filler;\n  var legend = plugin_legend;\n  var title = plugin_title;\n  plugins.filler = filler;\n  plugins.legend = legend;\n  plugins.title = title;\n  /**\n   * @namespace Chart\n   */\n\n  core_controller.helpers = helpers$1; // @todo dispatch these helpers into appropriated helpers/helpers.* file and write unit tests!\n\n  core_helpers(core_controller);\n  core_controller._adapters = core_adapters;\n  core_controller.Animation = core_animation;\n  core_controller.animationService = core_animations;\n  core_controller.controllers = controllers;\n  core_controller.DatasetController = core_datasetController;\n  core_controller.defaults = core_defaults;\n  core_controller.Element = core_element;\n  core_controller.elements = elements;\n  core_controller.Interaction = core_interaction;\n  core_controller.layouts = core_layouts;\n  core_controller.platform = platform;\n  core_controller.plugins = core_plugins;\n  core_controller.Scale = core_scale;\n  core_controller.scaleService = core_scaleService;\n  core_controller.Ticks = core_ticks;\n  core_controller.Tooltip = core_tooltip; // Register built-in scales\n\n  core_controller.helpers.each(scales, function (scale, type) {\n    core_controller.scaleService.registerScaleType(type, scale, scale._defaults);\n  }); // Load to register built-in adapters (as side effects)\n  // Loading built-in plugins\n\n  for (var k in plugins) {\n    if (plugins.hasOwnProperty(k)) {\n      core_controller.plugins.register(plugins[k]);\n    }\n  }\n\n  core_controller.platform.initialize();\n  var src = core_controller;\n\n  if (typeof window !== 'undefined') {\n    window.Chart = core_controller;\n  } // DEPRECATIONS\n\n  /**\n   * Provided for backward compatibility, not available anymore\n   * @namespace Chart.Chart\n   * @deprecated since version 2.8.0\n   * @todo remove at version 3\n   * @private\n   */\n\n\n  core_controller.Chart = core_controller;\n  /**\n   * Provided for backward compatibility, not available anymore\n   * @namespace Chart.Legend\n   * @deprecated since version 2.1.5\n   * @todo remove at version 3\n   * @private\n   */\n\n  core_controller.Legend = plugins.legend._element;\n  /**\n   * Provided for backward compatibility, not available anymore\n   * @namespace Chart.Title\n   * @deprecated since version 2.1.5\n   * @todo remove at version 3\n   * @private\n   */\n\n  core_controller.Title = plugins.title._element;\n  /**\n   * Provided for backward compatibility, use Chart.plugins instead\n   * @namespace Chart.pluginService\n   * @deprecated since version 2.1.5\n   * @todo remove at version 3\n   * @private\n   */\n\n  core_controller.pluginService = core_controller.plugins;\n  /**\n   * Provided for backward compatibility, inheriting from Chart.PlugingBase has no\n   * effect, instead simply create/register plugins via plain JavaScript objects.\n   * @interface Chart.PluginBase\n   * @deprecated since version 2.5.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  core_controller.PluginBase = core_controller.Element.extend({});\n  /**\n   * Provided for backward compatibility, use Chart.helpers.canvas instead.\n   * @namespace Chart.canvasHelpers\n   * @deprecated since version 2.6.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  core_controller.canvasHelpers = core_controller.helpers.canvas;\n  /**\n   * Provided for backward compatibility, use Chart.layouts instead.\n   * @namespace Chart.layoutService\n   * @deprecated since version 2.7.3\n   * @todo remove at version 3\n   * @private\n   */\n\n  core_controller.layoutService = core_controller.layouts;\n  /**\n   * Provided for backward compatibility, not available anymore.\n   * @namespace Chart.LinearScaleBase\n   * @deprecated since version 2.8\n   * @todo remove at version 3\n   * @private\n   */\n\n  core_controller.LinearScaleBase = scale_linearbase;\n  /**\n   * Provided for backward compatibility, instead we should create a new Chart\n   * by setting the type in the config (`new Chart(id, {type: '{chart-type}'}`).\n   * @deprecated since version 2.8.0\n   * @todo remove at version 3\n   */\n\n  core_controller.helpers.each(['Bar', 'Bubble', 'Doughnut', 'Line', 'PolarArea', 'Radar', 'Scatter'], function (klass) {\n    core_controller[klass] = function (ctx, cfg) {\n      return new core_controller(ctx, core_controller.helpers.merge(cfg || {}, {\n        type: klass.charAt(0).toLowerCase() + klass.slice(1)\n      }));\n    };\n  });\n  return src;\n});","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  noGutters: PropTypes.bool,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  form: PropTypes.bool\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar Row = function Row(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      noGutters = props.noGutters,\n      Tag = props.tag,\n      form = props.form,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"noGutters\", \"tag\", \"form\"]);\n\n  var classes = mapToCssModules(classNames(className, noGutters ? 'no-gutters' : null, form ? 'form-row' : 'row'), cssModule);\n  return React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nRow.propTypes = propTypes;\nRow.defaultProps = defaultProps;\nexport default Row;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, deprecated, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  inverse: PropTypes.bool,\n  color: PropTypes.string,\n  block: deprecated(PropTypes.bool, 'Please use the props \"body\"'),\n  body: PropTypes.bool,\n  outline: PropTypes.bool,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  innerRef: PropTypes.oneOfType([PropTypes.object, PropTypes.string, PropTypes.func])\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar Card = function Card(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      color = props.color,\n      block = props.block,\n      body = props.body,\n      inverse = props.inverse,\n      outline = props.outline,\n      Tag = props.tag,\n      innerRef = props.innerRef,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"color\", \"block\", \"body\", \"inverse\", \"outline\", \"tag\", \"innerRef\"]);\n\n  var classes = mapToCssModules(classNames(className, 'card', inverse ? 'text-white' : false, block || body ? 'card-body' : false, color ? (outline ? 'border' : 'bg') + \"-\" + color : false), cssModule);\n  return React.createElement(Tag, _extends({}, attributes, {\n    className: classes,\n    ref: innerRef\n  }));\n};\n\nCard.propTypes = propTypes;\nCard.defaultProps = defaultProps;\nexport default Card;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  innerRef: PropTypes.oneOfType([PropTypes.object, PropTypes.string, PropTypes.func])\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar CardBody = function CardBody(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      innerRef = props.innerRef,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"innerRef\", \"tag\"]);\n\n  var classes = mapToCssModules(classNames(className, 'card-body'), cssModule);\n  return React.createElement(Tag, _extends({}, attributes, {\n    className: classes,\n    ref: innerRef\n  }));\n};\n\nCardBody.propTypes = propTypes;\nCardBody.defaultProps = defaultProps;\nexport default CardBody;","var _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nfunction _objectWithoutProperties(obj, keys) {\n  var target = {};\n\n  for (var i in obj) {\n    if (keys.indexOf(i) >= 0) continue;\n    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;\n    target[i] = obj[i];\n  }\n\n  return target;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Chart from 'chart.js';\nimport isEqual from 'lodash/isEqual';\nimport keyBy from 'lodash/keyBy';\nvar NODE_ENV = typeof process !== 'undefined' && process.env && process.env.NODE_ENV;\n\nvar ChartComponent = function (_React$Component) {\n  _inherits(ChartComponent, _React$Component);\n\n  function ChartComponent() {\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, ChartComponent);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, _React$Component.call.apply(_React$Component, [this].concat(args))), _this), _this.handleOnClick = function (event) {\n      var instance = _this.chartInstance;\n      var _this$props = _this.props,\n          getDatasetAtEvent = _this$props.getDatasetAtEvent,\n          getElementAtEvent = _this$props.getElementAtEvent,\n          getElementsAtEvent = _this$props.getElementsAtEvent,\n          onElementsClick = _this$props.onElementsClick;\n      getDatasetAtEvent && getDatasetAtEvent(instance.getDatasetAtEvent(event), event);\n      getElementAtEvent && getElementAtEvent(instance.getElementAtEvent(event), event);\n      getElementsAtEvent && getElementsAtEvent(instance.getElementsAtEvent(event), event);\n      onElementsClick && onElementsClick(instance.getElementsAtEvent(event), event); // Backward compatibility\n    }, _this.ref = function (element) {\n      _this.element = element;\n    }, _temp), _possibleConstructorReturn(_this, _ret);\n  }\n\n  ChartComponent.prototype.componentWillMount = function componentWillMount() {\n    this.chartInstance = undefined;\n  };\n\n  ChartComponent.prototype.componentDidMount = function componentDidMount() {\n    this.renderChart();\n  };\n\n  ChartComponent.prototype.componentDidUpdate = function componentDidUpdate() {\n    if (this.props.redraw) {\n      this.destroyChart();\n      this.renderChart();\n      return;\n    }\n\n    this.updateChart();\n  };\n\n  ChartComponent.prototype.shouldComponentUpdate = function shouldComponentUpdate(nextProps) {\n    var _props = this.props,\n        redraw = _props.redraw,\n        type = _props.type,\n        options = _props.options,\n        plugins = _props.plugins,\n        legend = _props.legend,\n        height = _props.height,\n        width = _props.width;\n\n    if (nextProps.redraw === true) {\n      return true;\n    }\n\n    if (height !== nextProps.height || width !== nextProps.width) {\n      return true;\n    }\n\n    if (type !== nextProps.type) {\n      return true;\n    }\n\n    if (!isEqual(legend, nextProps.legend)) {\n      return true;\n    }\n\n    if (!isEqual(options, nextProps.options)) {\n      return true;\n    }\n\n    var nextData = this.transformDataProp(nextProps);\n\n    if (!isEqual(this.shadowDataProp, nextData)) {\n      return true;\n    }\n\n    return !isEqual(plugins, nextProps.plugins);\n  };\n\n  ChartComponent.prototype.componentWillUnmount = function componentWillUnmount() {\n    this.destroyChart();\n  };\n\n  ChartComponent.prototype.transformDataProp = function transformDataProp(props) {\n    var data = props.data;\n\n    if (typeof data == 'function') {\n      var node = this.element;\n      return data(node);\n    } else {\n      return data;\n    }\n  }; // Chart.js directly mutates the data.dataset objects by adding _meta proprerty\n  // this makes impossible to compare the current and next data changes\n  // therefore we memoize the data prop while sending a fake to Chart.js for mutation.\n  // see https://github.com/chartjs/Chart.js/blob/master/src/core/core.controller.js#L615-L617\n\n\n  ChartComponent.prototype.memoizeDataProps = function memoizeDataProps() {\n    if (!this.props.data) {\n      return;\n    }\n\n    var data = this.transformDataProp(this.props);\n    this.shadowDataProp = _extends({}, data, {\n      datasets: data.datasets && data.datasets.map(function (set) {\n        return _extends({}, set);\n      })\n    });\n    this.saveCurrentDatasets(); // to remove the dataset metadata from this chart when the chart is destroyed\n\n    return data;\n  };\n\n  ChartComponent.prototype.checkDatasets = function checkDatasets(datasets) {\n    var isDev = NODE_ENV !== 'production' && NODE_ENV !== 'prod';\n    var usingCustomKeyProvider = this.props.datasetKeyProvider !== ChartComponent.getLabelAsKey;\n    var multipleDatasets = datasets.length > 1;\n\n    if (isDev && multipleDatasets && !usingCustomKeyProvider) {\n      var shouldWarn = false;\n      datasets.forEach(function (dataset) {\n        if (!dataset.label) {\n          shouldWarn = true;\n        }\n      });\n\n      if (shouldWarn) {\n        console.error('[react-chartjs-2] Warning: Each dataset needs a unique key. By default, the \"label\" property on each dataset is used. Alternatively, you may provide a \"datasetKeyProvider\" as a prop that returns a unique key.');\n      }\n    }\n  };\n\n  ChartComponent.prototype.getCurrentDatasets = function getCurrentDatasets() {\n    return this.chartInstance && this.chartInstance.config.data && this.chartInstance.config.data.datasets || [];\n  };\n\n  ChartComponent.prototype.saveCurrentDatasets = function saveCurrentDatasets() {\n    var _this2 = this;\n\n    this.datasets = this.datasets || {};\n    var currentDatasets = this.getCurrentDatasets();\n    currentDatasets.forEach(function (d) {\n      _this2.datasets[_this2.props.datasetKeyProvider(d)] = d;\n    });\n  };\n\n  ChartComponent.prototype.updateChart = function updateChart() {\n    var _this3 = this;\n\n    var options = this.props.options;\n    var data = this.memoizeDataProps(this.props);\n    if (!this.chartInstance) return;\n\n    if (options) {\n      this.chartInstance.options = Chart.helpers.configMerge(this.chartInstance.options, options);\n    } // Pipe datasets to chart instance datasets enabling\n    // seamless transitions\n\n\n    var currentDatasets = this.getCurrentDatasets();\n    var nextDatasets = data.datasets || [];\n    this.checkDatasets(currentDatasets);\n    var currentDatasetsIndexed = keyBy(currentDatasets, this.props.datasetKeyProvider); // We can safely replace the dataset array, as long as we retain the _meta property\n    // on each dataset.\n\n    this.chartInstance.config.data.datasets = nextDatasets.map(function (next) {\n      var current = currentDatasetsIndexed[_this3.props.datasetKeyProvider(next)];\n\n      if (current && current.type === next.type) {\n        // The data array must be edited in place. As chart.js adds listeners to it.\n        current.data.splice(next.data.length);\n        next.data.forEach(function (point, pid) {\n          current.data[pid] = next.data[pid];\n        });\n\n        var _data = next.data,\n            otherProps = _objectWithoutProperties(next, ['data']); // Merge properties. Notice a weakness here. If a property is removed\n        // from next, it will be retained by current and never disappears.\n        // Workaround is to set value to null or undefined in next.\n\n\n        return _extends({}, current, otherProps);\n      } else {\n        return next;\n      }\n    });\n\n    var datasets = data.datasets,\n        rest = _objectWithoutProperties(data, ['datasets']);\n\n    this.chartInstance.config.data = _extends({}, this.chartInstance.config.data, rest);\n    this.chartInstance.update();\n  };\n\n  ChartComponent.prototype.renderChart = function renderChart() {\n    var _props2 = this.props,\n        options = _props2.options,\n        legend = _props2.legend,\n        type = _props2.type,\n        plugins = _props2.plugins;\n    var node = this.element;\n    var data = this.memoizeDataProps();\n\n    if (typeof legend !== 'undefined' && !isEqual(ChartComponent.defaultProps.legend, legend)) {\n      options.legend = legend;\n    }\n\n    this.chartInstance = new Chart(node, {\n      type: type,\n      data: data,\n      options: options,\n      plugins: plugins\n    });\n  };\n\n  ChartComponent.prototype.destroyChart = function destroyChart() {\n    // Put all of the datasets that have existed in the chart back on the chart\n    // so that the metadata associated with this chart get destroyed.\n    // This allows the datasets to be used in another chart. This can happen,\n    // for example, in a tabbed UI where the chart gets created each time the\n    // tab gets switched to the chart and uses the same data).\n    this.saveCurrentDatasets();\n    var datasets = Object.values(this.datasets);\n    this.chartInstance.config.data.datasets = datasets;\n    this.chartInstance.destroy();\n  };\n\n  ChartComponent.prototype.render = function render() {\n    var _props3 = this.props,\n        height = _props3.height,\n        width = _props3.width,\n        id = _props3.id;\n    return React.createElement('canvas', {\n      ref: this.ref,\n      height: height,\n      width: width,\n      id: id,\n      onClick: this.handleOnClick\n    });\n  };\n\n  return ChartComponent;\n}(React.Component);\n\nChartComponent.getLabelAsKey = function (d) {\n  return d.label;\n};\n\nChartComponent.propTypes = {\n  data: PropTypes.oneOfType([PropTypes.object, PropTypes.func]).isRequired,\n  getDatasetAtEvent: PropTypes.func,\n  getElementAtEvent: PropTypes.func,\n  getElementsAtEvent: PropTypes.func,\n  height: PropTypes.number,\n  legend: PropTypes.object,\n  onElementsClick: PropTypes.func,\n  options: PropTypes.object,\n  plugins: PropTypes.arrayOf(PropTypes.object),\n  redraw: PropTypes.bool,\n  type: function type(props, propName, componentName) {\n    if (!Chart.controllers[props[propName]]) {\n      return new Error('Invalid chart type `' + props[propName] + '` supplied to' + ' `' + componentName + '`.');\n    }\n  },\n  width: PropTypes.number,\n  datasetKeyProvider: PropTypes.func\n};\nChartComponent.defaultProps = {\n  legend: {\n    display: true,\n    position: 'bottom'\n  },\n  type: 'doughnut',\n  height: 150,\n  width: 300,\n  redraw: false,\n  options: {},\n  datasetKeyProvider: ChartComponent.getLabelAsKey\n};\nexport default ChartComponent;\nexport var Doughnut = function (_React$Component2) {\n  _inherits(Doughnut, _React$Component2);\n\n  function Doughnut() {\n    _classCallCheck(this, Doughnut);\n\n    return _possibleConstructorReturn(this, _React$Component2.apply(this, arguments));\n  }\n\n  Doughnut.prototype.render = function render() {\n    var _this5 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref) {\n        return _this5.chartInstance = _ref && _ref.chartInstance;\n      },\n      type: 'doughnut'\n    }));\n  };\n\n  return Doughnut;\n}(React.Component);\nexport var Pie = function (_React$Component3) {\n  _inherits(Pie, _React$Component3);\n\n  function Pie() {\n    _classCallCheck(this, Pie);\n\n    return _possibleConstructorReturn(this, _React$Component3.apply(this, arguments));\n  }\n\n  Pie.prototype.render = function render() {\n    var _this7 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref2) {\n        return _this7.chartInstance = _ref2 && _ref2.chartInstance;\n      },\n      type: 'pie'\n    }));\n  };\n\n  return Pie;\n}(React.Component);\nexport var Line = function (_React$Component4) {\n  _inherits(Line, _React$Component4);\n\n  function Line() {\n    _classCallCheck(this, Line);\n\n    return _possibleConstructorReturn(this, _React$Component4.apply(this, arguments));\n  }\n\n  Line.prototype.render = function render() {\n    var _this9 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref3) {\n        return _this9.chartInstance = _ref3 && _ref3.chartInstance;\n      },\n      type: 'line'\n    }));\n  };\n\n  return Line;\n}(React.Component);\nexport var Bar = function (_React$Component5) {\n  _inherits(Bar, _React$Component5);\n\n  function Bar() {\n    _classCallCheck(this, Bar);\n\n    return _possibleConstructorReturn(this, _React$Component5.apply(this, arguments));\n  }\n\n  Bar.prototype.render = function render() {\n    var _this11 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref4) {\n        return _this11.chartInstance = _ref4 && _ref4.chartInstance;\n      },\n      type: 'bar'\n    }));\n  };\n\n  return Bar;\n}(React.Component);\nexport var HorizontalBar = function (_React$Component6) {\n  _inherits(HorizontalBar, _React$Component6);\n\n  function HorizontalBar() {\n    _classCallCheck(this, HorizontalBar);\n\n    return _possibleConstructorReturn(this, _React$Component6.apply(this, arguments));\n  }\n\n  HorizontalBar.prototype.render = function render() {\n    var _this13 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref5) {\n        return _this13.chartInstance = _ref5 && _ref5.chartInstance;\n      },\n      type: 'horizontalBar'\n    }));\n  };\n\n  return HorizontalBar;\n}(React.Component);\nexport var Radar = function (_React$Component7) {\n  _inherits(Radar, _React$Component7);\n\n  function Radar() {\n    _classCallCheck(this, Radar);\n\n    return _possibleConstructorReturn(this, _React$Component7.apply(this, arguments));\n  }\n\n  Radar.prototype.render = function render() {\n    var _this15 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref6) {\n        return _this15.chartInstance = _ref6 && _ref6.chartInstance;\n      },\n      type: 'radar'\n    }));\n  };\n\n  return Radar;\n}(React.Component);\nexport var Polar = function (_React$Component8) {\n  _inherits(Polar, _React$Component8);\n\n  function Polar() {\n    _classCallCheck(this, Polar);\n\n    return _possibleConstructorReturn(this, _React$Component8.apply(this, arguments));\n  }\n\n  Polar.prototype.render = function render() {\n    var _this17 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref7) {\n        return _this17.chartInstance = _ref7 && _ref7.chartInstance;\n      },\n      type: 'polarArea'\n    }));\n  };\n\n  return Polar;\n}(React.Component);\nexport var Bubble = function (_React$Component9) {\n  _inherits(Bubble, _React$Component9);\n\n  function Bubble() {\n    _classCallCheck(this, Bubble);\n\n    return _possibleConstructorReturn(this, _React$Component9.apply(this, arguments));\n  }\n\n  Bubble.prototype.render = function render() {\n    var _this19 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref8) {\n        return _this19.chartInstance = _ref8 && _ref8.chartInstance;\n      },\n      type: 'bubble'\n    }));\n  };\n\n  return Bubble;\n}(React.Component);\nexport var Scatter = function (_React$Component10) {\n  _inherits(Scatter, _React$Component10);\n\n  function Scatter() {\n    _classCallCheck(this, Scatter);\n\n    return _possibleConstructorReturn(this, _React$Component10.apply(this, arguments));\n  }\n\n  Scatter.prototype.render = function render() {\n    var _this21 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref9) {\n        return _this21.chartInstance = _ref9 && _ref9.chartInstance;\n      },\n      type: 'scatter'\n    }));\n  };\n\n  return Scatter;\n}(React.Component);\nexport var defaults = Chart.defaults;\nexport { Chart };","var baseAssignValue = require('./_baseAssignValue'),\n    createAggregator = require('./_createAggregator');\n/**\n * Creates an object composed of keys generated from the results of running\n * each element of `collection` thru `iteratee`. The corresponding value of\n * each key is the last element responsible for generating the key. The\n * iteratee is invoked with one argument: (value).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [iteratee=_.identity] The iteratee to transform keys.\n * @returns {Object} Returns the composed aggregate object.\n * @example\n *\n * var array = [\n *   { 'dir': 'left', 'code': 97 },\n *   { 'dir': 'right', 'code': 100 }\n * ];\n *\n * _.keyBy(array, function(o) {\n *   return String.fromCharCode(o.code);\n * });\n * // => { 'a': { 'dir': 'left', 'code': 97 }, 'd': { 'dir': 'right', 'code': 100 } }\n *\n * _.keyBy(array, 'dir');\n * // => { 'left': { 'dir': 'left', 'code': 97 }, 'right': { 'dir': 'right', 'code': 100 } }\n */\n\n\nvar keyBy = createAggregator(function (result, value, key) {\n  baseAssignValue(result, key, value);\n});\nmodule.exports = keyBy;","var defineProperty = require('./_defineProperty');\n/**\n * The base implementation of `assignValue` and `assignMergeValue` without\n * value checks.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {string} key The key of the property to assign.\n * @param {*} value The value to assign.\n */\n\n\nfunction baseAssignValue(object, key, value) {\n  if (key == '__proto__' && defineProperty) {\n    defineProperty(object, key, {\n      'configurable': true,\n      'enumerable': true,\n      'value': value,\n      'writable': true\n    });\n  } else {\n    object[key] = value;\n  }\n}\n\nmodule.exports = baseAssignValue;","var getNative = require('./_getNative');\n\nvar defineProperty = function () {\n  try {\n    var func = getNative(Object, 'defineProperty');\n    func({}, '', {});\n    return func;\n  } catch (e) {}\n}();\n\nmodule.exports = defineProperty;","var arrayAggregator = require('./_arrayAggregator'),\n    baseAggregator = require('./_baseAggregator'),\n    baseIteratee = require('./_baseIteratee'),\n    isArray = require('./isArray');\n/**\n * Creates a function like `_.groupBy`.\n *\n * @private\n * @param {Function} setter The function to set accumulator values.\n * @param {Function} [initializer] The accumulator object initializer.\n * @returns {Function} Returns the new aggregator function.\n */\n\n\nfunction createAggregator(setter, initializer) {\n  return function (collection, iteratee) {\n    var func = isArray(collection) ? arrayAggregator : baseAggregator,\n        accumulator = initializer ? initializer() : {};\n    return func(collection, setter, baseIteratee(iteratee, 2), accumulator);\n  };\n}\n\nmodule.exports = createAggregator;","/**\n * A specialized version of `baseAggregator` for arrays.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} setter The function to set `accumulator` values.\n * @param {Function} iteratee The iteratee to transform keys.\n * @param {Object} accumulator The initial aggregated object.\n * @returns {Function} Returns `accumulator`.\n */\nfunction arrayAggregator(array, setter, iteratee, accumulator) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    var value = array[index];\n    setter(accumulator, value, iteratee(value), array);\n  }\n\n  return accumulator;\n}\n\nmodule.exports = arrayAggregator;","var baseEach = require('./_baseEach');\n/**\n * Aggregates elements of `collection` on `accumulator` with keys transformed\n * by `iteratee` and values set by `setter`.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} setter The function to set `accumulator` values.\n * @param {Function} iteratee The iteratee to transform keys.\n * @param {Object} accumulator The initial aggregated object.\n * @returns {Function} Returns `accumulator`.\n */\n\n\nfunction baseAggregator(collection, setter, iteratee, accumulator) {\n  baseEach(collection, function (value, key, collection) {\n    setter(accumulator, value, iteratee(value), collection);\n  });\n  return accumulator;\n}\n\nmodule.exports = baseAggregator;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport isobject from 'lodash.isobject';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, deprecated, tagPropType } from './utils';\nvar colWidths = ['xs', 'sm', 'md', 'lg', 'xl'];\nvar stringOrNumberProp = PropTypes.oneOfType([PropTypes.number, PropTypes.string]);\nvar columnProps = PropTypes.oneOfType([PropTypes.bool, PropTypes.number, PropTypes.string, PropTypes.shape({\n  size: PropTypes.oneOfType([PropTypes.bool, PropTypes.number, PropTypes.string]),\n  push: deprecated(stringOrNumberProp, 'Please use the prop \"order\"'),\n  pull: deprecated(stringOrNumberProp, 'Please use the prop \"order\"'),\n  order: stringOrNumberProp,\n  offset: stringOrNumberProp\n})]);\nvar propTypes = {\n  tag: tagPropType,\n  xs: columnProps,\n  sm: columnProps,\n  md: columnProps,\n  lg: columnProps,\n  xl: columnProps,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  widths: PropTypes.array\n};\nvar defaultProps = {\n  tag: 'div',\n  widths: colWidths\n};\n\nvar getColumnSizeClass = function getColumnSizeClass(isXs, colWidth, colSize) {\n  if (colSize === true || colSize === '') {\n    return isXs ? 'col' : \"col-\" + colWidth;\n  } else if (colSize === 'auto') {\n    return isXs ? 'col-auto' : \"col-\" + colWidth + \"-auto\";\n  }\n\n  return isXs ? \"col-\" + colSize : \"col-\" + colWidth + \"-\" + colSize;\n};\n\nvar Col = function Col(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      widths = props.widths,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"widths\", \"tag\"]);\n\n  var colClasses = [];\n  widths.forEach(function (colWidth, i) {\n    var columnProp = props[colWidth];\n    delete attributes[colWidth];\n\n    if (!columnProp && columnProp !== '') {\n      return;\n    }\n\n    var isXs = !i;\n\n    if (isobject(columnProp)) {\n      var _classNames;\n\n      var colSizeInterfix = isXs ? '-' : \"-\" + colWidth + \"-\";\n      var colClass = getColumnSizeClass(isXs, colWidth, columnProp.size);\n      colClasses.push(mapToCssModules(classNames((_classNames = {}, _classNames[colClass] = columnProp.size || columnProp.size === '', _classNames[\"order\" + colSizeInterfix + columnProp.order] = columnProp.order || columnProp.order === 0, _classNames[\"offset\" + colSizeInterfix + columnProp.offset] = columnProp.offset || columnProp.offset === 0, _classNames)), cssModule));\n    } else {\n      var _colClass = getColumnSizeClass(isXs, colWidth, columnProp);\n\n      colClasses.push(_colClass);\n    }\n  });\n\n  if (!colClasses.length) {\n    colClasses.push('col');\n  }\n\n  var classes = mapToCssModules(classNames(className, colClasses), cssModule);\n  return React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nCol.propTypes = propTypes;\nCol.defaultProps = defaultProps;\nexport default Col;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar CardHeader = function CardHeader(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"tag\"]);\n\n  var classes = mapToCssModules(classNames(className, 'card-header'), cssModule);\n  return React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nCardHeader.propTypes = propTypes;\nCardHeader.defaultProps = defaultProps;\nexport default CardHeader;"],"sourceRoot":""}