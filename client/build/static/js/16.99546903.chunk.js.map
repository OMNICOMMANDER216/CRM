{"version":3,"sources":["views/Dashboard/DashboardListItem.js","views/Dashboard/DashboardList.js","views/Dashboard/DashboardDonut.js","views/Dashboard/Dashboard.js"],"names":["DashboardListItem","_ref","user","react_default","a","createElement","className","ListGroup","ListGroupItem","active","tag","action","concat","firstName","lastName","Badge","color","size","customers","length","map","customer","index","key","Link","to","_id","name","DashboardList","pms","this","props","users","filter","role","Row","pm","Col","xs","sm","lg","Component","styles","animated_div","width","card","minWidth","margin","doughnut","labels","datasets","data","backgroundColor","hoverBackgroundColor","Charts","style","Card","CardHeader","CardBody","react_chartjs_2_es","Dashboard","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","toggle","setState","dropdownOpen","state","onRadioBtnClick","radioSelected","loading","dashboardData","currentMonth","monthlyProjection","inDev","total","DashboardDonut","DashboardList_DashboardList","connect","dispatch","loadUsers","StoreInit","RequireAuth"],"mappings":"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","file":"static/js/16.99546903.chunk.js","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { ListGroup, ListGroupItem, Badge } from 'reactstrap';\n\nexport default ({user}) => {\n  \n  return (\n    <div className=\"m-4\">\n        <ListGroup>\n          <ListGroupItem active tag=\"button\" action>{`${user.firstName} ${user.lastName}`} <Badge color=\"secondary\" size=\"lg\">{user.customers.length}</Badge></ListGroupItem>\n          {user.customers.map( (customer, index) => <ListGroupItem key={index} tag=\"button\" action><Link to={`/customers/${customer._id}`}>{customer.name}</Link></ListGroupItem>)}\n        </ListGroup>\n    </div>\n  )\n}\n","import React, { Component } from 'react';\nimport { Row, Col } from 'reactstrap';\nimport ListItem from \"./DashboardListItem\";\n\nexport default class DashboardList extends Component {\n  render() {\n    const {users} = this.props;\n    let pms = users.filter(user => user.role === \"Pm\");\n    \n    return (\n          <Row>\n            {pms && pms.map((pm, index) => (\n                <Col xs=\"12\" sm=\"6\" lg=\"4\" key={index}>\n                  <ListItem user = {pm}/>\n                </Col>\n              )\n            )\n            }\n          </Row>\n    )\n  }\n}\n","import React, { Component } from 'react';\nimport { Doughnut } from 'react-chartjs-2';\nimport { Card, CardBody, CardHeader } from 'reactstrap';\n\nconst styles = {\n  animated_div: {\n    width: \"100%\",\n  },\n  card : {\n    width: \"50%\",\n    minWidth: \"300px\",\n    margin: \"0 auto\"\n  }\n};\n\nconst doughnut = {\n  labels: [\n    'Total Live',\n    'Currently in Dev',\n    'Live this month',\n  ],\n  datasets: [\n    {\n      data: [190, 50, 8],\n      backgroundColor: [\n        '#FF6384',\n        '#36A2EB',\n        '#FFCE56',\n      ],\n      hoverBackgroundColor: [\n        '#FF6384',\n        '#36A2EB',\n        '#FFCE56',\n      ],\n    }],\n};\n\nclass Charts extends Component {\n  render() {\n    return (\n      <div className=\"animated fadeIn d-flex justify-content-center\" style={styles.animated_div}>\n          <Card style={styles.card}>\n            <CardHeader>\n              Doughnut Chart\n            </CardHeader>\n            <CardBody>\n              <div className=\"chart-wrapper\">\n                <Doughnut data={doughnut} />\n              </div>\n            </CardBody>\n          </Card>\n      </div>\n    );\n  }\n}\n\nexport default Charts;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport DashboardList from \"./DashboardList\";\nimport DashboardDonut from \"./DashboardDonut\";\nimport { Card, CardBody, Col, Row, } from 'reactstrap';\nimport RequireAuth from '../../helpers/RequireAuth';\nimport { loadUsers } from '../../store/actions/usersActions';\nimport StoreInit from '../../helpers/initStore';\n\n\nclass Dashboard extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      dropdownOpen: false,\n      radioSelected: 2\n    };\n  }\n\n  toggle = () => {\n    this.setState({\n      dropdownOpen: !this.state.dropdownOpen,\n    });\n  }\n\n  onRadioBtnClick = (radioSelected) => {\n    this.setState({\n      radioSelected: radioSelected,\n    });\n  }\n\n  loading = () => <div className=\"animated fadeIn pt-1 text-center\">Loading...</div>\n\n  render() {\n    const dashboardData = {\n      currentMonth : 8,\n      monthlyProjection : 21,\n      inDev : 45,\n      total : 217\n    }\n    return (\n      <div className=\"animated fadeIn\">\n        <Row>\n          <Col xs=\"12\" sm=\"6\" lg=\"3\">\n            <Card className=\"text-white text-center bg-info p-4\">\n              <CardBody className=\"pb-0\">\n                <div className=\"text-value\">{dashboardData.currentMonth}</div>\n                <div>Live this Month</div>\n              </CardBody>\n            </Card>\n          </Col>\n\n          <Col xs=\"12\" sm=\"6\" lg=\"3\">\n            <Card className=\"text-white text-center bg-primary p-4\">\n              <CardBody className=\"pb-0\">\n                <div className=\"text-value\">{dashboardData.monthlyProjection}</div>\n                <div>Projection for Current Month</div>\n              </CardBody>\n            </Card>\n          </Col>\n\n          <Col xs=\"12\" sm=\"6\" lg=\"3\">\n            <Card className=\"text-white text-center bg-warning p-4\">\n              <CardBody className=\"pb-0\">\n                <div className=\"text-value\">{dashboardData.inDev}</div>\n                <div>Currently in Development </div>\n              </CardBody>\n            </Card>\n          </Col>\n\n          <Col xs=\"12\" sm=\"6\" lg=\"3\">\n            <Card className=\"text-white text-center bg-success p-4\">\n              <CardBody className=\"pb-0\">\n                <div className=\"text-value\">{dashboardData.total}</div>\n                <div>Total Website Live</div>\n              </CardBody>\n            </Card>\n          </Col>\n        </Row>\n        <Row>\n            <DashboardDonut dashboardData = {dashboardData}/>\n        </Row>\n  \n        <DashboardList users = {this.props.users} />\n      </div>\n    );\n  }\n}\n\nDashboard.propTypes = {\n  users: PropTypes.array\n}\n\nconst mapDispatchToProps = dispatch => ({\n loadUsers: () => dispatch(loadUsers())\n})\n\nconst mapStateToProps = state => ({\n  users: state.users\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(StoreInit(RequireAuth(Dashboard)));\n"],"sourceRoot":""}