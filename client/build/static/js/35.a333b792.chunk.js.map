{"version":3,"sources":["../node_modules/reactstrap/es/ListGroup.js","../node_modules/reactstrap/es/ListGroupItem.js","../node_modules/reactstrap/es/Col.js","../node_modules/lodash.isobject/index.js","../node_modules/reactstrap/es/Row.js","../node_modules/reactstrap/es/Card.js","../node_modules/reactstrap/es/CardBody.js","../node_modules/chart.js/dist/Chart.js","../node_modules/react-chartjs-2/es/index.js","../node_modules/lodash/keyBy.js","../node_modules/lodash/_baseAssignValue.js","../node_modules/lodash/_defineProperty.js","../node_modules/lodash/_createAggregator.js","../node_modules/lodash/_arrayAggregator.js","../node_modules/lodash/_baseAggregator.js","../node_modules/reactstrap/es/CardHeader.js"],"names":["_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","_babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_1__","react__WEBPACK_IMPORTED_MODULE_2__","react__WEBPACK_IMPORTED_MODULE_2___default","n","prop_types__WEBPACK_IMPORTED_MODULE_3__","prop_types__WEBPACK_IMPORTED_MODULE_3___default","classnames__WEBPACK_IMPORTED_MODULE_4__","classnames__WEBPACK_IMPORTED_MODULE_4___default","_utils__WEBPACK_IMPORTED_MODULE_5__","propTypes","tag","flush","a","bool","className","string","cssModule","object","ListGroup","props","Tag","attributes","Object","classes","createElement","defaultProps","__webpack_exports__","active","disabled","color","action","any","handleDisabledOnClick","e","preventDefault","ListGroupItem","onClick","lodash_isobject__WEBPACK_IMPORTED_MODULE_2__","lodash_isobject__WEBPACK_IMPORTED_MODULE_2___default","react__WEBPACK_IMPORTED_MODULE_3__","react__WEBPACK_IMPORTED_MODULE_3___default","prop_types__WEBPACK_IMPORTED_MODULE_4__","prop_types__WEBPACK_IMPORTED_MODULE_4___default","classnames__WEBPACK_IMPORTED_MODULE_5__","classnames__WEBPACK_IMPORTED_MODULE_5___default","_utils__WEBPACK_IMPORTED_MODULE_6__","stringOrNumberProp","oneOfType","number","columnProps","shape","size","push","pull","order","offset","xs","sm","md","lg","xl","widths","array","getColumnSizeClass","isXs","colWidth","colSize","Col","colClasses","forEach","i","columnProp","_classNames","colSizeInterfix","colClass","_colClass","length","module","exports","value","type","noGutters","form","Row","inverse","block","body","outline","innerRef","func","Card","ref","CardBody","moment","hasOwnProperty","conversions","rgb2hsl","rgb2hsv","rgb2hwb","rgb2cmyk","rgb2keyword","rgb2xyz","rgb2lab","rgb2lch","args","lab2lch","hsl2rgb","hsl2hsv","hsl","h","s","l","hsl2hwb","hsl2cmyk","hsl2keyword","hsv2rgb","hsv2hsl","hsv","sl","v","hsv2hwb","hsv2cmyk","hsv2keyword","hwb2rgb","hwb2hsl","hwb2hsv","hwb2cmyk","hwb2keyword","cmyk2rgb","cmyk2hsl","cmyk2hsv","cmyk2hwb","cmyk2keyword","keyword2rgb","keyword2hsl","keyword2hsv","keyword2hwb","keyword2cmyk","keyword2lab","keyword2xyz","xyz2rgb","xyz2lab","xyz2lch","lab2xyz","lab2rgb","lch2lab","lch2xyz","lch2rgb","rgb","r","g","b","min","Math","max","delta","w","k","reverseKeywords","JSON","stringify","pow","x","y","z","xyz","t1","t2","t3","val","hi","floor","f","p","q","t","hwb","wh","bl","ratio","cmyk","c","m","lab","y2","hr","atan2","PI","sqrt","lch","cos","sin","keyword","cssKeywords","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","key","convert","Converter","arg","Array","prototype","slice","call","arguments","pair","exec","from","to","undefined","round","this","convs","routeSpace","space","values","getValues","setValues","vals","fspace","colorConvert","colorName","colorString","getRgba","getHsla","getRgb","rgba","getHsl","hsla","getHwb","getAlpha","hexString","hexDouble","rgbString","alpha","rgbaString","percentString","percentaString","hslString","hslaString","hwbString","reverseNames","match","hexAlpha","parseInt","parseFloat","scale","isNaN","num","str","toString","toUpperCase","name","Color","obj","valid","lightness","whiteness","isValid","setSpace","rgbArray","hslArray","hsvArray","hwbArray","concat","cmykArray","rgbaArray","hslaArray","setChannel","hue","saturation","saturationv","blackness","rgbNumber","luminosity","lum","chan","contrast","color2","lum1","lum2","level","contrastRatio","dark","light","negate","lighten","darken","saturate","desaturate","whiten","blacken","greyscale","clearer","opaquer","rotate","degrees","mix","mixinColor","weight","w1","w2","toJSON","clone","result","source","target","prop","console","error","spaces","maxes","charAt","capped","chans","sname","index","svalues","window","chartjsColor","helpers","noop","uid","id","isNullOrUndef","isArray","substr","isObject","isFinite","_isFinite","_x","apply","Number","valueOrDefault","defaultValue","valueAtIndexOrDefault","callback","fn","thisArg","each","loopable","reverse","len","keys","arrayEquals","a0","a1","ilen","v0","v1","map","klen","_merger","options","tval","sval","merge","_mergerIf","mergeIf","sources","merger","extend","setFn","inherits","extensions","me","ChartElement","constructor","Surrogate","__super__","helpers_core","callCallback","indexOf","item","fromIndex","getValueOrDefault","getValueAtIndexOrDefault","effects","linear","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easeInSine","easeOutSine","easeInOutSine","easeInExpo","easeOutExpo","easeInOutExpo","easeInCirc","easeOutCirc","easeInOutCirc","easeInElastic","asin","easeOutElastic","easeInOutElastic","easeInBack","easeOutBack","easeInOutBack","easeInBounce","easeOutBounce","easeInOutBounce","helpers_easing","easingEffects","RAD_PER_DEG","DOUBLE_PI","HALF_PI","QUARTER_PI","TWO_THIRDS_PI","exports$1","clear","chart","ctx","clearRect","width","height","roundedRect","radius","left","top","right","bottom","moveTo","arc","closePath","rect","drawPoint","style","rotation","xOffset","yOffset","cornerRadius","rad","beginPath","lineTo","SQRT1_2","fill","stroke","drawImage","_isPointInArea","point","area","clipArea","save","clip","unclipArea","restore","previous","flip","stepped","steppedLine","midpoint","tension","bezierCurveTo","controlPointPreviousX","controlPointNextX","controlPointPreviousY","controlPointNextY","helpers_canvas","drawRoundedRectangle","defaults","_set","scope","defaultColor","defaultFontColor","defaultFontFamily","defaultFontSize","defaultFontStyle","defaultLineHeight","showLines","core_defaults","helpers_options","toLineHeight","matches","toPadding","_parseFont","globalDefaults","global","fontSize","font","family","fontFamily","lineHeight","fontStyle","toFontString","resolve","inputs","context","helpers$1","easing","canvas","Element","configuration","initialize","hidden","pivot","_view","_model","_start","transition","ease","model","start","view","actual","origin","c0","c1","interpolate","tooltipPosition","hasValue","isNumber","core_element","exports$2","currentStep","numSteps","render","onAnimationProgress","onAnimationComplete","core_animation","defineProperty","get","set","animation","duration","onProgress","onComplete","core_animations","animations","request","addAnimation","lazy","startTime","Date","now","animating","requestAnimationFrame","cancelAnimation","findIndex","splice","requestAnimFrame","startDigest","advance","nextStep","arrayEvents","unlistenArrayEvents","listener","stub","_chartjs","listeners","DatasetController","datasetIndex","datasetElementType","dataElementType","linkScales","addElements","updateIndex","meta","getMeta","dataset","getDataset","xAxisID","scales","xAxes","yAxisID","yAxes","data","datasets","getDatasetMeta","getScaleForId","scaleID","_getValueScaleId","_getIndexScaleId","_getValueScale","_getIndexScale","reset","update","destroy","_data","createMetaDataset","_chart","_datasetIndex","createMetaData","_index","metaData","addElementAndReset","element","updateElement","buildOrUpdateElements","isExtensible","configurable","enumerable","method","base","res","resyncElements","easingValue","elements","draw","removeHoverStyle","$previousStyle","setHoverStyle","custom","getHoverColor","backgroundColor","borderColor","borderWidth","hoverBackgroundColor","hoverBorderColor","hoverBorderWidth","numMeta","numData","insertElements","count","onDataPush","onDataPop","pop","onDataShift","shift","onDataSplice","onDataUnshift","core_datasetController","borderAlign","element_arc","inLabelRange","mouseX","vm","hoverRadius","inRange","chartX","chartY","pointRelativePosition","getAngleFromPoint","angle","distance","startAngle","endAngle","betweenAngles","withinRadius","innerRadius","outerRadius","getCenterPoint","halfAngle","halfRadius","getArea","centreAngle","rangeFromCentre","angleMargin","sA","eA","pixelMargin","fillStyle","lineWidth","lineJoin","strokeStyle","valueOrDefault$1","line","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","capBezierPoints","element_line","current","currentVM","spanGaps","points","_children","globalOptionLineElements","lastDrawnIndex","_loop","lineCap","setLineDash","lineDashOffset","previousItem","skip","valueOrDefault$2","defaultColor$1","xRange","abs","hitRadius","pointStyle","element_point","mouseY","inXRange","inYRange","padding","chartArea","defaultColor$2","isVertical","getBarBounds","x1","x2","y1","half","swap","orig","v2","parseBorderWidth","maxW","maxH","edge","borderSkipped","horizontal","parseBorderSkipped","_inRange","skipX","skipY","bounds","rectangle","element_rectangle","rects","border","outer","inner","boundingRects","fillRect","Arc","Line","Point","Rectangle","resolve$1","hover","mode","categoryPercentage","barPercentage","gridLines","offsetGridLines","controller_bar","stack","bar","_ruler","getRuler","_resolveElementOptions","_xScale","_yScale","datasetLabel","label","labels","_updateElementGeometry","vscale","getBasePixel","isHorizontal","ruler","vpixels","calculateBarValuePixels","ipixels","calculateBarIndexPixels","head","center","_getStacks","last","stacked","stacks","isDatasetVisible","getStackCount","getStackIndex","stackCount","end","pixels","getPixelForValue","barThickness","prev","curr","ticks","getTicks","getPixelForTick","computeMinSampleSize","imeta","ivalue","getRightValue","minBarLength","controller","range","next","percent","chunk","computeFlexCategoryTraits","thickness","computeFitCategoryTraits","stackIndex","maxBarThickness","Infinity","dataIndex","valueOrDefault$3","resolve$2","position","tooltips","callbacks","title","dataPoint","xLabel","yLabel","controller_bubble","xScale","yScale","dsIndex","getPixelForDecimal","NaN","_options","resolve$3","valueOrDefault$4","animateRotate","animateScale","legendCallback","text","join","legend","generateLabels","ds","arcOpts","bw","legendItem","cutoutPercentage","circumference","tooltipItem","dataLabel","controller_doughnut","getRingIndex","ringIndex","j","opts","availableWidth","availableHeight","minSize","arcs","chartWeight","_getRingWeight","contains0","contains90","contains180","contains270","cutout","getMaxBorderWidth","radiusLength","_getVisibleDatasetWeightTotal","offsetX","offsetY","total","calculateTotal","_getRingWeightOffset","animationOpts","centerX","centerY","calculateCircumference","hoverWidth","ringWeightOffset","dataSetIndex","axis","controller_horizontalBar","valueOrDefault$5","resolve$4","isPointInArea","lineEnabled","showLine","controller_line","lineTension","_scale","_resolveLineOptions","updateBezierControlPoints","lineModel","_resolvePointOptions","calculatePointY","ELEMENT_OPTIONS","elementOptions","dsMeta","sumPos","sumNeg","stackedRightValue","rightValue","controlPoints","capControlPoint","pt","filter","cubicInterpolationMode","splineCurveMonotone","splineCurve","nextItem","halfBorderWidth","resolve$5","angleLines","display","circular","pointLabels","beginAtZero","controller_polarArea","starts","_starts","angles","_angles","_updateRadius","countVisibleElements","_computeAngle","getVisibleDatasetCount","xCenter","yCenter","datasetStartAngle","getDistanceFromCenterForValue","resetRadius","doughnut","controller_pie","valueOrDefault$6","resolve$6","controller_radar","pointPosition","getPointPositionForValue","controllers","bubble","horizontalBar","polarArea","pie","radar","scatter","getRelativePosition","native","parseVisibleItems","handler","jlen","getIntersectItems","getNearestItems","intersect","distanceMetric","minDistance","POSITIVE_INFINITY","nearestItems","getDistanceMetricForAxis","useX","useY","pt1","pt2","deltaX","deltaY","indexMode","items","core_interaction","modes","single","x-axis","nearest","intersectsItem","filterByPosition","where","sortByWeight","_tmpIndex_","sort","addSizeByPosition","boxes","box","layout","core_layouts","addBox","fullWidth","removeBox","layoutItem","configure","layoutOptions","leftPadding","rightPadding","topPadding","bottomPadding","leftBoxes","rightBoxes","topBoxes","bottomBoxes","chartAreaBoxes","maxPadding","verticalBoxes","horizontalBoxes","outerBoxes","chartWidth","chartHeight","chartAreaWidth","verticalBoxWidth","maxChartAreaWidth","maxChartAreaHeight","outerBoxSizes","minBoxSizes","getPadding","boxPadding","findMaxPadding","fitBox","minBoxSize","findNextWhere","scaleMargin","leftPaddingAddition","topPaddingAddition","newMaxChartAreaHeight","newMaxChartAreaWidth","placeBox","minBox","stylesheet","freeze","default","EXPANDO_KEY","CSS_SIZE_MONITOR","CSS_PREFIX","CSS_RENDER_MONITOR","CSS_RENDER_ANIMATION","ANIMATION_START_EVENTS","EVENT_TYPES","touchstart","touchmove","touchend","pointerenter","pointerdown","pointermove","pointerup","pointerleave","pointerout","readUsedSize","property","getStyle","eventListenerOptions","supports","addEventListener","passive","addListener","node","removeListener","removeEventListener","createEvent","nativeEvent","createDiv","cls","el","document","addResizeListener","expando","resizer","expand","shrink","appendChild","_reset","scrollLeft","scrollTop","onScroll","bind","createResizer","ticking","throttled","container","maintainAspectRatio","parentNode","clientWidth","proxy","renderProxy","animationName","reflow","offsetParent","classList","add","watchForRender","insertBefore","firstChild","removeResizeListener","remove","unwatchForRender","removeChild","platform_dom$2","disableCSSInjection","_enabled","_ensureLoaded","_loaded","platform","css","_style","setAttribute","getElementsByTagName","createTextNode","injectCSS","acquireContext","config","getElementById","getContext","renderHeight","getAttribute","renderWidth","initial","displayWidth","aspectRatio","displayHeight","initCanvas","releaseContext","removeAttribute","proxies","event","pos","fromNativeEvent","addEvent","removeEvent","implementation","plugins","core_plugins","_plugins","_cacheId","register","plugin","unregister","idx","getAll","notify","hook","descriptor","params","descriptors","cache","$plugins","_invalidate","core_scaleService","constructors","registerScaleType","scaleConstructor","scaleDefaults","getScaleConstructor","getScaleDefaults","updateScaleDefaults","additions","addScalesToLayout","valueOrDefault$7","enabled","titleFontStyle","titleSpacing","titleMarginBottom","titleFontColor","titleAlign","bodySpacing","bodyFontColor","bodyAlign","footerFontStyle","footerSpacing","footerMarginTop","footerFontColor","footerAlign","yPadding","xPadding","caretPadding","caretSize","multiKeyBackground","displayColors","beforeTitle","tooltipItems","labelCount","afterTitle","beforeBody","beforeLabel","labelColor","activeElement","labelTextColor","afterLabel","afterBody","beforeFooter","footer","afterFooter","positioners","average","eventPosition","nearestElement","d","distanceBetweenPoints","tp","pushOrConcat","toPush","splitNewlines","String","split","createTooltipItem","indexScale","valueScale","getLabelForIndex","getBaseModel","tooltipOpts","xAlign","yAlign","_bodyFontFamily","bodyFontFamily","_bodyFontStyle","bodyFontStyle","_bodyAlign","bodyFontSize","_titleFontFamily","titleFontFamily","_titleFontStyle","titleFontSize","_titleAlign","_footerFontFamily","footerFontFamily","_footerFontStyle","footerFontSize","_footerAlign","opacity","legendColorBackground","getAlignedX","align","getBeforeAfterBodyLines","exports$3","_lastActive","getTitle","lines","getBeforeBody","getBody","bodyItems","bodyItem","before","after","getAfterBody","getFooter","changed","existingModel","_active","alignment","backgroundPoint","tooltipSize","caretX","caretY","labelColors","labelTextColors","_eventPosition","itemSort","dataPoints","tooltip","combinedBodyLength","reduce","titleLineCount","footerLineCount","widthPadding","maxLineWidth","measureText","fontString","getTooltipSize","lf","rf","olf","orf","yf","midX","midY","determineAlignment","paddingAndSize","radiusAndPadding","getBackgroundPoint","drawCaret","tooltipPoint","caretPosition","getCaretPosition","x3","y3","ptX","ptY","tmp","drawTitle","textAlign","textBaseline","fillText","drawBody","textColor","drawColorBoxes","xLinePadding","colorX","fillLineOfText","strokeRect","drawFooter","drawBackground","quadraticCurveTo","hasTooltipContent","globalAlpha","handleEvent","getElementsAtEventForMode","positioners_1","core_tooltip","valueOrDefault$8","mergeScaleConfig","slen","mergeConfig","positionIsHorizontal","events","onHover","animationDuration","responsive","responsiveAnimationDuration","Chart","construct","initConfig","_bufferedRender","instances","retinaScale","devicePixelRatio","bindEvents","resize","ensureScalesHaveIDs","buildOrUpdateScales","initToolTip","stop","silent","newWidth","getMaximumWidth","newHeight","getMaximumHeight","newSize","onResize","scalesOptions","scaleOptions","xAxisOptions","yAxisOptions","updated","dtype","dposition","isDefault","scaleType","scaleClass","mergeTicksOptions","hasUpdated","buildOrUpdateControllers","newControllers","destroyDatasetMeta","ControllerClass","Error","resetElements","newOptions","updateConfig","updateLayout","updateDatasets","lastActive","_bufferedRequest","updateDataset","animationOptions","animationObject","easingFunction","stepDecimal","drawDatasets","_drawTooltip","drawDataset","getElementAtEvent","getElementsAtEvent","getElementsAtXAxis","getDatasetAtEvent","_meta","generateLegend","unbindEvents","toBase64Image","toDataURL","_chartInstance","_listeners","eventHandler","updateHoverStyle","bufferedRequest","hoverOptions","core_controller","abstract","DateAdapter","Controller","types","configMerge","scaleMerge","formats","parse","format","diff","startOf","endOf","_create","override","members","core_adapters","_date","core_ticks","formatters","tickValue","logDelta","log10","tickString","maxTick","logTick","toExponential","numDecimal","toFixed","logarithmic","remain","valueOrDefault$9","labelsFromTicks","computeTextSize","tick","longestText","drawBorder","drawOnChartArea","drawTicks","tickMarkLength","zeroLineWidth","zeroLineColor","zeroLineBorderDash","zeroLineBorderDashOffset","scaleLabel","labelString","minRotation","maxRotation","mirror","autoSkip","autoSkipPadding","labelOffset","minor","major","core_scale","paddingLeft","paddingTop","paddingRight","paddingBottom","_ticks","beforeUpdate","maxWidth","maxHeight","margins","_maxLabelLines","longestLabelWidth","longestTextCache","beforeSetDimensions","setDimensions","afterSetDimensions","beforeDataLimits","determineDataLimits","afterDataLimits","beforeBuildTicks","buildTicks","afterBuildTicks","beforeTickToLabelConversion","convertTicksToLabels","afterTickToLabelConversion","beforeCalculateTickRotation","calculateTickRotation","afterCalculateTickRotation","beforeFit","fit","afterFit","afterUpdate","tickOpts","userCallback","tickFont","labelRotation","cosRotation","originalLabelWidth","labelWidth","tickWidth","angleRadians","toRadians","scaleLabelOpts","gridLineOpts","_isVisible","parseFont","isFullWidth","scaleLabelFont","scaleLabelPadding","deltaHeight","largestTextWidth","tallestLabelHeightInLines","numberOfLabelLines","lineSpace","tickPadding","sinRotation","labelHeight","firstLabelWidth","lastLabelWidth","offsetLeft","offsetRight","handleMargins","rawValue","getValueForPixel","innerWidth","pixel","finalVal","innerHeight","decimal","valueOffset","getBaseValue","_autoSkip","optionTicks","tickCount","skipRatio","maxTicks","maxTicksLimit","ticksLength","_tickSize","axisLength","PaddingBottom","rot","borderValue","tickStart","tickEnd","optionMajorTicks","isRotated","isMirrored","tickFontColor","fontColor","majorTickFontColor","majorTickFont","tl","scaleLabelFontColor","labelRotationRadians","itemsToDraw","axisWidth","alignPixel","_alignPixel","lineColor","tx1","ty1","tx2","ty2","labelX","labelY","textOffset","zeroLineIndex","lineValue","getPixelForGridLine","labelYOffset","labelXOffset","glWidth","glColor","glBorderDash","glBorderDashOffset","itemToDraw","translate","scaleLabelX","scaleLabelY","halfLineHeight","isLeft","firstLineWidth","lastLineWidth","scale_category","getLabels","xLabels","yLabels","minIndex","maxIndex","valueCategory","offsetAmt","valueWidth","widthOffset","valueHeight","heightOffset","horz","valueDimension","_defaults","scale_linearbase","handleTickRangeOptions","minSign","sign","maxSign","setMin","suggestedMin","setMax","suggestedMax","getTickLimit","stepSize","ceil","_computeTickLimit","handleDirectionalChanges","numericGeneratorOptions","precision","fixedStepSize","generationOptions","dataRange","factor","niceMin","niceMax","numSpaces","unit","maxNumSpaces","rmin","rmax","spacing","niceNum","_decimalPlaces","almostWhole","almostEquals","generateTicks","ticksAsNumbers","defaultConfig$1","scale_linear","IDMatches","hasStacks","valuesPerStack","positiveValues","negativeValues","relativePoints","valuesForType","minVal","maxVal","innerDimension","_defaults$1","valueOrDefault$a","defaultConfig$2","nonNegativeOrDefault","scale_logarithmic","minNotZero","exp","significand","tickVal","endExp","endSignificand","lastTick","generateTicks$1","tickValues","_getFirstTickValue","firstTickValue","_defaults$2","valueOrDefault$b","valueAtIndexOrDefault$1","resolve$7","defaultConfig$3","animate","showLabelBackdrop","backdropColor","backdropPaddingY","backdropPaddingX","getValueCount","getTickBackdropHeight","determineLimits","getTextAlignForAngle","adjustPointPositionForLabelHeight","textSize","numberOrZero","param","scale_radialLinear","drawingArea","NEGATIVE_INFINITY","plFont","furthestLimits","furthestAngles","_pointLabelSizes","valueCount","getPointPosition","getIndexAngle","toDegrees","hLimits","vLimits","setReductions","fitWithPointLabels","setCenterPoint","largestPossibleRadius","radiusReductionLeft","radiusReductionRight","radiusReductionTop","radiusReductionBottom","leftMovement","rightMovement","topMovement","bottomMovement","maxRight","maxLeft","maxTop","maxBottom","angleMultiplier","startAngleRadians","scalingFactor","distanceFromCenter","thisAngle","getBasePosition","angleLineOpts","pointLabelOpts","tickBackdropHeight","outerDistance","outerPosition","extra","pointLabelPosition","pointLabelFontColor","drawPointLabels","yCenterOffset","drawRadiusLine","_defaults$3","valueOrDefault$c","MIN_INTEGER","MIN_SAFE_INTEGER","MAX_INTEGER","MAX_SAFE_INTEGER","INTERVALS","millisecond","common","steps","second","minute","hour","day","week","month","quarter","year","UNITS","sorter","arrayUnique","hash","out","interpolate$1","table","skey","tkey","mid","i0","i1","lo","lookup","span","toTimestamp","input","adapter","_adapter","time","parser","determineMajorUnit","generate","capacity","timeOpts","minUnit","interval","determineUnitForAutoTicks","unitStepSize","weekday","isoWeekday","majorTicksEnabled","first","milliseconds","determineStepSize","scale_time","adapters","date","warn","displayFormats","timestamp","timestamps","dataLabels","_horizontal","_table","_timestamps","getLabelCapacity","_unit","determineUnitForFormatting","_majorUnit","distribution","buildLookupTable","_offsets","computeOffsets","majorUnit","ticksFromTimestamps","tooltipFormat","datetime","tickFormatFunction","minorFormat","majorFormat","majorTime","majorTickOpts","formatter","getPixelForOffset","isReverse","getLabelWidth","ticksOpts","tickLabelWidth","tickFontSize","exampleTime","exampleLabel","_defaults$4","displayFormat","category","radialLinear","FORMATS","_id","valueOf","_format","amount","as","filler","propagate","mappers","visible","boundary","decodeFill","computeBoundary","scaleBottom","scaleTop","scaleZero","resolveTarget","visited","createMapper","isDrawable","drawArea","curve0","curve1","len0","len1","plugin_filler","afterDatasetsUpdate","$filler","mapper","beforeDatasetDraw","loop","p0","p1","d0","d1","doFill","noop$1","valueOrDefault$d","getBoxWidth","labelOpts","usePointStyle","boxWidth","ci","onLeave","lineDash","Legend","legendHitBoxes","_hoveredItem","doughnutMode","beforeBuildLabels","buildLabels","afterBuildLabels","legendItems","labelFont","hitboxes","lineWidths","totalHeight","vPadding","columnWidths","totalWidth","currentColWidth","currentColHeight","itemHeight","itemWidth","lineDefault","legendWidth","cursor","textWidth","SQRT2","drawLegendBox","halfFontSize","xLeft","yMiddle","_getLegendItemAt","hitBox","lh","hoveredItem","createNewLegendAndAttach","legendOpts","plugin_legend","_element","beforeInit","afterEvent","noop$2","Title","lineCount","fontOpts","titleX","titleY","createNewTitleBlockAndAttach","titleOpts","titleBlock","parseMaxStyle","styleValue","parentProperty","valueInPixels","isConstrainedValue","getConstraintDimension","domNode","maxStyle","percentageProperty","defaultView","_getParentNode","constrainedNode","getComputedStyle","constrainedContainer","hasCNode","hasCContainer","infinity","collection","filterCallback","filtered","arrayToSearch","startIndex","currentItem","findPreviousWhere","epsilon","rounded","exponent","log","LOG10E","powerOf10","isPowerOf10","radians","centrePoint","anglePoint","distanceFromXCenter","distanceFromYCenter","radialDistanceFromCenter","aliasPixel","pixelWidth","currentDevicePixelRatio","halfWidth","firstPoint","middlePoint","afterPoint","d01","d12","s01","s12","fa","fb","EPSILON","pointBefore","pointCurrent","pointAfter","alphaK","betaK","tauK","squaredMagnitude","pointsWithTangents","deltaK","mK","pointsLen","slopeDeltaX","fraction","webkitRequestAnimationFrame","mozRequestAnimationFrame","oRequestAnimationFrame","msRequestAnimationFrame","setTimeout","evt","originalEvent","srcElement","boundingRect","getBoundingClientRect","touches","clientX","clientY","getConstraintWidth","getConstraintHeight","_calculatePadding","parentDimension","parent","host","cw","clientHeight","ch","currentStyle","getPropertyValue","forceRatio","pixelRatio","pixelSize","arrayOfThings","gc","garbageCollect","longest","thing","nestedThing","gcLen","numberOfLines","CanvasGradient","colorValue","CanvasPattern","core_helpers","_adapters","Animation","animationService","Interaction","layouts","Scale","scaleService","Ticks","Tooltip","src","pluginService","PluginBase","canvasHelpers","layoutService","LinearScaleBase","klass","cfg","toLowerCase","factory","process","Doughnut","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","chart_js__WEBPACK_IMPORTED_MODULE_2__","chart_js__WEBPACK_IMPORTED_MODULE_2___default","lodash_isEqual__WEBPACK_IMPORTED_MODULE_3__","lodash_isEqual__WEBPACK_IMPORTED_MODULE_3___default","lodash_keyBy__WEBPACK_IMPORTED_MODULE_4__","lodash_keyBy__WEBPACK_IMPORTED_MODULE_4___default","_extends","assign","_objectWithoutProperties","_classCallCheck","instance","Constructor","TypeError","_possibleConstructorReturn","self","ReferenceError","_inherits","subClass","superClass","create","writable","setPrototypeOf","__proto__","NODE_ENV","PUBLIC_URL","ChartComponent","_React$Component","_temp","_this","_len","_key","handleOnClick","chartInstance","_this$props","onElementsClick","componentWillMount","componentDidMount","renderChart","componentDidUpdate","redraw","destroyChart","updateChart","shouldComponentUpdate","nextProps","_props","nextData","transformDataProp","shadowDataProp","componentWillUnmount","memoizeDataProps","saveCurrentDatasets","checkDatasets","isDev","usingCustomKeyProvider","datasetKeyProvider","getLabelAsKey","multipleDatasets","shouldWarn","getCurrentDatasets","_this2","_this3","currentDatasets","nextDatasets","currentDatasetsIndexed","pid","otherProps","rest","_props2","_props3","Component","isRequired","arrayOf","propName","componentName","_React$Component2","_this5","_ref","_React$Component3","Pie","_this7","_ref2","_React$Component4","_this9","_ref3","_React$Component5","Bar","_this11","_ref4","_React$Component6","HorizontalBar","_this13","_ref5","_React$Component7","Radar","_this15","_ref6","_React$Component8","Polar","_this17","_ref7","_React$Component9","Bubble","_this19","_ref8","_React$Component10","Scatter","_this21","_ref9","baseAssignValue","keyBy","createAggregator","getNative","arrayAggregator","baseAggregator","baseIteratee","setter","initializer","iteratee","accumulator","baseEach","CardHeader"],"mappings":"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","file":"static/js/35.a333b792.chunk.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  flush: PropTypes.bool,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'ul'\n};\n\nvar ListGroup = function ListGroup(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      Tag = props.tag,\n      flush = props.flush,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"tag\", \"flush\"]);\n\n  var classes = mapToCssModules(classNames(className, 'list-group', flush ? 'list-group-flush' : false), cssModule);\n  return React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nListGroup.propTypes = propTypes;\nListGroup.defaultProps = defaultProps;\nexport default ListGroup;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  active: PropTypes.bool,\n  disabled: PropTypes.bool,\n  color: PropTypes.string,\n  action: PropTypes.bool,\n  className: PropTypes.any,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'li'\n};\n\nvar handleDisabledOnClick = function handleDisabledOnClick(e) {\n  e.preventDefault();\n};\n\nvar ListGroupItem = function ListGroupItem(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      Tag = props.tag,\n      active = props.active,\n      disabled = props.disabled,\n      action = props.action,\n      color = props.color,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"tag\", \"active\", \"disabled\", \"action\", \"color\"]);\n\n  var classes = mapToCssModules(classNames(className, active ? 'active' : false, disabled ? 'disabled' : false, action ? 'list-group-item-action' : false, color ? \"list-group-item-\" + color : false, 'list-group-item'), cssModule); // Prevent click event when disabled.\n\n  if (disabled) {\n    attributes.onClick = handleDisabledOnClick;\n  }\n\n  return React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nListGroupItem.propTypes = propTypes;\nListGroupItem.defaultProps = defaultProps;\nexport default ListGroupItem;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport isobject from 'lodash.isobject';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, deprecated, tagPropType } from './utils';\nvar colWidths = ['xs', 'sm', 'md', 'lg', 'xl'];\nvar stringOrNumberProp = PropTypes.oneOfType([PropTypes.number, PropTypes.string]);\nvar columnProps = PropTypes.oneOfType([PropTypes.bool, PropTypes.number, PropTypes.string, PropTypes.shape({\n  size: PropTypes.oneOfType([PropTypes.bool, PropTypes.number, PropTypes.string]),\n  push: deprecated(stringOrNumberProp, 'Please use the prop \"order\"'),\n  pull: deprecated(stringOrNumberProp, 'Please use the prop \"order\"'),\n  order: stringOrNumberProp,\n  offset: stringOrNumberProp\n})]);\nvar propTypes = {\n  tag: tagPropType,\n  xs: columnProps,\n  sm: columnProps,\n  md: columnProps,\n  lg: columnProps,\n  xl: columnProps,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  widths: PropTypes.array\n};\nvar defaultProps = {\n  tag: 'div',\n  widths: colWidths\n};\n\nvar getColumnSizeClass = function getColumnSizeClass(isXs, colWidth, colSize) {\n  if (colSize === true || colSize === '') {\n    return isXs ? 'col' : \"col-\" + colWidth;\n  } else if (colSize === 'auto') {\n    return isXs ? 'col-auto' : \"col-\" + colWidth + \"-auto\";\n  }\n\n  return isXs ? \"col-\" + colSize : \"col-\" + colWidth + \"-\" + colSize;\n};\n\nvar Col = function Col(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      widths = props.widths,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"widths\", \"tag\"]);\n\n  var colClasses = [];\n  widths.forEach(function (colWidth, i) {\n    var columnProp = props[colWidth];\n    delete attributes[colWidth];\n\n    if (!columnProp && columnProp !== '') {\n      return;\n    }\n\n    var isXs = !i;\n\n    if (isobject(columnProp)) {\n      var _classNames;\n\n      var colSizeInterfix = isXs ? '-' : \"-\" + colWidth + \"-\";\n      var colClass = getColumnSizeClass(isXs, colWidth, columnProp.size);\n      colClasses.push(mapToCssModules(classNames((_classNames = {}, _classNames[colClass] = columnProp.size || columnProp.size === '', _classNames[\"order\" + colSizeInterfix + columnProp.order] = columnProp.order || columnProp.order === 0, _classNames[\"offset\" + colSizeInterfix + columnProp.offset] = columnProp.offset || columnProp.offset === 0, _classNames)), cssModule));\n    } else {\n      var _colClass = getColumnSizeClass(isXs, colWidth, columnProp);\n\n      colClasses.push(_colClass);\n    }\n  });\n\n  if (!colClasses.length) {\n    colClasses.push('col');\n  }\n\n  var classes = mapToCssModules(classNames(className, colClasses), cssModule);\n  return React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nCol.propTypes = propTypes;\nCol.defaultProps = defaultProps;\nexport default Col;","/**\n * lodash 3.0.2 (Custom Build) <https://lodash.com/>\n * Build: `lodash modern modularize exports=\"npm\" -o ./`\n * Copyright 2012-2015 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2015 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <https://lodash.com/license>\n */\n\n/**\n * Checks if `value` is the [language type](https://es5.github.io/#x8) of `Object`.\n * (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(1);\n * // => false\n */\nfunction isObject(value) {\n  // Avoid a V8 JIT bug in Chrome 19-20.\n  // See https://code.google.com/p/v8/issues/detail?id=2291 for more details.\n  var type = typeof value;\n  return !!value && (type == 'object' || type == 'function');\n}\n\nmodule.exports = isObject;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  noGutters: PropTypes.bool,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  form: PropTypes.bool\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar Row = function Row(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      noGutters = props.noGutters,\n      Tag = props.tag,\n      form = props.form,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"noGutters\", \"tag\", \"form\"]);\n\n  var classes = mapToCssModules(classNames(className, noGutters ? 'no-gutters' : null, form ? 'form-row' : 'row'), cssModule);\n  return React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nRow.propTypes = propTypes;\nRow.defaultProps = defaultProps;\nexport default Row;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, deprecated, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  inverse: PropTypes.bool,\n  color: PropTypes.string,\n  block: deprecated(PropTypes.bool, 'Please use the props \"body\"'),\n  body: PropTypes.bool,\n  outline: PropTypes.bool,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  innerRef: PropTypes.oneOfType([PropTypes.object, PropTypes.string, PropTypes.func])\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar Card = function Card(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      color = props.color,\n      block = props.block,\n      body = props.body,\n      inverse = props.inverse,\n      outline = props.outline,\n      Tag = props.tag,\n      innerRef = props.innerRef,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"color\", \"block\", \"body\", \"inverse\", \"outline\", \"tag\", \"innerRef\"]);\n\n  var classes = mapToCssModules(classNames(className, 'card', inverse ? 'text-white' : false, block || body ? 'card-body' : false, color ? (outline ? 'border' : 'bg') + \"-\" + color : false), cssModule);\n  return React.createElement(Tag, _extends({}, attributes, {\n    className: classes,\n    ref: innerRef\n  }));\n};\n\nCard.propTypes = propTypes;\nCard.defaultProps = defaultProps;\nexport default Card;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  innerRef: PropTypes.oneOfType([PropTypes.object, PropTypes.string, PropTypes.func])\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar CardBody = function CardBody(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      innerRef = props.innerRef,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"innerRef\", \"tag\"]);\n\n  var classes = mapToCssModules(classNames(className, 'card-body'), cssModule);\n  return React.createElement(Tag, _extends({}, attributes, {\n    className: classes,\n    ref: innerRef\n  }));\n};\n\nCardBody.propTypes = propTypes;\nCardBody.defaultProps = defaultProps;\nexport default CardBody;","/*!\n * Chart.js v2.8.0\n * https://www.chartjs.org\n * (c) 2019 Chart.js Contributors\n * Released under the MIT License\n */\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory(function () {\n    try {\n      return require('moment');\n    } catch (e) {}\n  }()) : typeof define === 'function' && define.amd ? define(['require'], function (require) {\n    return factory(function () {\n      try {\n        return require('moment');\n      } catch (e) {}\n    }());\n  }) : global.Chart = factory(global.moment);\n})(this, function (moment) {\n  'use strict';\n\n  moment = moment && moment.hasOwnProperty('default') ? moment['default'] : moment;\n  /* MIT license */\n\n  var conversions = {\n    rgb2hsl: rgb2hsl,\n    rgb2hsv: rgb2hsv,\n    rgb2hwb: rgb2hwb,\n    rgb2cmyk: rgb2cmyk,\n    rgb2keyword: rgb2keyword,\n    rgb2xyz: rgb2xyz,\n    rgb2lab: rgb2lab,\n    rgb2lch: rgb2lch,\n    hsl2rgb: hsl2rgb,\n    hsl2hsv: hsl2hsv,\n    hsl2hwb: hsl2hwb,\n    hsl2cmyk: hsl2cmyk,\n    hsl2keyword: hsl2keyword,\n    hsv2rgb: hsv2rgb,\n    hsv2hsl: hsv2hsl,\n    hsv2hwb: hsv2hwb,\n    hsv2cmyk: hsv2cmyk,\n    hsv2keyword: hsv2keyword,\n    hwb2rgb: hwb2rgb,\n    hwb2hsl: hwb2hsl,\n    hwb2hsv: hwb2hsv,\n    hwb2cmyk: hwb2cmyk,\n    hwb2keyword: hwb2keyword,\n    cmyk2rgb: cmyk2rgb,\n    cmyk2hsl: cmyk2hsl,\n    cmyk2hsv: cmyk2hsv,\n    cmyk2hwb: cmyk2hwb,\n    cmyk2keyword: cmyk2keyword,\n    keyword2rgb: keyword2rgb,\n    keyword2hsl: keyword2hsl,\n    keyword2hsv: keyword2hsv,\n    keyword2hwb: keyword2hwb,\n    keyword2cmyk: keyword2cmyk,\n    keyword2lab: keyword2lab,\n    keyword2xyz: keyword2xyz,\n    xyz2rgb: xyz2rgb,\n    xyz2lab: xyz2lab,\n    xyz2lch: xyz2lch,\n    lab2xyz: lab2xyz,\n    lab2rgb: lab2rgb,\n    lab2lch: lab2lch,\n    lch2lab: lch2lab,\n    lch2xyz: lch2xyz,\n    lch2rgb: lch2rgb\n  };\n\n  function rgb2hsl(rgb) {\n    var r = rgb[0] / 255,\n        g = rgb[1] / 255,\n        b = rgb[2] / 255,\n        min = Math.min(r, g, b),\n        max = Math.max(r, g, b),\n        delta = max - min,\n        h,\n        s,\n        l;\n    if (max == min) h = 0;else if (r == max) h = (g - b) / delta;else if (g == max) h = 2 + (b - r) / delta;else if (b == max) h = 4 + (r - g) / delta;\n    h = Math.min(h * 60, 360);\n    if (h < 0) h += 360;\n    l = (min + max) / 2;\n    if (max == min) s = 0;else if (l <= 0.5) s = delta / (max + min);else s = delta / (2 - max - min);\n    return [h, s * 100, l * 100];\n  }\n\n  function rgb2hsv(rgb) {\n    var r = rgb[0],\n        g = rgb[1],\n        b = rgb[2],\n        min = Math.min(r, g, b),\n        max = Math.max(r, g, b),\n        delta = max - min,\n        h,\n        s,\n        v;\n    if (max == 0) s = 0;else s = delta / max * 1000 / 10;\n    if (max == min) h = 0;else if (r == max) h = (g - b) / delta;else if (g == max) h = 2 + (b - r) / delta;else if (b == max) h = 4 + (r - g) / delta;\n    h = Math.min(h * 60, 360);\n    if (h < 0) h += 360;\n    v = max / 255 * 1000 / 10;\n    return [h, s, v];\n  }\n\n  function rgb2hwb(rgb) {\n    var r = rgb[0],\n        g = rgb[1],\n        b = rgb[2],\n        h = rgb2hsl(rgb)[0],\n        w = 1 / 255 * Math.min(r, Math.min(g, b)),\n        b = 1 - 1 / 255 * Math.max(r, Math.max(g, b));\n    return [h, w * 100, b * 100];\n  }\n\n  function rgb2cmyk(rgb) {\n    var r = rgb[0] / 255,\n        g = rgb[1] / 255,\n        b = rgb[2] / 255,\n        c,\n        m,\n        y,\n        k;\n    k = Math.min(1 - r, 1 - g, 1 - b);\n    c = (1 - r - k) / (1 - k) || 0;\n    m = (1 - g - k) / (1 - k) || 0;\n    y = (1 - b - k) / (1 - k) || 0;\n    return [c * 100, m * 100, y * 100, k * 100];\n  }\n\n  function rgb2keyword(rgb) {\n    return reverseKeywords[JSON.stringify(rgb)];\n  }\n\n  function rgb2xyz(rgb) {\n    var r = rgb[0] / 255,\n        g = rgb[1] / 255,\n        b = rgb[2] / 255; // assume sRGB\n\n    r = r > 0.04045 ? Math.pow((r + 0.055) / 1.055, 2.4) : r / 12.92;\n    g = g > 0.04045 ? Math.pow((g + 0.055) / 1.055, 2.4) : g / 12.92;\n    b = b > 0.04045 ? Math.pow((b + 0.055) / 1.055, 2.4) : b / 12.92;\n    var x = r * 0.4124 + g * 0.3576 + b * 0.1805;\n    var y = r * 0.2126 + g * 0.7152 + b * 0.0722;\n    var z = r * 0.0193 + g * 0.1192 + b * 0.9505;\n    return [x * 100, y * 100, z * 100];\n  }\n\n  function rgb2lab(rgb) {\n    var xyz = rgb2xyz(rgb),\n        x = xyz[0],\n        y = xyz[1],\n        z = xyz[2],\n        l,\n        a,\n        b;\n    x /= 95.047;\n    y /= 100;\n    z /= 108.883;\n    x = x > 0.008856 ? Math.pow(x, 1 / 3) : 7.787 * x + 16 / 116;\n    y = y > 0.008856 ? Math.pow(y, 1 / 3) : 7.787 * y + 16 / 116;\n    z = z > 0.008856 ? Math.pow(z, 1 / 3) : 7.787 * z + 16 / 116;\n    l = 116 * y - 16;\n    a = 500 * (x - y);\n    b = 200 * (y - z);\n    return [l, a, b];\n  }\n\n  function rgb2lch(args) {\n    return lab2lch(rgb2lab(args));\n  }\n\n  function hsl2rgb(hsl) {\n    var h = hsl[0] / 360,\n        s = hsl[1] / 100,\n        l = hsl[2] / 100,\n        t1,\n        t2,\n        t3,\n        rgb,\n        val;\n\n    if (s == 0) {\n      val = l * 255;\n      return [val, val, val];\n    }\n\n    if (l < 0.5) t2 = l * (1 + s);else t2 = l + s - l * s;\n    t1 = 2 * l - t2;\n    rgb = [0, 0, 0];\n\n    for (var i = 0; i < 3; i++) {\n      t3 = h + 1 / 3 * -(i - 1);\n      t3 < 0 && t3++;\n      t3 > 1 && t3--;\n      if (6 * t3 < 1) val = t1 + (t2 - t1) * 6 * t3;else if (2 * t3 < 1) val = t2;else if (3 * t3 < 2) val = t1 + (t2 - t1) * (2 / 3 - t3) * 6;else val = t1;\n      rgb[i] = val * 255;\n    }\n\n    return rgb;\n  }\n\n  function hsl2hsv(hsl) {\n    var h = hsl[0],\n        s = hsl[1] / 100,\n        l = hsl[2] / 100,\n        sv,\n        v;\n\n    if (l === 0) {\n      // no need to do calc on black\n      // also avoids divide by 0 error\n      return [0, 0, 0];\n    }\n\n    l *= 2;\n    s *= l <= 1 ? l : 2 - l;\n    v = (l + s) / 2;\n    sv = 2 * s / (l + s);\n    return [h, sv * 100, v * 100];\n  }\n\n  function hsl2hwb(args) {\n    return rgb2hwb(hsl2rgb(args));\n  }\n\n  function hsl2cmyk(args) {\n    return rgb2cmyk(hsl2rgb(args));\n  }\n\n  function hsl2keyword(args) {\n    return rgb2keyword(hsl2rgb(args));\n  }\n\n  function hsv2rgb(hsv) {\n    var h = hsv[0] / 60,\n        s = hsv[1] / 100,\n        v = hsv[2] / 100,\n        hi = Math.floor(h) % 6;\n    var f = h - Math.floor(h),\n        p = 255 * v * (1 - s),\n        q = 255 * v * (1 - s * f),\n        t = 255 * v * (1 - s * (1 - f)),\n        v = 255 * v;\n\n    switch (hi) {\n      case 0:\n        return [v, t, p];\n\n      case 1:\n        return [q, v, p];\n\n      case 2:\n        return [p, v, t];\n\n      case 3:\n        return [p, q, v];\n\n      case 4:\n        return [t, p, v];\n\n      case 5:\n        return [v, p, q];\n    }\n  }\n\n  function hsv2hsl(hsv) {\n    var h = hsv[0],\n        s = hsv[1] / 100,\n        v = hsv[2] / 100,\n        sl,\n        l;\n    l = (2 - s) * v;\n    sl = s * v;\n    sl /= l <= 1 ? l : 2 - l;\n    sl = sl || 0;\n    l /= 2;\n    return [h, sl * 100, l * 100];\n  }\n\n  function hsv2hwb(args) {\n    return rgb2hwb(hsv2rgb(args));\n  }\n\n  function hsv2cmyk(args) {\n    return rgb2cmyk(hsv2rgb(args));\n  }\n\n  function hsv2keyword(args) {\n    return rgb2keyword(hsv2rgb(args));\n  } // http://dev.w3.org/csswg/css-color/#hwb-to-rgb\n\n\n  function hwb2rgb(hwb) {\n    var h = hwb[0] / 360,\n        wh = hwb[1] / 100,\n        bl = hwb[2] / 100,\n        ratio = wh + bl,\n        i,\n        v,\n        f,\n        n; // wh + bl cant be > 1\n\n    if (ratio > 1) {\n      wh /= ratio;\n      bl /= ratio;\n    }\n\n    i = Math.floor(6 * h);\n    v = 1 - bl;\n    f = 6 * h - i;\n\n    if ((i & 0x01) != 0) {\n      f = 1 - f;\n    }\n\n    n = wh + f * (v - wh); // linear interpolation\n\n    switch (i) {\n      default:\n      case 6:\n      case 0:\n        r = v;\n        g = n;\n        b = wh;\n        break;\n\n      case 1:\n        r = n;\n        g = v;\n        b = wh;\n        break;\n\n      case 2:\n        r = wh;\n        g = v;\n        b = n;\n        break;\n\n      case 3:\n        r = wh;\n        g = n;\n        b = v;\n        break;\n\n      case 4:\n        r = n;\n        g = wh;\n        b = v;\n        break;\n\n      case 5:\n        r = v;\n        g = wh;\n        b = n;\n        break;\n    }\n\n    return [r * 255, g * 255, b * 255];\n  }\n\n  function hwb2hsl(args) {\n    return rgb2hsl(hwb2rgb(args));\n  }\n\n  function hwb2hsv(args) {\n    return rgb2hsv(hwb2rgb(args));\n  }\n\n  function hwb2cmyk(args) {\n    return rgb2cmyk(hwb2rgb(args));\n  }\n\n  function hwb2keyword(args) {\n    return rgb2keyword(hwb2rgb(args));\n  }\n\n  function cmyk2rgb(cmyk) {\n    var c = cmyk[0] / 100,\n        m = cmyk[1] / 100,\n        y = cmyk[2] / 100,\n        k = cmyk[3] / 100,\n        r,\n        g,\n        b;\n    r = 1 - Math.min(1, c * (1 - k) + k);\n    g = 1 - Math.min(1, m * (1 - k) + k);\n    b = 1 - Math.min(1, y * (1 - k) + k);\n    return [r * 255, g * 255, b * 255];\n  }\n\n  function cmyk2hsl(args) {\n    return rgb2hsl(cmyk2rgb(args));\n  }\n\n  function cmyk2hsv(args) {\n    return rgb2hsv(cmyk2rgb(args));\n  }\n\n  function cmyk2hwb(args) {\n    return rgb2hwb(cmyk2rgb(args));\n  }\n\n  function cmyk2keyword(args) {\n    return rgb2keyword(cmyk2rgb(args));\n  }\n\n  function xyz2rgb(xyz) {\n    var x = xyz[0] / 100,\n        y = xyz[1] / 100,\n        z = xyz[2] / 100,\n        r,\n        g,\n        b;\n    r = x * 3.2406 + y * -1.5372 + z * -0.4986;\n    g = x * -0.9689 + y * 1.8758 + z * 0.0415;\n    b = x * 0.0557 + y * -0.2040 + z * 1.0570; // assume sRGB\n\n    r = r > 0.0031308 ? 1.055 * Math.pow(r, 1.0 / 2.4) - 0.055 : r = r * 12.92;\n    g = g > 0.0031308 ? 1.055 * Math.pow(g, 1.0 / 2.4) - 0.055 : g = g * 12.92;\n    b = b > 0.0031308 ? 1.055 * Math.pow(b, 1.0 / 2.4) - 0.055 : b = b * 12.92;\n    r = Math.min(Math.max(0, r), 1);\n    g = Math.min(Math.max(0, g), 1);\n    b = Math.min(Math.max(0, b), 1);\n    return [r * 255, g * 255, b * 255];\n  }\n\n  function xyz2lab(xyz) {\n    var x = xyz[0],\n        y = xyz[1],\n        z = xyz[2],\n        l,\n        a,\n        b;\n    x /= 95.047;\n    y /= 100;\n    z /= 108.883;\n    x = x > 0.008856 ? Math.pow(x, 1 / 3) : 7.787 * x + 16 / 116;\n    y = y > 0.008856 ? Math.pow(y, 1 / 3) : 7.787 * y + 16 / 116;\n    z = z > 0.008856 ? Math.pow(z, 1 / 3) : 7.787 * z + 16 / 116;\n    l = 116 * y - 16;\n    a = 500 * (x - y);\n    b = 200 * (y - z);\n    return [l, a, b];\n  }\n\n  function xyz2lch(args) {\n    return lab2lch(xyz2lab(args));\n  }\n\n  function lab2xyz(lab) {\n    var l = lab[0],\n        a = lab[1],\n        b = lab[2],\n        x,\n        y,\n        z,\n        y2;\n\n    if (l <= 8) {\n      y = l * 100 / 903.3;\n      y2 = 7.787 * (y / 100) + 16 / 116;\n    } else {\n      y = 100 * Math.pow((l + 16) / 116, 3);\n      y2 = Math.pow(y / 100, 1 / 3);\n    }\n\n    x = x / 95.047 <= 0.008856 ? x = 95.047 * (a / 500 + y2 - 16 / 116) / 7.787 : 95.047 * Math.pow(a / 500 + y2, 3);\n    z = z / 108.883 <= 0.008859 ? z = 108.883 * (y2 - b / 200 - 16 / 116) / 7.787 : 108.883 * Math.pow(y2 - b / 200, 3);\n    return [x, y, z];\n  }\n\n  function lab2lch(lab) {\n    var l = lab[0],\n        a = lab[1],\n        b = lab[2],\n        hr,\n        h,\n        c;\n    hr = Math.atan2(b, a);\n    h = hr * 360 / 2 / Math.PI;\n\n    if (h < 0) {\n      h += 360;\n    }\n\n    c = Math.sqrt(a * a + b * b);\n    return [l, c, h];\n  }\n\n  function lab2rgb(args) {\n    return xyz2rgb(lab2xyz(args));\n  }\n\n  function lch2lab(lch) {\n    var l = lch[0],\n        c = lch[1],\n        h = lch[2],\n        a,\n        b,\n        hr;\n    hr = h / 360 * 2 * Math.PI;\n    a = c * Math.cos(hr);\n    b = c * Math.sin(hr);\n    return [l, a, b];\n  }\n\n  function lch2xyz(args) {\n    return lab2xyz(lch2lab(args));\n  }\n\n  function lch2rgb(args) {\n    return lab2rgb(lch2lab(args));\n  }\n\n  function keyword2rgb(keyword) {\n    return cssKeywords[keyword];\n  }\n\n  function keyword2hsl(args) {\n    return rgb2hsl(keyword2rgb(args));\n  }\n\n  function keyword2hsv(args) {\n    return rgb2hsv(keyword2rgb(args));\n  }\n\n  function keyword2hwb(args) {\n    return rgb2hwb(keyword2rgb(args));\n  }\n\n  function keyword2cmyk(args) {\n    return rgb2cmyk(keyword2rgb(args));\n  }\n\n  function keyword2lab(args) {\n    return rgb2lab(keyword2rgb(args));\n  }\n\n  function keyword2xyz(args) {\n    return rgb2xyz(keyword2rgb(args));\n  }\n\n  var cssKeywords = {\n    aliceblue: [240, 248, 255],\n    antiquewhite: [250, 235, 215],\n    aqua: [0, 255, 255],\n    aquamarine: [127, 255, 212],\n    azure: [240, 255, 255],\n    beige: [245, 245, 220],\n    bisque: [255, 228, 196],\n    black: [0, 0, 0],\n    blanchedalmond: [255, 235, 205],\n    blue: [0, 0, 255],\n    blueviolet: [138, 43, 226],\n    brown: [165, 42, 42],\n    burlywood: [222, 184, 135],\n    cadetblue: [95, 158, 160],\n    chartreuse: [127, 255, 0],\n    chocolate: [210, 105, 30],\n    coral: [255, 127, 80],\n    cornflowerblue: [100, 149, 237],\n    cornsilk: [255, 248, 220],\n    crimson: [220, 20, 60],\n    cyan: [0, 255, 255],\n    darkblue: [0, 0, 139],\n    darkcyan: [0, 139, 139],\n    darkgoldenrod: [184, 134, 11],\n    darkgray: [169, 169, 169],\n    darkgreen: [0, 100, 0],\n    darkgrey: [169, 169, 169],\n    darkkhaki: [189, 183, 107],\n    darkmagenta: [139, 0, 139],\n    darkolivegreen: [85, 107, 47],\n    darkorange: [255, 140, 0],\n    darkorchid: [153, 50, 204],\n    darkred: [139, 0, 0],\n    darksalmon: [233, 150, 122],\n    darkseagreen: [143, 188, 143],\n    darkslateblue: [72, 61, 139],\n    darkslategray: [47, 79, 79],\n    darkslategrey: [47, 79, 79],\n    darkturquoise: [0, 206, 209],\n    darkviolet: [148, 0, 211],\n    deeppink: [255, 20, 147],\n    deepskyblue: [0, 191, 255],\n    dimgray: [105, 105, 105],\n    dimgrey: [105, 105, 105],\n    dodgerblue: [30, 144, 255],\n    firebrick: [178, 34, 34],\n    floralwhite: [255, 250, 240],\n    forestgreen: [34, 139, 34],\n    fuchsia: [255, 0, 255],\n    gainsboro: [220, 220, 220],\n    ghostwhite: [248, 248, 255],\n    gold: [255, 215, 0],\n    goldenrod: [218, 165, 32],\n    gray: [128, 128, 128],\n    green: [0, 128, 0],\n    greenyellow: [173, 255, 47],\n    grey: [128, 128, 128],\n    honeydew: [240, 255, 240],\n    hotpink: [255, 105, 180],\n    indianred: [205, 92, 92],\n    indigo: [75, 0, 130],\n    ivory: [255, 255, 240],\n    khaki: [240, 230, 140],\n    lavender: [230, 230, 250],\n    lavenderblush: [255, 240, 245],\n    lawngreen: [124, 252, 0],\n    lemonchiffon: [255, 250, 205],\n    lightblue: [173, 216, 230],\n    lightcoral: [240, 128, 128],\n    lightcyan: [224, 255, 255],\n    lightgoldenrodyellow: [250, 250, 210],\n    lightgray: [211, 211, 211],\n    lightgreen: [144, 238, 144],\n    lightgrey: [211, 211, 211],\n    lightpink: [255, 182, 193],\n    lightsalmon: [255, 160, 122],\n    lightseagreen: [32, 178, 170],\n    lightskyblue: [135, 206, 250],\n    lightslategray: [119, 136, 153],\n    lightslategrey: [119, 136, 153],\n    lightsteelblue: [176, 196, 222],\n    lightyellow: [255, 255, 224],\n    lime: [0, 255, 0],\n    limegreen: [50, 205, 50],\n    linen: [250, 240, 230],\n    magenta: [255, 0, 255],\n    maroon: [128, 0, 0],\n    mediumaquamarine: [102, 205, 170],\n    mediumblue: [0, 0, 205],\n    mediumorchid: [186, 85, 211],\n    mediumpurple: [147, 112, 219],\n    mediumseagreen: [60, 179, 113],\n    mediumslateblue: [123, 104, 238],\n    mediumspringgreen: [0, 250, 154],\n    mediumturquoise: [72, 209, 204],\n    mediumvioletred: [199, 21, 133],\n    midnightblue: [25, 25, 112],\n    mintcream: [245, 255, 250],\n    mistyrose: [255, 228, 225],\n    moccasin: [255, 228, 181],\n    navajowhite: [255, 222, 173],\n    navy: [0, 0, 128],\n    oldlace: [253, 245, 230],\n    olive: [128, 128, 0],\n    olivedrab: [107, 142, 35],\n    orange: [255, 165, 0],\n    orangered: [255, 69, 0],\n    orchid: [218, 112, 214],\n    palegoldenrod: [238, 232, 170],\n    palegreen: [152, 251, 152],\n    paleturquoise: [175, 238, 238],\n    palevioletred: [219, 112, 147],\n    papayawhip: [255, 239, 213],\n    peachpuff: [255, 218, 185],\n    peru: [205, 133, 63],\n    pink: [255, 192, 203],\n    plum: [221, 160, 221],\n    powderblue: [176, 224, 230],\n    purple: [128, 0, 128],\n    rebeccapurple: [102, 51, 153],\n    red: [255, 0, 0],\n    rosybrown: [188, 143, 143],\n    royalblue: [65, 105, 225],\n    saddlebrown: [139, 69, 19],\n    salmon: [250, 128, 114],\n    sandybrown: [244, 164, 96],\n    seagreen: [46, 139, 87],\n    seashell: [255, 245, 238],\n    sienna: [160, 82, 45],\n    silver: [192, 192, 192],\n    skyblue: [135, 206, 235],\n    slateblue: [106, 90, 205],\n    slategray: [112, 128, 144],\n    slategrey: [112, 128, 144],\n    snow: [255, 250, 250],\n    springgreen: [0, 255, 127],\n    steelblue: [70, 130, 180],\n    tan: [210, 180, 140],\n    teal: [0, 128, 128],\n    thistle: [216, 191, 216],\n    tomato: [255, 99, 71],\n    turquoise: [64, 224, 208],\n    violet: [238, 130, 238],\n    wheat: [245, 222, 179],\n    white: [255, 255, 255],\n    whitesmoke: [245, 245, 245],\n    yellow: [255, 255, 0],\n    yellowgreen: [154, 205, 50]\n  };\n  var reverseKeywords = {};\n\n  for (var key in cssKeywords) {\n    reverseKeywords[JSON.stringify(cssKeywords[key])] = key;\n  }\n\n  var convert = function convert() {\n    return new Converter();\n  };\n\n  for (var func in conversions) {\n    // export Raw versions\n    convert[func + \"Raw\"] = function (func) {\n      // accept array or plain args\n      return function (arg) {\n        if (typeof arg == \"number\") arg = Array.prototype.slice.call(arguments);\n        return conversions[func](arg);\n      };\n    }(func);\n\n    var pair = /(\\w+)2(\\w+)/.exec(func),\n        from = pair[1],\n        to = pair[2]; // export rgb2hsl and [\"rgb\"][\"hsl\"]\n\n    convert[from] = convert[from] || {};\n\n    convert[from][to] = convert[func] = function (func) {\n      return function (arg) {\n        if (typeof arg == \"number\") arg = Array.prototype.slice.call(arguments);\n        var val = conversions[func](arg);\n        if (typeof val == \"string\" || val === undefined) return val; // keyword\n\n        for (var i = 0; i < val.length; i++) {\n          val[i] = Math.round(val[i]);\n        }\n\n        return val;\n      };\n    }(func);\n  }\n  /* Converter does lazy conversion and caching */\n\n\n  var Converter = function Converter() {\n    this.convs = {};\n  };\n  /* Either get the values for a space or\n    set the values for a space, depending on args */\n\n\n  Converter.prototype.routeSpace = function (space, args) {\n    var values = args[0];\n\n    if (values === undefined) {\n      // color.rgb()\n      return this.getValues(space);\n    } // color.rgb(10, 10, 10)\n\n\n    if (typeof values == \"number\") {\n      values = Array.prototype.slice.call(args);\n    }\n\n    return this.setValues(space, values);\n  };\n  /* Set the values for a space, invalidating cache */\n\n\n  Converter.prototype.setValues = function (space, values) {\n    this.space = space;\n    this.convs = {};\n    this.convs[space] = values;\n    return this;\n  };\n  /* Get the values for a space. If there's already\n    a conversion for the space, fetch it, otherwise\n    compute it */\n\n\n  Converter.prototype.getValues = function (space) {\n    var vals = this.convs[space];\n\n    if (!vals) {\n      var fspace = this.space,\n          from = this.convs[fspace];\n      vals = convert[fspace][space](from);\n      this.convs[space] = vals;\n    }\n\n    return vals;\n  };\n\n  [\"rgb\", \"hsl\", \"hsv\", \"cmyk\", \"keyword\"].forEach(function (space) {\n    Converter.prototype[space] = function (vals) {\n      return this.routeSpace(space, arguments);\n    };\n  });\n  var colorConvert = convert;\n  var colorName = {\n    \"aliceblue\": [240, 248, 255],\n    \"antiquewhite\": [250, 235, 215],\n    \"aqua\": [0, 255, 255],\n    \"aquamarine\": [127, 255, 212],\n    \"azure\": [240, 255, 255],\n    \"beige\": [245, 245, 220],\n    \"bisque\": [255, 228, 196],\n    \"black\": [0, 0, 0],\n    \"blanchedalmond\": [255, 235, 205],\n    \"blue\": [0, 0, 255],\n    \"blueviolet\": [138, 43, 226],\n    \"brown\": [165, 42, 42],\n    \"burlywood\": [222, 184, 135],\n    \"cadetblue\": [95, 158, 160],\n    \"chartreuse\": [127, 255, 0],\n    \"chocolate\": [210, 105, 30],\n    \"coral\": [255, 127, 80],\n    \"cornflowerblue\": [100, 149, 237],\n    \"cornsilk\": [255, 248, 220],\n    \"crimson\": [220, 20, 60],\n    \"cyan\": [0, 255, 255],\n    \"darkblue\": [0, 0, 139],\n    \"darkcyan\": [0, 139, 139],\n    \"darkgoldenrod\": [184, 134, 11],\n    \"darkgray\": [169, 169, 169],\n    \"darkgreen\": [0, 100, 0],\n    \"darkgrey\": [169, 169, 169],\n    \"darkkhaki\": [189, 183, 107],\n    \"darkmagenta\": [139, 0, 139],\n    \"darkolivegreen\": [85, 107, 47],\n    \"darkorange\": [255, 140, 0],\n    \"darkorchid\": [153, 50, 204],\n    \"darkred\": [139, 0, 0],\n    \"darksalmon\": [233, 150, 122],\n    \"darkseagreen\": [143, 188, 143],\n    \"darkslateblue\": [72, 61, 139],\n    \"darkslategray\": [47, 79, 79],\n    \"darkslategrey\": [47, 79, 79],\n    \"darkturquoise\": [0, 206, 209],\n    \"darkviolet\": [148, 0, 211],\n    \"deeppink\": [255, 20, 147],\n    \"deepskyblue\": [0, 191, 255],\n    \"dimgray\": [105, 105, 105],\n    \"dimgrey\": [105, 105, 105],\n    \"dodgerblue\": [30, 144, 255],\n    \"firebrick\": [178, 34, 34],\n    \"floralwhite\": [255, 250, 240],\n    \"forestgreen\": [34, 139, 34],\n    \"fuchsia\": [255, 0, 255],\n    \"gainsboro\": [220, 220, 220],\n    \"ghostwhite\": [248, 248, 255],\n    \"gold\": [255, 215, 0],\n    \"goldenrod\": [218, 165, 32],\n    \"gray\": [128, 128, 128],\n    \"green\": [0, 128, 0],\n    \"greenyellow\": [173, 255, 47],\n    \"grey\": [128, 128, 128],\n    \"honeydew\": [240, 255, 240],\n    \"hotpink\": [255, 105, 180],\n    \"indianred\": [205, 92, 92],\n    \"indigo\": [75, 0, 130],\n    \"ivory\": [255, 255, 240],\n    \"khaki\": [240, 230, 140],\n    \"lavender\": [230, 230, 250],\n    \"lavenderblush\": [255, 240, 245],\n    \"lawngreen\": [124, 252, 0],\n    \"lemonchiffon\": [255, 250, 205],\n    \"lightblue\": [173, 216, 230],\n    \"lightcoral\": [240, 128, 128],\n    \"lightcyan\": [224, 255, 255],\n    \"lightgoldenrodyellow\": [250, 250, 210],\n    \"lightgray\": [211, 211, 211],\n    \"lightgreen\": [144, 238, 144],\n    \"lightgrey\": [211, 211, 211],\n    \"lightpink\": [255, 182, 193],\n    \"lightsalmon\": [255, 160, 122],\n    \"lightseagreen\": [32, 178, 170],\n    \"lightskyblue\": [135, 206, 250],\n    \"lightslategray\": [119, 136, 153],\n    \"lightslategrey\": [119, 136, 153],\n    \"lightsteelblue\": [176, 196, 222],\n    \"lightyellow\": [255, 255, 224],\n    \"lime\": [0, 255, 0],\n    \"limegreen\": [50, 205, 50],\n    \"linen\": [250, 240, 230],\n    \"magenta\": [255, 0, 255],\n    \"maroon\": [128, 0, 0],\n    \"mediumaquamarine\": [102, 205, 170],\n    \"mediumblue\": [0, 0, 205],\n    \"mediumorchid\": [186, 85, 211],\n    \"mediumpurple\": [147, 112, 219],\n    \"mediumseagreen\": [60, 179, 113],\n    \"mediumslateblue\": [123, 104, 238],\n    \"mediumspringgreen\": [0, 250, 154],\n    \"mediumturquoise\": [72, 209, 204],\n    \"mediumvioletred\": [199, 21, 133],\n    \"midnightblue\": [25, 25, 112],\n    \"mintcream\": [245, 255, 250],\n    \"mistyrose\": [255, 228, 225],\n    \"moccasin\": [255, 228, 181],\n    \"navajowhite\": [255, 222, 173],\n    \"navy\": [0, 0, 128],\n    \"oldlace\": [253, 245, 230],\n    \"olive\": [128, 128, 0],\n    \"olivedrab\": [107, 142, 35],\n    \"orange\": [255, 165, 0],\n    \"orangered\": [255, 69, 0],\n    \"orchid\": [218, 112, 214],\n    \"palegoldenrod\": [238, 232, 170],\n    \"palegreen\": [152, 251, 152],\n    \"paleturquoise\": [175, 238, 238],\n    \"palevioletred\": [219, 112, 147],\n    \"papayawhip\": [255, 239, 213],\n    \"peachpuff\": [255, 218, 185],\n    \"peru\": [205, 133, 63],\n    \"pink\": [255, 192, 203],\n    \"plum\": [221, 160, 221],\n    \"powderblue\": [176, 224, 230],\n    \"purple\": [128, 0, 128],\n    \"rebeccapurple\": [102, 51, 153],\n    \"red\": [255, 0, 0],\n    \"rosybrown\": [188, 143, 143],\n    \"royalblue\": [65, 105, 225],\n    \"saddlebrown\": [139, 69, 19],\n    \"salmon\": [250, 128, 114],\n    \"sandybrown\": [244, 164, 96],\n    \"seagreen\": [46, 139, 87],\n    \"seashell\": [255, 245, 238],\n    \"sienna\": [160, 82, 45],\n    \"silver\": [192, 192, 192],\n    \"skyblue\": [135, 206, 235],\n    \"slateblue\": [106, 90, 205],\n    \"slategray\": [112, 128, 144],\n    \"slategrey\": [112, 128, 144],\n    \"snow\": [255, 250, 250],\n    \"springgreen\": [0, 255, 127],\n    \"steelblue\": [70, 130, 180],\n    \"tan\": [210, 180, 140],\n    \"teal\": [0, 128, 128],\n    \"thistle\": [216, 191, 216],\n    \"tomato\": [255, 99, 71],\n    \"turquoise\": [64, 224, 208],\n    \"violet\": [238, 130, 238],\n    \"wheat\": [245, 222, 179],\n    \"white\": [255, 255, 255],\n    \"whitesmoke\": [245, 245, 245],\n    \"yellow\": [255, 255, 0],\n    \"yellowgreen\": [154, 205, 50]\n  };\n  /* MIT license */\n\n  var colorString = {\n    getRgba: getRgba,\n    getHsla: getHsla,\n    getRgb: getRgb,\n    getHsl: getHsl,\n    getHwb: getHwb,\n    getAlpha: getAlpha,\n    hexString: hexString,\n    rgbString: rgbString,\n    rgbaString: rgbaString,\n    percentString: percentString,\n    percentaString: percentaString,\n    hslString: hslString,\n    hslaString: hslaString,\n    hwbString: hwbString,\n    keyword: keyword\n  };\n\n  function getRgba(string) {\n    if (!string) {\n      return;\n    }\n\n    var abbr = /^#([a-fA-F0-9]{3,4})$/i,\n        hex = /^#([a-fA-F0-9]{6}([a-fA-F0-9]{2})?)$/i,\n        rgba = /^rgba?\\(\\s*([+-]?\\d+)\\s*,\\s*([+-]?\\d+)\\s*,\\s*([+-]?\\d+)\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)$/i,\n        per = /^rgba?\\(\\s*([+-]?[\\d\\.]+)\\%\\s*,\\s*([+-]?[\\d\\.]+)\\%\\s*,\\s*([+-]?[\\d\\.]+)\\%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)$/i,\n        keyword = /(\\w+)/;\n    var rgb = [0, 0, 0],\n        a = 1,\n        match = string.match(abbr),\n        hexAlpha = \"\";\n\n    if (match) {\n      match = match[1];\n      hexAlpha = match[3];\n\n      for (var i = 0; i < rgb.length; i++) {\n        rgb[i] = parseInt(match[i] + match[i], 16);\n      }\n\n      if (hexAlpha) {\n        a = Math.round(parseInt(hexAlpha + hexAlpha, 16) / 255 * 100) / 100;\n      }\n    } else if (match = string.match(hex)) {\n      hexAlpha = match[2];\n      match = match[1];\n\n      for (var i = 0; i < rgb.length; i++) {\n        rgb[i] = parseInt(match.slice(i * 2, i * 2 + 2), 16);\n      }\n\n      if (hexAlpha) {\n        a = Math.round(parseInt(hexAlpha, 16) / 255 * 100) / 100;\n      }\n    } else if (match = string.match(rgba)) {\n      for (var i = 0; i < rgb.length; i++) {\n        rgb[i] = parseInt(match[i + 1]);\n      }\n\n      a = parseFloat(match[4]);\n    } else if (match = string.match(per)) {\n      for (var i = 0; i < rgb.length; i++) {\n        rgb[i] = Math.round(parseFloat(match[i + 1]) * 2.55);\n      }\n\n      a = parseFloat(match[4]);\n    } else if (match = string.match(keyword)) {\n      if (match[1] == \"transparent\") {\n        return [0, 0, 0, 0];\n      }\n\n      rgb = colorName[match[1]];\n\n      if (!rgb) {\n        return;\n      }\n    }\n\n    for (var i = 0; i < rgb.length; i++) {\n      rgb[i] = scale(rgb[i], 0, 255);\n    }\n\n    if (!a && a != 0) {\n      a = 1;\n    } else {\n      a = scale(a, 0, 1);\n    }\n\n    rgb[3] = a;\n    return rgb;\n  }\n\n  function getHsla(string) {\n    if (!string) {\n      return;\n    }\n\n    var hsl = /^hsla?\\(\\s*([+-]?\\d+)(?:deg)?\\s*,\\s*([+-]?[\\d\\.]+)%\\s*,\\s*([+-]?[\\d\\.]+)%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)/;\n    var match = string.match(hsl);\n\n    if (match) {\n      var alpha = parseFloat(match[4]);\n      var h = scale(parseInt(match[1]), 0, 360),\n          s = scale(parseFloat(match[2]), 0, 100),\n          l = scale(parseFloat(match[3]), 0, 100),\n          a = scale(isNaN(alpha) ? 1 : alpha, 0, 1);\n      return [h, s, l, a];\n    }\n  }\n\n  function getHwb(string) {\n    if (!string) {\n      return;\n    }\n\n    var hwb = /^hwb\\(\\s*([+-]?\\d+)(?:deg)?\\s*,\\s*([+-]?[\\d\\.]+)%\\s*,\\s*([+-]?[\\d\\.]+)%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)/;\n    var match = string.match(hwb);\n\n    if (match) {\n      var alpha = parseFloat(match[4]);\n      var h = scale(parseInt(match[1]), 0, 360),\n          w = scale(parseFloat(match[2]), 0, 100),\n          b = scale(parseFloat(match[3]), 0, 100),\n          a = scale(isNaN(alpha) ? 1 : alpha, 0, 1);\n      return [h, w, b, a];\n    }\n  }\n\n  function getRgb(string) {\n    var rgba = getRgba(string);\n    return rgba && rgba.slice(0, 3);\n  }\n\n  function getHsl(string) {\n    var hsla = getHsla(string);\n    return hsla && hsla.slice(0, 3);\n  }\n\n  function getAlpha(string) {\n    var vals = getRgba(string);\n\n    if (vals) {\n      return vals[3];\n    } else if (vals = getHsla(string)) {\n      return vals[3];\n    } else if (vals = getHwb(string)) {\n      return vals[3];\n    }\n  } // generators\n\n\n  function hexString(rgba, a) {\n    var a = a !== undefined && rgba.length === 3 ? a : rgba[3];\n    return \"#\" + hexDouble(rgba[0]) + hexDouble(rgba[1]) + hexDouble(rgba[2]) + (a >= 0 && a < 1 ? hexDouble(Math.round(a * 255)) : \"\");\n  }\n\n  function rgbString(rgba, alpha) {\n    if (alpha < 1 || rgba[3] && rgba[3] < 1) {\n      return rgbaString(rgba, alpha);\n    }\n\n    return \"rgb(\" + rgba[0] + \", \" + rgba[1] + \", \" + rgba[2] + \")\";\n  }\n\n  function rgbaString(rgba, alpha) {\n    if (alpha === undefined) {\n      alpha = rgba[3] !== undefined ? rgba[3] : 1;\n    }\n\n    return \"rgba(\" + rgba[0] + \", \" + rgba[1] + \", \" + rgba[2] + \", \" + alpha + \")\";\n  }\n\n  function percentString(rgba, alpha) {\n    if (alpha < 1 || rgba[3] && rgba[3] < 1) {\n      return percentaString(rgba, alpha);\n    }\n\n    var r = Math.round(rgba[0] / 255 * 100),\n        g = Math.round(rgba[1] / 255 * 100),\n        b = Math.round(rgba[2] / 255 * 100);\n    return \"rgb(\" + r + \"%, \" + g + \"%, \" + b + \"%)\";\n  }\n\n  function percentaString(rgba, alpha) {\n    var r = Math.round(rgba[0] / 255 * 100),\n        g = Math.round(rgba[1] / 255 * 100),\n        b = Math.round(rgba[2] / 255 * 100);\n    return \"rgba(\" + r + \"%, \" + g + \"%, \" + b + \"%, \" + (alpha || rgba[3] || 1) + \")\";\n  }\n\n  function hslString(hsla, alpha) {\n    if (alpha < 1 || hsla[3] && hsla[3] < 1) {\n      return hslaString(hsla, alpha);\n    }\n\n    return \"hsl(\" + hsla[0] + \", \" + hsla[1] + \"%, \" + hsla[2] + \"%)\";\n  }\n\n  function hslaString(hsla, alpha) {\n    if (alpha === undefined) {\n      alpha = hsla[3] !== undefined ? hsla[3] : 1;\n    }\n\n    return \"hsla(\" + hsla[0] + \", \" + hsla[1] + \"%, \" + hsla[2] + \"%, \" + alpha + \")\";\n  } // hwb is a bit different than rgb(a) & hsl(a) since there is no alpha specific syntax\n  // (hwb have alpha optional & 1 is default value)\n\n\n  function hwbString(hwb, alpha) {\n    if (alpha === undefined) {\n      alpha = hwb[3] !== undefined ? hwb[3] : 1;\n    }\n\n    return \"hwb(\" + hwb[0] + \", \" + hwb[1] + \"%, \" + hwb[2] + \"%\" + (alpha !== undefined && alpha !== 1 ? \", \" + alpha : \"\") + \")\";\n  }\n\n  function keyword(rgb) {\n    return reverseNames[rgb.slice(0, 3)];\n  } // helpers\n\n\n  function scale(num, min, max) {\n    return Math.min(Math.max(min, num), max);\n  }\n\n  function hexDouble(num) {\n    var str = num.toString(16).toUpperCase();\n    return str.length < 2 ? \"0\" + str : str;\n  } //create a list of reverse color names\n\n\n  var reverseNames = {};\n\n  for (var name in colorName) {\n    reverseNames[colorName[name]] = name;\n  }\n  /* MIT license */\n\n\n  var Color = function Color(obj) {\n    if (obj instanceof Color) {\n      return obj;\n    }\n\n    if (!(this instanceof Color)) {\n      return new Color(obj);\n    }\n\n    this.valid = false;\n    this.values = {\n      rgb: [0, 0, 0],\n      hsl: [0, 0, 0],\n      hsv: [0, 0, 0],\n      hwb: [0, 0, 0],\n      cmyk: [0, 0, 0, 0],\n      alpha: 1\n    }; // parse Color() argument\n\n    var vals;\n\n    if (typeof obj === 'string') {\n      vals = colorString.getRgba(obj);\n\n      if (vals) {\n        this.setValues('rgb', vals);\n      } else if (vals = colorString.getHsla(obj)) {\n        this.setValues('hsl', vals);\n      } else if (vals = colorString.getHwb(obj)) {\n        this.setValues('hwb', vals);\n      }\n    } else if (typeof obj === 'object') {\n      vals = obj;\n\n      if (vals.r !== undefined || vals.red !== undefined) {\n        this.setValues('rgb', vals);\n      } else if (vals.l !== undefined || vals.lightness !== undefined) {\n        this.setValues('hsl', vals);\n      } else if (vals.v !== undefined || vals.value !== undefined) {\n        this.setValues('hsv', vals);\n      } else if (vals.w !== undefined || vals.whiteness !== undefined) {\n        this.setValues('hwb', vals);\n      } else if (vals.c !== undefined || vals.cyan !== undefined) {\n        this.setValues('cmyk', vals);\n      }\n    }\n  };\n\n  Color.prototype = {\n    isValid: function isValid() {\n      return this.valid;\n    },\n    rgb: function rgb() {\n      return this.setSpace('rgb', arguments);\n    },\n    hsl: function hsl() {\n      return this.setSpace('hsl', arguments);\n    },\n    hsv: function hsv() {\n      return this.setSpace('hsv', arguments);\n    },\n    hwb: function hwb() {\n      return this.setSpace('hwb', arguments);\n    },\n    cmyk: function cmyk() {\n      return this.setSpace('cmyk', arguments);\n    },\n    rgbArray: function rgbArray() {\n      return this.values.rgb;\n    },\n    hslArray: function hslArray() {\n      return this.values.hsl;\n    },\n    hsvArray: function hsvArray() {\n      return this.values.hsv;\n    },\n    hwbArray: function hwbArray() {\n      var values = this.values;\n\n      if (values.alpha !== 1) {\n        return values.hwb.concat([values.alpha]);\n      }\n\n      return values.hwb;\n    },\n    cmykArray: function cmykArray() {\n      return this.values.cmyk;\n    },\n    rgbaArray: function rgbaArray() {\n      var values = this.values;\n      return values.rgb.concat([values.alpha]);\n    },\n    hslaArray: function hslaArray() {\n      var values = this.values;\n      return values.hsl.concat([values.alpha]);\n    },\n    alpha: function alpha(val) {\n      if (val === undefined) {\n        return this.values.alpha;\n      }\n\n      this.setValues('alpha', val);\n      return this;\n    },\n    red: function red(val) {\n      return this.setChannel('rgb', 0, val);\n    },\n    green: function green(val) {\n      return this.setChannel('rgb', 1, val);\n    },\n    blue: function blue(val) {\n      return this.setChannel('rgb', 2, val);\n    },\n    hue: function hue(val) {\n      if (val) {\n        val %= 360;\n        val = val < 0 ? 360 + val : val;\n      }\n\n      return this.setChannel('hsl', 0, val);\n    },\n    saturation: function saturation(val) {\n      return this.setChannel('hsl', 1, val);\n    },\n    lightness: function lightness(val) {\n      return this.setChannel('hsl', 2, val);\n    },\n    saturationv: function saturationv(val) {\n      return this.setChannel('hsv', 1, val);\n    },\n    whiteness: function whiteness(val) {\n      return this.setChannel('hwb', 1, val);\n    },\n    blackness: function blackness(val) {\n      return this.setChannel('hwb', 2, val);\n    },\n    value: function value(val) {\n      return this.setChannel('hsv', 2, val);\n    },\n    cyan: function cyan(val) {\n      return this.setChannel('cmyk', 0, val);\n    },\n    magenta: function magenta(val) {\n      return this.setChannel('cmyk', 1, val);\n    },\n    yellow: function yellow(val) {\n      return this.setChannel('cmyk', 2, val);\n    },\n    black: function black(val) {\n      return this.setChannel('cmyk', 3, val);\n    },\n    hexString: function hexString() {\n      return colorString.hexString(this.values.rgb);\n    },\n    rgbString: function rgbString() {\n      return colorString.rgbString(this.values.rgb, this.values.alpha);\n    },\n    rgbaString: function rgbaString() {\n      return colorString.rgbaString(this.values.rgb, this.values.alpha);\n    },\n    percentString: function percentString() {\n      return colorString.percentString(this.values.rgb, this.values.alpha);\n    },\n    hslString: function hslString() {\n      return colorString.hslString(this.values.hsl, this.values.alpha);\n    },\n    hslaString: function hslaString() {\n      return colorString.hslaString(this.values.hsl, this.values.alpha);\n    },\n    hwbString: function hwbString() {\n      return colorString.hwbString(this.values.hwb, this.values.alpha);\n    },\n    keyword: function keyword() {\n      return colorString.keyword(this.values.rgb, this.values.alpha);\n    },\n    rgbNumber: function rgbNumber() {\n      var rgb = this.values.rgb;\n      return rgb[0] << 16 | rgb[1] << 8 | rgb[2];\n    },\n    luminosity: function luminosity() {\n      // http://www.w3.org/TR/WCAG20/#relativeluminancedef\n      var rgb = this.values.rgb;\n      var lum = [];\n\n      for (var i = 0; i < rgb.length; i++) {\n        var chan = rgb[i] / 255;\n        lum[i] = chan <= 0.03928 ? chan / 12.92 : Math.pow((chan + 0.055) / 1.055, 2.4);\n      }\n\n      return 0.2126 * lum[0] + 0.7152 * lum[1] + 0.0722 * lum[2];\n    },\n    contrast: function contrast(color2) {\n      // http://www.w3.org/TR/WCAG20/#contrast-ratiodef\n      var lum1 = this.luminosity();\n      var lum2 = color2.luminosity();\n\n      if (lum1 > lum2) {\n        return (lum1 + 0.05) / (lum2 + 0.05);\n      }\n\n      return (lum2 + 0.05) / (lum1 + 0.05);\n    },\n    level: function level(color2) {\n      var contrastRatio = this.contrast(color2);\n\n      if (contrastRatio >= 7.1) {\n        return 'AAA';\n      }\n\n      return contrastRatio >= 4.5 ? 'AA' : '';\n    },\n    dark: function dark() {\n      // YIQ equation from http://24ways.org/2010/calculating-color-contrast\n      var rgb = this.values.rgb;\n      var yiq = (rgb[0] * 299 + rgb[1] * 587 + rgb[2] * 114) / 1000;\n      return yiq < 128;\n    },\n    light: function light() {\n      return !this.dark();\n    },\n    negate: function negate() {\n      var rgb = [];\n\n      for (var i = 0; i < 3; i++) {\n        rgb[i] = 255 - this.values.rgb[i];\n      }\n\n      this.setValues('rgb', rgb);\n      return this;\n    },\n    lighten: function lighten(ratio) {\n      var hsl = this.values.hsl;\n      hsl[2] += hsl[2] * ratio;\n      this.setValues('hsl', hsl);\n      return this;\n    },\n    darken: function darken(ratio) {\n      var hsl = this.values.hsl;\n      hsl[2] -= hsl[2] * ratio;\n      this.setValues('hsl', hsl);\n      return this;\n    },\n    saturate: function saturate(ratio) {\n      var hsl = this.values.hsl;\n      hsl[1] += hsl[1] * ratio;\n      this.setValues('hsl', hsl);\n      return this;\n    },\n    desaturate: function desaturate(ratio) {\n      var hsl = this.values.hsl;\n      hsl[1] -= hsl[1] * ratio;\n      this.setValues('hsl', hsl);\n      return this;\n    },\n    whiten: function whiten(ratio) {\n      var hwb = this.values.hwb;\n      hwb[1] += hwb[1] * ratio;\n      this.setValues('hwb', hwb);\n      return this;\n    },\n    blacken: function blacken(ratio) {\n      var hwb = this.values.hwb;\n      hwb[2] += hwb[2] * ratio;\n      this.setValues('hwb', hwb);\n      return this;\n    },\n    greyscale: function greyscale() {\n      var rgb = this.values.rgb; // http://en.wikipedia.org/wiki/Grayscale#Converting_color_to_grayscale\n\n      var val = rgb[0] * 0.3 + rgb[1] * 0.59 + rgb[2] * 0.11;\n      this.setValues('rgb', [val, val, val]);\n      return this;\n    },\n    clearer: function clearer(ratio) {\n      var alpha = this.values.alpha;\n      this.setValues('alpha', alpha - alpha * ratio);\n      return this;\n    },\n    opaquer: function opaquer(ratio) {\n      var alpha = this.values.alpha;\n      this.setValues('alpha', alpha + alpha * ratio);\n      return this;\n    },\n    rotate: function rotate(degrees) {\n      var hsl = this.values.hsl;\n      var hue = (hsl[0] + degrees) % 360;\n      hsl[0] = hue < 0 ? 360 + hue : hue;\n      this.setValues('hsl', hsl);\n      return this;\n    },\n\n    /**\n     * Ported from sass implementation in C\n     * https://github.com/sass/libsass/blob/0e6b4a2850092356aa3ece07c6b249f0221caced/functions.cpp#L209\n     */\n    mix: function mix(mixinColor, weight) {\n      var color1 = this;\n      var color2 = mixinColor;\n      var p = weight === undefined ? 0.5 : weight;\n      var w = 2 * p - 1;\n      var a = color1.alpha() - color2.alpha();\n      var w1 = ((w * a === -1 ? w : (w + a) / (1 + w * a)) + 1) / 2.0;\n      var w2 = 1 - w1;\n      return this.rgb(w1 * color1.red() + w2 * color2.red(), w1 * color1.green() + w2 * color2.green(), w1 * color1.blue() + w2 * color2.blue()).alpha(color1.alpha() * p + color2.alpha() * (1 - p));\n    },\n    toJSON: function toJSON() {\n      return this.rgb();\n    },\n    clone: function clone() {\n      // NOTE(SB): using node-clone creates a dependency to Buffer when using browserify,\n      // making the final build way to big to embed in Chart.js. So let's do it manually,\n      // assuming that values to clone are 1 dimension arrays containing only numbers,\n      // except 'alpha' which is a number.\n      var result = new Color();\n      var source = this.values;\n      var target = result.values;\n      var value, type;\n\n      for (var prop in source) {\n        if (source.hasOwnProperty(prop)) {\n          value = source[prop];\n          type = {}.toString.call(value);\n\n          if (type === '[object Array]') {\n            target[prop] = value.slice(0);\n          } else if (type === '[object Number]') {\n            target[prop] = value;\n          } else {\n            console.error('unexpected color value:', value);\n          }\n        }\n      }\n\n      return result;\n    }\n  };\n  Color.prototype.spaces = {\n    rgb: ['red', 'green', 'blue'],\n    hsl: ['hue', 'saturation', 'lightness'],\n    hsv: ['hue', 'saturation', 'value'],\n    hwb: ['hue', 'whiteness', 'blackness'],\n    cmyk: ['cyan', 'magenta', 'yellow', 'black']\n  };\n  Color.prototype.maxes = {\n    rgb: [255, 255, 255],\n    hsl: [360, 100, 100],\n    hsv: [360, 100, 100],\n    hwb: [360, 100, 100],\n    cmyk: [100, 100, 100, 100]\n  };\n\n  Color.prototype.getValues = function (space) {\n    var values = this.values;\n    var vals = {};\n\n    for (var i = 0; i < space.length; i++) {\n      vals[space.charAt(i)] = values[space][i];\n    }\n\n    if (values.alpha !== 1) {\n      vals.a = values.alpha;\n    } // {r: 255, g: 255, b: 255, a: 0.4}\n\n\n    return vals;\n  };\n\n  Color.prototype.setValues = function (space, vals) {\n    var values = this.values;\n    var spaces = this.spaces;\n    var maxes = this.maxes;\n    var alpha = 1;\n    var i;\n    this.valid = true;\n\n    if (space === 'alpha') {\n      alpha = vals;\n    } else if (vals.length) {\n      // [10, 10, 10]\n      values[space] = vals.slice(0, space.length);\n      alpha = vals[space.length];\n    } else if (vals[space.charAt(0)] !== undefined) {\n      // {r: 10, g: 10, b: 10}\n      for (i = 0; i < space.length; i++) {\n        values[space][i] = vals[space.charAt(i)];\n      }\n\n      alpha = vals.a;\n    } else if (vals[spaces[space][0]] !== undefined) {\n      // {red: 10, green: 10, blue: 10}\n      var chans = spaces[space];\n\n      for (i = 0; i < space.length; i++) {\n        values[space][i] = vals[chans[i]];\n      }\n\n      alpha = vals.alpha;\n    }\n\n    values.alpha = Math.max(0, Math.min(1, alpha === undefined ? values.alpha : alpha));\n\n    if (space === 'alpha') {\n      return false;\n    }\n\n    var capped; // cap values of the space prior converting all values\n\n    for (i = 0; i < space.length; i++) {\n      capped = Math.max(0, Math.min(maxes[space][i], values[space][i]));\n      values[space][i] = Math.round(capped);\n    } // convert to all the other color spaces\n\n\n    for (var sname in spaces) {\n      if (sname !== space) {\n        values[sname] = colorConvert[space][sname](values[space]);\n      }\n    }\n\n    return true;\n  };\n\n  Color.prototype.setSpace = function (space, args) {\n    var vals = args[0];\n\n    if (vals === undefined) {\n      // color.rgb()\n      return this.getValues(space);\n    } // color.rgb(10, 10, 10)\n\n\n    if (typeof vals === 'number') {\n      vals = Array.prototype.slice.call(args);\n    }\n\n    this.setValues(space, vals);\n    return this;\n  };\n\n  Color.prototype.setChannel = function (space, index, val) {\n    var svalues = this.values[space];\n\n    if (val === undefined) {\n      // color.red()\n      return svalues[index];\n    } else if (val === svalues[index]) {\n      // color.red(color.red())\n      return this;\n    } // color.red(100)\n\n\n    svalues[index] = val;\n    this.setValues(space, svalues);\n    return this;\n  };\n\n  if (typeof window !== 'undefined') {\n    window.Color = Color;\n  }\n\n  var chartjsColor = Color;\n  /**\n   * @namespace Chart.helpers\n   */\n\n  var helpers = {\n    /**\n     * An empty function that can be used, for example, for optional callback.\n     */\n    noop: function noop() {},\n\n    /**\n     * Returns a unique id, sequentially generated from a global variable.\n     * @returns {number}\n     * @function\n     */\n    uid: function () {\n      var id = 0;\n      return function () {\n        return id++;\n      };\n    }(),\n\n    /**\n     * Returns true if `value` is neither null nor undefined, else returns false.\n     * @param {*} value - The value to test.\n     * @returns {boolean}\n     * @since 2.7.0\n     */\n    isNullOrUndef: function isNullOrUndef(value) {\n      return value === null || typeof value === 'undefined';\n    },\n\n    /**\n     * Returns true if `value` is an array (including typed arrays), else returns false.\n     * @param {*} value - The value to test.\n     * @returns {boolean}\n     * @function\n     */\n    isArray: function isArray(value) {\n      if (Array.isArray && Array.isArray(value)) {\n        return true;\n      }\n\n      var type = Object.prototype.toString.call(value);\n\n      if (type.substr(0, 7) === '[object' && type.substr(-6) === 'Array]') {\n        return true;\n      }\n\n      return false;\n    },\n\n    /**\n     * Returns true if `value` is an object (excluding null), else returns false.\n     * @param {*} value - The value to test.\n     * @returns {boolean}\n     * @since 2.7.0\n     */\n    isObject: function isObject(value) {\n      return value !== null && Object.prototype.toString.call(value) === '[object Object]';\n    },\n\n    /**\n     * Returns true if `value` is a finite number, else returns false\n     * @param {*} value  - The value to test.\n     * @returns {boolean}\n     */\n    isFinite: function (_isFinite) {\n      function isFinite(_x) {\n        return _isFinite.apply(this, arguments);\n      }\n\n      isFinite.toString = function () {\n        return _isFinite.toString();\n      };\n\n      return isFinite;\n    }(function (value) {\n      return (typeof value === 'number' || value instanceof Number) && isFinite(value);\n    }),\n\n    /**\n     * Returns `value` if defined, else returns `defaultValue`.\n     * @param {*} value - The value to return if defined.\n     * @param {*} defaultValue - The value to return if `value` is undefined.\n     * @returns {*}\n     */\n    valueOrDefault: function valueOrDefault(value, defaultValue) {\n      return typeof value === 'undefined' ? defaultValue : value;\n    },\n\n    /**\n     * Returns value at the given `index` in array if defined, else returns `defaultValue`.\n     * @param {Array} value - The array to lookup for value at `index`.\n     * @param {number} index - The index in `value` to lookup for value.\n     * @param {*} defaultValue - The value to return if `value[index]` is undefined.\n     * @returns {*}\n     */\n    valueAtIndexOrDefault: function valueAtIndexOrDefault(value, index, defaultValue) {\n      return helpers.valueOrDefault(helpers.isArray(value) ? value[index] : value, defaultValue);\n    },\n\n    /**\n     * Calls `fn` with the given `args` in the scope defined by `thisArg` and returns the\n     * value returned by `fn`. If `fn` is not a function, this method returns undefined.\n     * @param {function} fn - The function to call.\n     * @param {Array|undefined|null} args - The arguments with which `fn` should be called.\n     * @param {object} [thisArg] - The value of `this` provided for the call to `fn`.\n     * @returns {*}\n     */\n    callback: function callback(fn, args, thisArg) {\n      if (fn && typeof fn.call === 'function') {\n        return fn.apply(thisArg, args);\n      }\n    },\n\n    /**\n     * Note(SB) for performance sake, this method should only be used when loopable type\n     * is unknown or in none intensive code (not called often and small loopable). Else\n     * it's preferable to use a regular for() loop and save extra function calls.\n     * @param {object|Array} loopable - The object or array to be iterated.\n     * @param {function} fn - The function to call for each item.\n     * @param {object} [thisArg] - The value of `this` provided for the call to `fn`.\n     * @param {boolean} [reverse] - If true, iterates backward on the loopable.\n     */\n    each: function each(loopable, fn, thisArg, reverse) {\n      var i, len, keys;\n\n      if (helpers.isArray(loopable)) {\n        len = loopable.length;\n\n        if (reverse) {\n          for (i = len - 1; i >= 0; i--) {\n            fn.call(thisArg, loopable[i], i);\n          }\n        } else {\n          for (i = 0; i < len; i++) {\n            fn.call(thisArg, loopable[i], i);\n          }\n        }\n      } else if (helpers.isObject(loopable)) {\n        keys = Object.keys(loopable);\n        len = keys.length;\n\n        for (i = 0; i < len; i++) {\n          fn.call(thisArg, loopable[keys[i]], keys[i]);\n        }\n      }\n    },\n\n    /**\n     * Returns true if the `a0` and `a1` arrays have the same content, else returns false.\n     * @see https://stackoverflow.com/a/14853974\n     * @param {Array} a0 - The array to compare\n     * @param {Array} a1 - The array to compare\n     * @returns {boolean}\n     */\n    arrayEquals: function arrayEquals(a0, a1) {\n      var i, ilen, v0, v1;\n\n      if (!a0 || !a1 || a0.length !== a1.length) {\n        return false;\n      }\n\n      for (i = 0, ilen = a0.length; i < ilen; ++i) {\n        v0 = a0[i];\n        v1 = a1[i];\n\n        if (v0 instanceof Array && v1 instanceof Array) {\n          if (!helpers.arrayEquals(v0, v1)) {\n            return false;\n          }\n        } else if (v0 !== v1) {\n          // NOTE: two different object instances will never be equal: {x:20} != {x:20}\n          return false;\n        }\n      }\n\n      return true;\n    },\n\n    /**\n     * Returns a deep copy of `source` without keeping references on objects and arrays.\n     * @param {*} source - The value to clone.\n     * @returns {*}\n     */\n    clone: function clone(source) {\n      if (helpers.isArray(source)) {\n        return source.map(helpers.clone);\n      }\n\n      if (helpers.isObject(source)) {\n        var target = {};\n        var keys = Object.keys(source);\n        var klen = keys.length;\n        var k = 0;\n\n        for (; k < klen; ++k) {\n          target[keys[k]] = helpers.clone(source[keys[k]]);\n        }\n\n        return target;\n      }\n\n      return source;\n    },\n\n    /**\n     * The default merger when Chart.helpers.merge is called without merger option.\n     * Note(SB): also used by mergeConfig and mergeScaleConfig as fallback.\n     * @private\n     */\n    _merger: function _merger(key, target, source, options) {\n      var tval = target[key];\n      var sval = source[key];\n\n      if (helpers.isObject(tval) && helpers.isObject(sval)) {\n        helpers.merge(tval, sval, options);\n      } else {\n        target[key] = helpers.clone(sval);\n      }\n    },\n\n    /**\n     * Merges source[key] in target[key] only if target[key] is undefined.\n     * @private\n     */\n    _mergerIf: function _mergerIf(key, target, source) {\n      var tval = target[key];\n      var sval = source[key];\n\n      if (helpers.isObject(tval) && helpers.isObject(sval)) {\n        helpers.mergeIf(tval, sval);\n      } else if (!target.hasOwnProperty(key)) {\n        target[key] = helpers.clone(sval);\n      }\n    },\n\n    /**\n     * Recursively deep copies `source` properties into `target` with the given `options`.\n     * IMPORTANT: `target` is not cloned and will be updated with `source` properties.\n     * @param {object} target - The target object in which all sources are merged into.\n     * @param {object|object[]} source - Object(s) to merge into `target`.\n     * @param {object} [options] - Merging options:\n     * @param {function} [options.merger] - The merge method (key, target, source, options)\n     * @returns {object} The `target` object.\n     */\n    merge: function merge(target, source, options) {\n      var sources = helpers.isArray(source) ? source : [source];\n      var ilen = sources.length;\n      var merge, i, keys, klen, k;\n\n      if (!helpers.isObject(target)) {\n        return target;\n      }\n\n      options = options || {};\n      merge = options.merger || helpers._merger;\n\n      for (i = 0; i < ilen; ++i) {\n        source = sources[i];\n\n        if (!helpers.isObject(source)) {\n          continue;\n        }\n\n        keys = Object.keys(source);\n\n        for (k = 0, klen = keys.length; k < klen; ++k) {\n          merge(keys[k], target, source, options);\n        }\n      }\n\n      return target;\n    },\n\n    /**\n     * Recursively deep copies `source` properties into `target` *only* if not defined in target.\n     * IMPORTANT: `target` is not cloned and will be updated with `source` properties.\n     * @param {object} target - The target object in which all sources are merged into.\n     * @param {object|object[]} source - Object(s) to merge into `target`.\n     * @returns {object} The `target` object.\n     */\n    mergeIf: function mergeIf(target, source) {\n      return helpers.merge(target, source, {\n        merger: helpers._mergerIf\n      });\n    },\n\n    /**\n     * Applies the contents of two or more objects together into the first object.\n     * @param {object} target - The target object in which all objects are merged into.\n     * @param {object} arg1 - Object containing additional properties to merge in target.\n     * @param {object} argN - Additional objects containing properties to merge in target.\n     * @returns {object} The `target` object.\n     */\n    extend: function extend(target) {\n      var setFn = function setFn(value, key) {\n        target[key] = value;\n      };\n\n      for (var i = 1, ilen = arguments.length; i < ilen; ++i) {\n        helpers.each(arguments[i], setFn);\n      }\n\n      return target;\n    },\n\n    /**\n     * Basic javascript inheritance based on the model created in Backbone.js\n     */\n    inherits: function inherits(extensions) {\n      var me = this;\n      var ChartElement = extensions && extensions.hasOwnProperty('constructor') ? extensions.constructor : function () {\n        return me.apply(this, arguments);\n      };\n\n      var Surrogate = function Surrogate() {\n        this.constructor = ChartElement;\n      };\n\n      Surrogate.prototype = me.prototype;\n      ChartElement.prototype = new Surrogate();\n      ChartElement.extend = helpers.inherits;\n\n      if (extensions) {\n        helpers.extend(ChartElement.prototype, extensions);\n      }\n\n      ChartElement.__super__ = me.prototype;\n      return ChartElement;\n    }\n  };\n  var helpers_core = helpers; // DEPRECATIONS\n\n  /**\n   * Provided for backward compatibility, use Chart.helpers.callback instead.\n   * @function Chart.helpers.callCallback\n   * @deprecated since version 2.6.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers.callCallback = helpers.callback;\n  /**\n   * Provided for backward compatibility, use Array.prototype.indexOf instead.\n   * Array.prototype.indexOf compatibility: Chrome, Opera, Safari, FF1.5+, IE9+\n   * @function Chart.helpers.indexOf\n   * @deprecated since version 2.7.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers.indexOf = function (array, item, fromIndex) {\n    return Array.prototype.indexOf.call(array, item, fromIndex);\n  };\n  /**\n   * Provided for backward compatibility, use Chart.helpers.valueOrDefault instead.\n   * @function Chart.helpers.getValueOrDefault\n   * @deprecated since version 2.7.0\n   * @todo remove at version 3\n   * @private\n   */\n\n\n  helpers.getValueOrDefault = helpers.valueOrDefault;\n  /**\n   * Provided for backward compatibility, use Chart.helpers.valueAtIndexOrDefault instead.\n   * @function Chart.helpers.getValueAtIndexOrDefault\n   * @deprecated since version 2.7.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers.getValueAtIndexOrDefault = helpers.valueAtIndexOrDefault;\n  /**\n   * Easing functions adapted from Robert Penner's easing equations.\n   * @namespace Chart.helpers.easingEffects\n   * @see http://www.robertpenner.com/easing/\n   */\n\n  var effects = {\n    linear: function linear(t) {\n      return t;\n    },\n    easeInQuad: function easeInQuad(t) {\n      return t * t;\n    },\n    easeOutQuad: function easeOutQuad(t) {\n      return -t * (t - 2);\n    },\n    easeInOutQuad: function easeInOutQuad(t) {\n      if ((t /= 0.5) < 1) {\n        return 0.5 * t * t;\n      }\n\n      return -0.5 * (--t * (t - 2) - 1);\n    },\n    easeInCubic: function easeInCubic(t) {\n      return t * t * t;\n    },\n    easeOutCubic: function easeOutCubic(t) {\n      return (t = t - 1) * t * t + 1;\n    },\n    easeInOutCubic: function easeInOutCubic(t) {\n      if ((t /= 0.5) < 1) {\n        return 0.5 * t * t * t;\n      }\n\n      return 0.5 * ((t -= 2) * t * t + 2);\n    },\n    easeInQuart: function easeInQuart(t) {\n      return t * t * t * t;\n    },\n    easeOutQuart: function easeOutQuart(t) {\n      return -((t = t - 1) * t * t * t - 1);\n    },\n    easeInOutQuart: function easeInOutQuart(t) {\n      if ((t /= 0.5) < 1) {\n        return 0.5 * t * t * t * t;\n      }\n\n      return -0.5 * ((t -= 2) * t * t * t - 2);\n    },\n    easeInQuint: function easeInQuint(t) {\n      return t * t * t * t * t;\n    },\n    easeOutQuint: function easeOutQuint(t) {\n      return (t = t - 1) * t * t * t * t + 1;\n    },\n    easeInOutQuint: function easeInOutQuint(t) {\n      if ((t /= 0.5) < 1) {\n        return 0.5 * t * t * t * t * t;\n      }\n\n      return 0.5 * ((t -= 2) * t * t * t * t + 2);\n    },\n    easeInSine: function easeInSine(t) {\n      return -Math.cos(t * (Math.PI / 2)) + 1;\n    },\n    easeOutSine: function easeOutSine(t) {\n      return Math.sin(t * (Math.PI / 2));\n    },\n    easeInOutSine: function easeInOutSine(t) {\n      return -0.5 * (Math.cos(Math.PI * t) - 1);\n    },\n    easeInExpo: function easeInExpo(t) {\n      return t === 0 ? 0 : Math.pow(2, 10 * (t - 1));\n    },\n    easeOutExpo: function easeOutExpo(t) {\n      return t === 1 ? 1 : -Math.pow(2, -10 * t) + 1;\n    },\n    easeInOutExpo: function easeInOutExpo(t) {\n      if (t === 0) {\n        return 0;\n      }\n\n      if (t === 1) {\n        return 1;\n      }\n\n      if ((t /= 0.5) < 1) {\n        return 0.5 * Math.pow(2, 10 * (t - 1));\n      }\n\n      return 0.5 * (-Math.pow(2, -10 * --t) + 2);\n    },\n    easeInCirc: function easeInCirc(t) {\n      if (t >= 1) {\n        return t;\n      }\n\n      return -(Math.sqrt(1 - t * t) - 1);\n    },\n    easeOutCirc: function easeOutCirc(t) {\n      return Math.sqrt(1 - (t = t - 1) * t);\n    },\n    easeInOutCirc: function easeInOutCirc(t) {\n      if ((t /= 0.5) < 1) {\n        return -0.5 * (Math.sqrt(1 - t * t) - 1);\n      }\n\n      return 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1);\n    },\n    easeInElastic: function easeInElastic(t) {\n      var s = 1.70158;\n      var p = 0;\n      var a = 1;\n\n      if (t === 0) {\n        return 0;\n      }\n\n      if (t === 1) {\n        return 1;\n      }\n\n      if (!p) {\n        p = 0.3;\n      }\n\n      if (a < 1) {\n        a = 1;\n        s = p / 4;\n      } else {\n        s = p / (2 * Math.PI) * Math.asin(1 / a);\n      }\n\n      return -(a * Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * (2 * Math.PI) / p));\n    },\n    easeOutElastic: function easeOutElastic(t) {\n      var s = 1.70158;\n      var p = 0;\n      var a = 1;\n\n      if (t === 0) {\n        return 0;\n      }\n\n      if (t === 1) {\n        return 1;\n      }\n\n      if (!p) {\n        p = 0.3;\n      }\n\n      if (a < 1) {\n        a = 1;\n        s = p / 4;\n      } else {\n        s = p / (2 * Math.PI) * Math.asin(1 / a);\n      }\n\n      return a * Math.pow(2, -10 * t) * Math.sin((t - s) * (2 * Math.PI) / p) + 1;\n    },\n    easeInOutElastic: function easeInOutElastic(t) {\n      var s = 1.70158;\n      var p = 0;\n      var a = 1;\n\n      if (t === 0) {\n        return 0;\n      }\n\n      if ((t /= 0.5) === 2) {\n        return 1;\n      }\n\n      if (!p) {\n        p = 0.45;\n      }\n\n      if (a < 1) {\n        a = 1;\n        s = p / 4;\n      } else {\n        s = p / (2 * Math.PI) * Math.asin(1 / a);\n      }\n\n      if (t < 1) {\n        return -0.5 * (a * Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * (2 * Math.PI) / p));\n      }\n\n      return a * Math.pow(2, -10 * (t -= 1)) * Math.sin((t - s) * (2 * Math.PI) / p) * 0.5 + 1;\n    },\n    easeInBack: function easeInBack(t) {\n      var s = 1.70158;\n      return t * t * ((s + 1) * t - s);\n    },\n    easeOutBack: function easeOutBack(t) {\n      var s = 1.70158;\n      return (t = t - 1) * t * ((s + 1) * t + s) + 1;\n    },\n    easeInOutBack: function easeInOutBack(t) {\n      var s = 1.70158;\n\n      if ((t /= 0.5) < 1) {\n        return 0.5 * (t * t * (((s *= 1.525) + 1) * t - s));\n      }\n\n      return 0.5 * ((t -= 2) * t * (((s *= 1.525) + 1) * t + s) + 2);\n    },\n    easeInBounce: function easeInBounce(t) {\n      return 1 - effects.easeOutBounce(1 - t);\n    },\n    easeOutBounce: function easeOutBounce(t) {\n      if (t < 1 / 2.75) {\n        return 7.5625 * t * t;\n      }\n\n      if (t < 2 / 2.75) {\n        return 7.5625 * (t -= 1.5 / 2.75) * t + 0.75;\n      }\n\n      if (t < 2.5 / 2.75) {\n        return 7.5625 * (t -= 2.25 / 2.75) * t + 0.9375;\n      }\n\n      return 7.5625 * (t -= 2.625 / 2.75) * t + 0.984375;\n    },\n    easeInOutBounce: function easeInOutBounce(t) {\n      if (t < 0.5) {\n        return effects.easeInBounce(t * 2) * 0.5;\n      }\n\n      return effects.easeOutBounce(t * 2 - 1) * 0.5 + 0.5;\n    }\n  };\n  var helpers_easing = {\n    effects: effects\n  }; // DEPRECATIONS\n\n  /**\n   * Provided for backward compatibility, use Chart.helpers.easing.effects instead.\n   * @function Chart.helpers.easingEffects\n   * @deprecated since version 2.7.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers_core.easingEffects = effects;\n  var PI = Math.PI;\n  var RAD_PER_DEG = PI / 180;\n  var DOUBLE_PI = PI * 2;\n  var HALF_PI = PI / 2;\n  var QUARTER_PI = PI / 4;\n  var TWO_THIRDS_PI = PI * 2 / 3;\n  /**\n   * @namespace Chart.helpers.canvas\n   */\n\n  var exports$1 = {\n    /**\n     * Clears the entire canvas associated to the given `chart`.\n     * @param {Chart} chart - The chart for which to clear the canvas.\n     */\n    clear: function clear(chart) {\n      chart.ctx.clearRect(0, 0, chart.width, chart.height);\n    },\n\n    /**\n     * Creates a \"path\" for a rectangle with rounded corners at position (x, y) with a\n     * given size (width, height) and the same `radius` for all corners.\n     * @param {CanvasRenderingContext2D} ctx - The canvas 2D Context.\n     * @param {number} x - The x axis of the coordinate for the rectangle starting point.\n     * @param {number} y - The y axis of the coordinate for the rectangle starting point.\n     * @param {number} width - The rectangle's width.\n     * @param {number} height - The rectangle's height.\n     * @param {number} radius - The rounded amount (in pixels) for the four corners.\n     * @todo handle `radius` as top-left, top-right, bottom-right, bottom-left array/object?\n     */\n    roundedRect: function roundedRect(ctx, x, y, width, height, radius) {\n      if (radius) {\n        var r = Math.min(radius, height / 2, width / 2);\n        var left = x + r;\n        var top = y + r;\n        var right = x + width - r;\n        var bottom = y + height - r;\n        ctx.moveTo(x, top);\n\n        if (left < right && top < bottom) {\n          ctx.arc(left, top, r, -PI, -HALF_PI);\n          ctx.arc(right, top, r, -HALF_PI, 0);\n          ctx.arc(right, bottom, r, 0, HALF_PI);\n          ctx.arc(left, bottom, r, HALF_PI, PI);\n        } else if (left < right) {\n          ctx.moveTo(left, y);\n          ctx.arc(right, top, r, -HALF_PI, HALF_PI);\n          ctx.arc(left, top, r, HALF_PI, PI + HALF_PI);\n        } else if (top < bottom) {\n          ctx.arc(left, top, r, -PI, 0);\n          ctx.arc(left, bottom, r, 0, PI);\n        } else {\n          ctx.arc(left, top, r, -PI, PI);\n        }\n\n        ctx.closePath();\n        ctx.moveTo(x, y);\n      } else {\n        ctx.rect(x, y, width, height);\n      }\n    },\n    drawPoint: function drawPoint(ctx, style, radius, x, y, rotation) {\n      var type, xOffset, yOffset, size, cornerRadius;\n      var rad = (rotation || 0) * RAD_PER_DEG;\n\n      if (style && typeof style === 'object') {\n        type = style.toString();\n\n        if (type === '[object HTMLImageElement]' || type === '[object HTMLCanvasElement]') {\n          ctx.drawImage(style, x - style.width / 2, y - style.height / 2, style.width, style.height);\n          return;\n        }\n      }\n\n      if (isNaN(radius) || radius <= 0) {\n        return;\n      }\n\n      ctx.beginPath();\n\n      switch (style) {\n        // Default includes circle\n        default:\n          ctx.arc(x, y, radius, 0, DOUBLE_PI);\n          ctx.closePath();\n          break;\n\n        case 'triangle':\n          ctx.moveTo(x + Math.sin(rad) * radius, y - Math.cos(rad) * radius);\n          rad += TWO_THIRDS_PI;\n          ctx.lineTo(x + Math.sin(rad) * radius, y - Math.cos(rad) * radius);\n          rad += TWO_THIRDS_PI;\n          ctx.lineTo(x + Math.sin(rad) * radius, y - Math.cos(rad) * radius);\n          ctx.closePath();\n          break;\n\n        case 'rectRounded':\n          // NOTE: the rounded rect implementation changed to use `arc` instead of\n          // `quadraticCurveTo` since it generates better results when rect is\n          // almost a circle. 0.516 (instead of 0.5) produces results with visually\n          // closer proportion to the previous impl and it is inscribed in the\n          // circle with `radius`. For more details, see the following PRs:\n          // https://github.com/chartjs/Chart.js/issues/5597\n          // https://github.com/chartjs/Chart.js/issues/5858\n          cornerRadius = radius * 0.516;\n          size = radius - cornerRadius;\n          xOffset = Math.cos(rad + QUARTER_PI) * size;\n          yOffset = Math.sin(rad + QUARTER_PI) * size;\n          ctx.arc(x - xOffset, y - yOffset, cornerRadius, rad - PI, rad - HALF_PI);\n          ctx.arc(x + yOffset, y - xOffset, cornerRadius, rad - HALF_PI, rad);\n          ctx.arc(x + xOffset, y + yOffset, cornerRadius, rad, rad + HALF_PI);\n          ctx.arc(x - yOffset, y + xOffset, cornerRadius, rad + HALF_PI, rad + PI);\n          ctx.closePath();\n          break;\n\n        case 'rect':\n          if (!rotation) {\n            size = Math.SQRT1_2 * radius;\n            ctx.rect(x - size, y - size, 2 * size, 2 * size);\n            break;\n          }\n\n          rad += QUARTER_PI;\n\n        /* falls through */\n\n        case 'rectRot':\n          xOffset = Math.cos(rad) * radius;\n          yOffset = Math.sin(rad) * radius;\n          ctx.moveTo(x - xOffset, y - yOffset);\n          ctx.lineTo(x + yOffset, y - xOffset);\n          ctx.lineTo(x + xOffset, y + yOffset);\n          ctx.lineTo(x - yOffset, y + xOffset);\n          ctx.closePath();\n          break;\n\n        case 'crossRot':\n          rad += QUARTER_PI;\n\n        /* falls through */\n\n        case 'cross':\n          xOffset = Math.cos(rad) * radius;\n          yOffset = Math.sin(rad) * radius;\n          ctx.moveTo(x - xOffset, y - yOffset);\n          ctx.lineTo(x + xOffset, y + yOffset);\n          ctx.moveTo(x + yOffset, y - xOffset);\n          ctx.lineTo(x - yOffset, y + xOffset);\n          break;\n\n        case 'star':\n          xOffset = Math.cos(rad) * radius;\n          yOffset = Math.sin(rad) * radius;\n          ctx.moveTo(x - xOffset, y - yOffset);\n          ctx.lineTo(x + xOffset, y + yOffset);\n          ctx.moveTo(x + yOffset, y - xOffset);\n          ctx.lineTo(x - yOffset, y + xOffset);\n          rad += QUARTER_PI;\n          xOffset = Math.cos(rad) * radius;\n          yOffset = Math.sin(rad) * radius;\n          ctx.moveTo(x - xOffset, y - yOffset);\n          ctx.lineTo(x + xOffset, y + yOffset);\n          ctx.moveTo(x + yOffset, y - xOffset);\n          ctx.lineTo(x - yOffset, y + xOffset);\n          break;\n\n        case 'line':\n          xOffset = Math.cos(rad) * radius;\n          yOffset = Math.sin(rad) * radius;\n          ctx.moveTo(x - xOffset, y - yOffset);\n          ctx.lineTo(x + xOffset, y + yOffset);\n          break;\n\n        case 'dash':\n          ctx.moveTo(x, y);\n          ctx.lineTo(x + Math.cos(rad) * radius, y + Math.sin(rad) * radius);\n          break;\n      }\n\n      ctx.fill();\n      ctx.stroke();\n    },\n\n    /**\n     * Returns true if the point is inside the rectangle\n     * @param {object} point - The point to test\n     * @param {object} area - The rectangle\n     * @returns {boolean}\n     * @private\n     */\n    _isPointInArea: function _isPointInArea(point, area) {\n      var epsilon = 1e-6; // 1e-6 is margin in pixels for accumulated error.\n\n      return point.x > area.left - epsilon && point.x < area.right + epsilon && point.y > area.top - epsilon && point.y < area.bottom + epsilon;\n    },\n    clipArea: function clipArea(ctx, area) {\n      ctx.save();\n      ctx.beginPath();\n      ctx.rect(area.left, area.top, area.right - area.left, area.bottom - area.top);\n      ctx.clip();\n    },\n    unclipArea: function unclipArea(ctx) {\n      ctx.restore();\n    },\n    lineTo: function lineTo(ctx, previous, target, flip) {\n      var stepped = target.steppedLine;\n\n      if (stepped) {\n        if (stepped === 'middle') {\n          var midpoint = (previous.x + target.x) / 2.0;\n          ctx.lineTo(midpoint, flip ? target.y : previous.y);\n          ctx.lineTo(midpoint, flip ? previous.y : target.y);\n        } else if (stepped === 'after' && !flip || stepped !== 'after' && flip) {\n          ctx.lineTo(previous.x, target.y);\n        } else {\n          ctx.lineTo(target.x, previous.y);\n        }\n\n        ctx.lineTo(target.x, target.y);\n        return;\n      }\n\n      if (!target.tension) {\n        ctx.lineTo(target.x, target.y);\n        return;\n      }\n\n      ctx.bezierCurveTo(flip ? previous.controlPointPreviousX : previous.controlPointNextX, flip ? previous.controlPointPreviousY : previous.controlPointNextY, flip ? target.controlPointNextX : target.controlPointPreviousX, flip ? target.controlPointNextY : target.controlPointPreviousY, target.x, target.y);\n    }\n  };\n  var helpers_canvas = exports$1; // DEPRECATIONS\n\n  /**\n   * Provided for backward compatibility, use Chart.helpers.canvas.clear instead.\n   * @namespace Chart.helpers.clear\n   * @deprecated since version 2.7.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers_core.clear = exports$1.clear;\n  /**\n   * Provided for backward compatibility, use Chart.helpers.canvas.roundedRect instead.\n   * @namespace Chart.helpers.drawRoundedRectangle\n   * @deprecated since version 2.7.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers_core.drawRoundedRectangle = function (ctx) {\n    ctx.beginPath();\n    exports$1.roundedRect.apply(exports$1, arguments);\n  };\n\n  var defaults = {\n    /**\n     * @private\n     */\n    _set: function _set(scope, values) {\n      return helpers_core.merge(this[scope] || (this[scope] = {}), values);\n    }\n  };\n\n  defaults._set('global', {\n    defaultColor: 'rgba(0,0,0,0.1)',\n    defaultFontColor: '#666',\n    defaultFontFamily: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\n    defaultFontSize: 12,\n    defaultFontStyle: 'normal',\n    defaultLineHeight: 1.2,\n    showLines: true\n  });\n\n  var core_defaults = defaults;\n  var valueOrDefault = helpers_core.valueOrDefault;\n  /**\n   * Converts the given font object into a CSS font string.\n   * @param {object} font - A font object.\n   * @return {string} The CSS font string. See https://developer.mozilla.org/en-US/docs/Web/CSS/font\n   * @private\n   */\n\n  function toFontString(font) {\n    if (!font || helpers_core.isNullOrUndef(font.size) || helpers_core.isNullOrUndef(font.family)) {\n      return null;\n    }\n\n    return (font.style ? font.style + ' ' : '') + (font.weight ? font.weight + ' ' : '') + font.size + 'px ' + font.family;\n  }\n  /**\n   * @alias Chart.helpers.options\n   * @namespace\n   */\n\n\n  var helpers_options = {\n    /**\n     * Converts the given line height `value` in pixels for a specific font `size`.\n     * @param {number|string} value - The lineHeight to parse (eg. 1.6, '14px', '75%', '1.6em').\n     * @param {number} size - The font size (in pixels) used to resolve relative `value`.\n     * @returns {number} The effective line height in pixels (size * 1.2 if value is invalid).\n     * @see https://developer.mozilla.org/en-US/docs/Web/CSS/line-height\n     * @since 2.7.0\n     */\n    toLineHeight: function toLineHeight(value, size) {\n      var matches = ('' + value).match(/^(normal|(\\d+(?:\\.\\d+)?)(px|em|%)?)$/);\n\n      if (!matches || matches[1] === 'normal') {\n        return size * 1.2;\n      }\n\n      value = +matches[2];\n\n      switch (matches[3]) {\n        case 'px':\n          return value;\n\n        case '%':\n          value /= 100;\n          break;\n\n        default:\n          break;\n      }\n\n      return size * value;\n    },\n\n    /**\n     * Converts the given value into a padding object with pre-computed width/height.\n     * @param {number|object} value - If a number, set the value to all TRBL component,\n     *  else, if and object, use defined properties and sets undefined ones to 0.\n     * @returns {object} The padding values (top, right, bottom, left, width, height)\n     * @since 2.7.0\n     */\n    toPadding: function toPadding(value) {\n      var t, r, b, l;\n\n      if (helpers_core.isObject(value)) {\n        t = +value.top || 0;\n        r = +value.right || 0;\n        b = +value.bottom || 0;\n        l = +value.left || 0;\n      } else {\n        t = r = b = l = +value || 0;\n      }\n\n      return {\n        top: t,\n        right: r,\n        bottom: b,\n        left: l,\n        height: t + b,\n        width: l + r\n      };\n    },\n\n    /**\n     * Parses font options and returns the font object.\n     * @param {object} options - A object that contains font options to be parsed.\n     * @return {object} The font object.\n     * @todo Support font.* options and renamed to toFont().\n     * @private\n     */\n    _parseFont: function _parseFont(options) {\n      var globalDefaults = core_defaults.global;\n      var size = valueOrDefault(options.fontSize, globalDefaults.defaultFontSize);\n      var font = {\n        family: valueOrDefault(options.fontFamily, globalDefaults.defaultFontFamily),\n        lineHeight: helpers_core.options.toLineHeight(valueOrDefault(options.lineHeight, globalDefaults.defaultLineHeight), size),\n        size: size,\n        style: valueOrDefault(options.fontStyle, globalDefaults.defaultFontStyle),\n        weight: null,\n        string: ''\n      };\n      font.string = toFontString(font);\n      return font;\n    },\n\n    /**\n     * Evaluates the given `inputs` sequentially and returns the first defined value.\n     * @param {Array} inputs - An array of values, falling back to the last value.\n     * @param {object} [context] - If defined and the current value is a function, the value\n     * is called with `context` as first argument and the result becomes the new input.\n     * @param {number} [index] - If defined and the current value is an array, the value\n     * at `index` become the new input.\n     * @since 2.7.0\n     */\n    resolve: function resolve(inputs, context, index) {\n      var i, ilen, value;\n\n      for (i = 0, ilen = inputs.length; i < ilen; ++i) {\n        value = inputs[i];\n\n        if (value === undefined) {\n          continue;\n        }\n\n        if (context !== undefined && typeof value === 'function') {\n          value = value(context);\n        }\n\n        if (index !== undefined && helpers_core.isArray(value)) {\n          value = value[index];\n        }\n\n        if (value !== undefined) {\n          return value;\n        }\n      }\n    }\n  };\n  var helpers$1 = helpers_core;\n  var easing = helpers_easing;\n  var canvas = helpers_canvas;\n  var options = helpers_options;\n  helpers$1.easing = easing;\n  helpers$1.canvas = canvas;\n  helpers$1.options = options;\n\n  function interpolate(start, view, model, ease) {\n    var keys = Object.keys(model);\n    var i, ilen, key, actual, origin, target, type, c0, c1;\n\n    for (i = 0, ilen = keys.length; i < ilen; ++i) {\n      key = keys[i];\n      target = model[key]; // if a value is added to the model after pivot() has been called, the view\n      // doesn't contain it, so let's initialize the view to the target value.\n\n      if (!view.hasOwnProperty(key)) {\n        view[key] = target;\n      }\n\n      actual = view[key];\n\n      if (actual === target || key[0] === '_') {\n        continue;\n      }\n\n      if (!start.hasOwnProperty(key)) {\n        start[key] = actual;\n      }\n\n      origin = start[key];\n      type = typeof target;\n\n      if (type === typeof origin) {\n        if (type === 'string') {\n          c0 = chartjsColor(origin);\n\n          if (c0.valid) {\n            c1 = chartjsColor(target);\n\n            if (c1.valid) {\n              view[key] = c1.mix(c0, ease).rgbString();\n              continue;\n            }\n          }\n        } else if (helpers$1.isFinite(origin) && helpers$1.isFinite(target)) {\n          view[key] = origin + (target - origin) * ease;\n          continue;\n        }\n      }\n\n      view[key] = target;\n    }\n  }\n\n  var Element = function Element(configuration) {\n    helpers$1.extend(this, configuration);\n    this.initialize.apply(this, arguments);\n  };\n\n  helpers$1.extend(Element.prototype, {\n    initialize: function initialize() {\n      this.hidden = false;\n    },\n    pivot: function pivot() {\n      var me = this;\n\n      if (!me._view) {\n        me._view = helpers$1.clone(me._model);\n      }\n\n      me._start = {};\n      return me;\n    },\n    transition: function transition(ease) {\n      var me = this;\n      var model = me._model;\n      var start = me._start;\n      var view = me._view; // No animation -> No Transition\n\n      if (!model || ease === 1) {\n        me._view = model;\n        me._start = null;\n        return me;\n      }\n\n      if (!view) {\n        view = me._view = {};\n      }\n\n      if (!start) {\n        start = me._start = {};\n      }\n\n      interpolate(start, view, model, ease);\n      return me;\n    },\n    tooltipPosition: function tooltipPosition() {\n      return {\n        x: this._model.x,\n        y: this._model.y\n      };\n    },\n    hasValue: function hasValue() {\n      return helpers$1.isNumber(this._model.x) && helpers$1.isNumber(this._model.y);\n    }\n  });\n  Element.extend = helpers$1.inherits;\n  var core_element = Element;\n  var exports$2 = core_element.extend({\n    chart: null,\n    // the animation associated chart instance\n    currentStep: 0,\n    // the current animation step\n    numSteps: 60,\n    // default number of steps\n    easing: '',\n    // the easing to use for this animation\n    render: null,\n    // render function used by the animation service\n    onAnimationProgress: null,\n    // user specified callback to fire on each step of the animation\n    onAnimationComplete: null // user specified callback to fire when the animation finishes\n\n  });\n  var core_animation = exports$2; // DEPRECATIONS\n\n  /**\n   * Provided for backward compatibility, use Chart.Animation instead\n   * @prop Chart.Animation#animationObject\n   * @deprecated since version 2.6.0\n   * @todo remove at version 3\n   */\n\n  Object.defineProperty(exports$2.prototype, 'animationObject', {\n    get: function get() {\n      return this;\n    }\n  });\n  /**\n   * Provided for backward compatibility, use Chart.Animation#chart instead\n   * @prop Chart.Animation#chartInstance\n   * @deprecated since version 2.6.0\n   * @todo remove at version 3\n   */\n\n  Object.defineProperty(exports$2.prototype, 'chartInstance', {\n    get: function get() {\n      return this.chart;\n    },\n    set: function set(value) {\n      this.chart = value;\n    }\n  });\n\n  core_defaults._set('global', {\n    animation: {\n      duration: 1000,\n      easing: 'easeOutQuart',\n      onProgress: helpers$1.noop,\n      onComplete: helpers$1.noop\n    }\n  });\n\n  var core_animations = {\n    animations: [],\n    request: null,\n\n    /**\n     * @param {Chart} chart - The chart to animate.\n     * @param {Chart.Animation} animation - The animation that we will animate.\n     * @param {number} duration - The animation duration in ms.\n     * @param {boolean} lazy - if true, the chart is not marked as animating to enable more responsive interactions\n     */\n    addAnimation: function addAnimation(chart, animation, duration, lazy) {\n      var animations = this.animations;\n      var i, ilen;\n      animation.chart = chart;\n      animation.startTime = Date.now();\n      animation.duration = duration;\n\n      if (!lazy) {\n        chart.animating = true;\n      }\n\n      for (i = 0, ilen = animations.length; i < ilen; ++i) {\n        if (animations[i].chart === chart) {\n          animations[i] = animation;\n          return;\n        }\n      }\n\n      animations.push(animation); // If there are no animations queued, manually kickstart a digest, for lack of a better word\n\n      if (animations.length === 1) {\n        this.requestAnimationFrame();\n      }\n    },\n    cancelAnimation: function cancelAnimation(chart) {\n      var index = helpers$1.findIndex(this.animations, function (animation) {\n        return animation.chart === chart;\n      });\n\n      if (index !== -1) {\n        this.animations.splice(index, 1);\n        chart.animating = false;\n      }\n    },\n    requestAnimationFrame: function requestAnimationFrame() {\n      var me = this;\n\n      if (me.request === null) {\n        // Skip animation frame requests until the active one is executed.\n        // This can happen when processing mouse events, e.g. 'mousemove'\n        // and 'mouseout' events will trigger multiple renders.\n        me.request = helpers$1.requestAnimFrame.call(window, function () {\n          me.request = null;\n          me.startDigest();\n        });\n      }\n    },\n\n    /**\n     * @private\n     */\n    startDigest: function startDigest() {\n      var me = this;\n      me.advance(); // Do we have more stuff to animate?\n\n      if (me.animations.length > 0) {\n        me.requestAnimationFrame();\n      }\n    },\n\n    /**\n     * @private\n     */\n    advance: function advance() {\n      var animations = this.animations;\n      var animation, chart, numSteps, nextStep;\n      var i = 0; // 1 animation per chart, so we are looping charts here\n\n      while (i < animations.length) {\n        animation = animations[i];\n        chart = animation.chart;\n        numSteps = animation.numSteps; // Make sure that currentStep starts at 1\n        // https://github.com/chartjs/Chart.js/issues/6104\n\n        nextStep = Math.floor((Date.now() - animation.startTime) / animation.duration * numSteps) + 1;\n        animation.currentStep = Math.min(nextStep, numSteps);\n        helpers$1.callback(animation.render, [chart, animation], chart);\n        helpers$1.callback(animation.onAnimationProgress, [animation], chart);\n\n        if (animation.currentStep >= numSteps) {\n          helpers$1.callback(animation.onAnimationComplete, [animation], chart);\n          chart.animating = false;\n          animations.splice(i, 1);\n        } else {\n          ++i;\n        }\n      }\n    }\n  };\n  var resolve = helpers$1.options.resolve;\n  var arrayEvents = ['push', 'pop', 'shift', 'splice', 'unshift'];\n  /**\n   * Hooks the array methods that add or remove values ('push', pop', 'shift', 'splice',\n   * 'unshift') and notify the listener AFTER the array has been altered. Listeners are\n   * called on the 'onData*' callbacks (e.g. onDataPush, etc.) with same arguments.\n   */\n\n  function listenArrayEvents(array, listener) {\n    if (array._chartjs) {\n      array._chartjs.listeners.push(listener);\n\n      return;\n    }\n\n    Object.defineProperty(array, '_chartjs', {\n      configurable: true,\n      enumerable: false,\n      value: {\n        listeners: [listener]\n      }\n    });\n    arrayEvents.forEach(function (key) {\n      var method = 'onData' + key.charAt(0).toUpperCase() + key.slice(1);\n      var base = array[key];\n      Object.defineProperty(array, key, {\n        configurable: true,\n        enumerable: false,\n        value: function value() {\n          var args = Array.prototype.slice.call(arguments);\n          var res = base.apply(this, args);\n          helpers$1.each(array._chartjs.listeners, function (object) {\n            if (typeof object[method] === 'function') {\n              object[method].apply(object, args);\n            }\n          });\n          return res;\n        }\n      });\n    });\n  }\n  /**\n   * Removes the given array event listener and cleanup extra attached properties (such as\n   * the _chartjs stub and overridden methods) if array doesn't have any more listeners.\n   */\n\n\n  function unlistenArrayEvents(array, listener) {\n    var stub = array._chartjs;\n\n    if (!stub) {\n      return;\n    }\n\n    var listeners = stub.listeners;\n    var index = listeners.indexOf(listener);\n\n    if (index !== -1) {\n      listeners.splice(index, 1);\n    }\n\n    if (listeners.length > 0) {\n      return;\n    }\n\n    arrayEvents.forEach(function (key) {\n      delete array[key];\n    });\n    delete array._chartjs;\n  } // Base class for all dataset controllers (line, bar, etc)\n\n\n  var DatasetController = function DatasetController(chart, datasetIndex) {\n    this.initialize(chart, datasetIndex);\n  };\n\n  helpers$1.extend(DatasetController.prototype, {\n    /**\n     * Element type used to generate a meta dataset (e.g. Chart.element.Line).\n     * @type {Chart.core.element}\n     */\n    datasetElementType: null,\n\n    /**\n     * Element type used to generate a meta data (e.g. Chart.element.Point).\n     * @type {Chart.core.element}\n     */\n    dataElementType: null,\n    initialize: function initialize(chart, datasetIndex) {\n      var me = this;\n      me.chart = chart;\n      me.index = datasetIndex;\n      me.linkScales();\n      me.addElements();\n    },\n    updateIndex: function updateIndex(datasetIndex) {\n      this.index = datasetIndex;\n    },\n    linkScales: function linkScales() {\n      var me = this;\n      var meta = me.getMeta();\n      var dataset = me.getDataset();\n\n      if (meta.xAxisID === null || !(meta.xAxisID in me.chart.scales)) {\n        meta.xAxisID = dataset.xAxisID || me.chart.options.scales.xAxes[0].id;\n      }\n\n      if (meta.yAxisID === null || !(meta.yAxisID in me.chart.scales)) {\n        meta.yAxisID = dataset.yAxisID || me.chart.options.scales.yAxes[0].id;\n      }\n    },\n    getDataset: function getDataset() {\n      return this.chart.data.datasets[this.index];\n    },\n    getMeta: function getMeta() {\n      return this.chart.getDatasetMeta(this.index);\n    },\n    getScaleForId: function getScaleForId(scaleID) {\n      return this.chart.scales[scaleID];\n    },\n\n    /**\n     * @private\n     */\n    _getValueScaleId: function _getValueScaleId() {\n      return this.getMeta().yAxisID;\n    },\n\n    /**\n     * @private\n     */\n    _getIndexScaleId: function _getIndexScaleId() {\n      return this.getMeta().xAxisID;\n    },\n\n    /**\n     * @private\n     */\n    _getValueScale: function _getValueScale() {\n      return this.getScaleForId(this._getValueScaleId());\n    },\n\n    /**\n     * @private\n     */\n    _getIndexScale: function _getIndexScale() {\n      return this.getScaleForId(this._getIndexScaleId());\n    },\n    reset: function reset() {\n      this.update(true);\n    },\n\n    /**\n     * @private\n     */\n    destroy: function destroy() {\n      if (this._data) {\n        unlistenArrayEvents(this._data, this);\n      }\n    },\n    createMetaDataset: function createMetaDataset() {\n      var me = this;\n      var type = me.datasetElementType;\n      return type && new type({\n        _chart: me.chart,\n        _datasetIndex: me.index\n      });\n    },\n    createMetaData: function createMetaData(index) {\n      var me = this;\n      var type = me.dataElementType;\n      return type && new type({\n        _chart: me.chart,\n        _datasetIndex: me.index,\n        _index: index\n      });\n    },\n    addElements: function addElements() {\n      var me = this;\n      var meta = me.getMeta();\n      var data = me.getDataset().data || [];\n      var metaData = meta.data;\n      var i, ilen;\n\n      for (i = 0, ilen = data.length; i < ilen; ++i) {\n        metaData[i] = metaData[i] || me.createMetaData(i);\n      }\n\n      meta.dataset = meta.dataset || me.createMetaDataset();\n    },\n    addElementAndReset: function addElementAndReset(index) {\n      var element = this.createMetaData(index);\n      this.getMeta().data.splice(index, 0, element);\n      this.updateElement(element, index, true);\n    },\n    buildOrUpdateElements: function buildOrUpdateElements() {\n      var me = this;\n      var dataset = me.getDataset();\n      var data = dataset.data || (dataset.data = []); // In order to correctly handle data addition/deletion animation (an thus simulate\n      // real-time charts), we need to monitor these data modifications and synchronize\n      // the internal meta data accordingly.\n\n      if (me._data !== data) {\n        if (me._data) {\n          // This case happens when the user replaced the data array instance.\n          unlistenArrayEvents(me._data, me);\n        }\n\n        if (data && Object.isExtensible(data)) {\n          listenArrayEvents(data, me);\n        }\n\n        me._data = data;\n      } // Re-sync meta data in case the user replaced the data array or if we missed\n      // any updates and so make sure that we handle number of datapoints changing.\n\n\n      me.resyncElements();\n    },\n    update: helpers$1.noop,\n    transition: function transition(easingValue) {\n      var meta = this.getMeta();\n      var elements = meta.data || [];\n      var ilen = elements.length;\n      var i = 0;\n\n      for (; i < ilen; ++i) {\n        elements[i].transition(easingValue);\n      }\n\n      if (meta.dataset) {\n        meta.dataset.transition(easingValue);\n      }\n    },\n    draw: function draw() {\n      var meta = this.getMeta();\n      var elements = meta.data || [];\n      var ilen = elements.length;\n      var i = 0;\n\n      if (meta.dataset) {\n        meta.dataset.draw();\n      }\n\n      for (; i < ilen; ++i) {\n        elements[i].draw();\n      }\n    },\n    removeHoverStyle: function removeHoverStyle(element) {\n      helpers$1.merge(element._model, element.$previousStyle || {});\n      delete element.$previousStyle;\n    },\n    setHoverStyle: function setHoverStyle(element) {\n      var dataset = this.chart.data.datasets[element._datasetIndex];\n      var index = element._index;\n      var custom = element.custom || {};\n      var model = element._model;\n      var getHoverColor = helpers$1.getHoverColor;\n      element.$previousStyle = {\n        backgroundColor: model.backgroundColor,\n        borderColor: model.borderColor,\n        borderWidth: model.borderWidth\n      };\n      model.backgroundColor = resolve([custom.hoverBackgroundColor, dataset.hoverBackgroundColor, getHoverColor(model.backgroundColor)], undefined, index);\n      model.borderColor = resolve([custom.hoverBorderColor, dataset.hoverBorderColor, getHoverColor(model.borderColor)], undefined, index);\n      model.borderWidth = resolve([custom.hoverBorderWidth, dataset.hoverBorderWidth, model.borderWidth], undefined, index);\n    },\n\n    /**\n     * @private\n     */\n    resyncElements: function resyncElements() {\n      var me = this;\n      var meta = me.getMeta();\n      var data = me.getDataset().data;\n      var numMeta = meta.data.length;\n      var numData = data.length;\n\n      if (numData < numMeta) {\n        meta.data.splice(numData, numMeta - numData);\n      } else if (numData > numMeta) {\n        me.insertElements(numMeta, numData - numMeta);\n      }\n    },\n\n    /**\n     * @private\n     */\n    insertElements: function insertElements(start, count) {\n      for (var i = 0; i < count; ++i) {\n        this.addElementAndReset(start + i);\n      }\n    },\n\n    /**\n     * @private\n     */\n    onDataPush: function onDataPush() {\n      var count = arguments.length;\n      this.insertElements(this.getDataset().data.length - count, count);\n    },\n\n    /**\n     * @private\n     */\n    onDataPop: function onDataPop() {\n      this.getMeta().data.pop();\n    },\n\n    /**\n     * @private\n     */\n    onDataShift: function onDataShift() {\n      this.getMeta().data.shift();\n    },\n\n    /**\n     * @private\n     */\n    onDataSplice: function onDataSplice(start, count) {\n      this.getMeta().data.splice(start, count);\n      this.insertElements(start, arguments.length - 2);\n    },\n\n    /**\n     * @private\n     */\n    onDataUnshift: function onDataUnshift() {\n      this.insertElements(0, arguments.length);\n    }\n  });\n  DatasetController.extend = helpers$1.inherits;\n  var core_datasetController = DatasetController;\n\n  core_defaults._set('global', {\n    elements: {\n      arc: {\n        backgroundColor: core_defaults.global.defaultColor,\n        borderColor: '#fff',\n        borderWidth: 2,\n        borderAlign: 'center'\n      }\n    }\n  });\n\n  var element_arc = core_element.extend({\n    inLabelRange: function inLabelRange(mouseX) {\n      var vm = this._view;\n\n      if (vm) {\n        return Math.pow(mouseX - vm.x, 2) < Math.pow(vm.radius + vm.hoverRadius, 2);\n      }\n\n      return false;\n    },\n    inRange: function inRange(chartX, chartY) {\n      var vm = this._view;\n\n      if (vm) {\n        var pointRelativePosition = helpers$1.getAngleFromPoint(vm, {\n          x: chartX,\n          y: chartY\n        });\n        var angle = pointRelativePosition.angle;\n        var distance = pointRelativePosition.distance; // Sanitise angle range\n\n        var startAngle = vm.startAngle;\n        var endAngle = vm.endAngle;\n\n        while (endAngle < startAngle) {\n          endAngle += 2.0 * Math.PI;\n        }\n\n        while (angle > endAngle) {\n          angle -= 2.0 * Math.PI;\n        }\n\n        while (angle < startAngle) {\n          angle += 2.0 * Math.PI;\n        } // Check if within the range of the open/close angle\n\n\n        var betweenAngles = angle >= startAngle && angle <= endAngle;\n        var withinRadius = distance >= vm.innerRadius && distance <= vm.outerRadius;\n        return betweenAngles && withinRadius;\n      }\n\n      return false;\n    },\n    getCenterPoint: function getCenterPoint() {\n      var vm = this._view;\n      var halfAngle = (vm.startAngle + vm.endAngle) / 2;\n      var halfRadius = (vm.innerRadius + vm.outerRadius) / 2;\n      return {\n        x: vm.x + Math.cos(halfAngle) * halfRadius,\n        y: vm.y + Math.sin(halfAngle) * halfRadius\n      };\n    },\n    getArea: function getArea() {\n      var vm = this._view;\n      return Math.PI * ((vm.endAngle - vm.startAngle) / (2 * Math.PI)) * (Math.pow(vm.outerRadius, 2) - Math.pow(vm.innerRadius, 2));\n    },\n    tooltipPosition: function tooltipPosition() {\n      var vm = this._view;\n      var centreAngle = vm.startAngle + (vm.endAngle - vm.startAngle) / 2;\n      var rangeFromCentre = (vm.outerRadius - vm.innerRadius) / 2 + vm.innerRadius;\n      return {\n        x: vm.x + Math.cos(centreAngle) * rangeFromCentre,\n        y: vm.y + Math.sin(centreAngle) * rangeFromCentre\n      };\n    },\n    draw: function draw() {\n      var ctx = this._chart.ctx;\n      var vm = this._view;\n      var sA = vm.startAngle;\n      var eA = vm.endAngle;\n      var pixelMargin = vm.borderAlign === 'inner' ? 0.33 : 0;\n      var angleMargin;\n      ctx.save();\n      ctx.beginPath();\n      ctx.arc(vm.x, vm.y, Math.max(vm.outerRadius - pixelMargin, 0), sA, eA);\n      ctx.arc(vm.x, vm.y, vm.innerRadius, eA, sA, true);\n      ctx.closePath();\n      ctx.fillStyle = vm.backgroundColor;\n      ctx.fill();\n\n      if (vm.borderWidth) {\n        if (vm.borderAlign === 'inner') {\n          // Draw an inner border by cliping the arc and drawing a double-width border\n          // Enlarge the clipping arc by 0.33 pixels to eliminate glitches between borders\n          ctx.beginPath();\n          angleMargin = pixelMargin / vm.outerRadius;\n          ctx.arc(vm.x, vm.y, vm.outerRadius, sA - angleMargin, eA + angleMargin);\n\n          if (vm.innerRadius > pixelMargin) {\n            angleMargin = pixelMargin / vm.innerRadius;\n            ctx.arc(vm.x, vm.y, vm.innerRadius - pixelMargin, eA + angleMargin, sA - angleMargin, true);\n          } else {\n            ctx.arc(vm.x, vm.y, pixelMargin, eA + Math.PI / 2, sA - Math.PI / 2);\n          }\n\n          ctx.closePath();\n          ctx.clip();\n          ctx.beginPath();\n          ctx.arc(vm.x, vm.y, vm.outerRadius, sA, eA);\n          ctx.arc(vm.x, vm.y, vm.innerRadius, eA, sA, true);\n          ctx.closePath();\n          ctx.lineWidth = vm.borderWidth * 2;\n          ctx.lineJoin = 'round';\n        } else {\n          ctx.lineWidth = vm.borderWidth;\n          ctx.lineJoin = 'bevel';\n        }\n\n        ctx.strokeStyle = vm.borderColor;\n        ctx.stroke();\n      }\n\n      ctx.restore();\n    }\n  });\n  var valueOrDefault$1 = helpers$1.valueOrDefault;\n  var defaultColor = core_defaults.global.defaultColor;\n\n  core_defaults._set('global', {\n    elements: {\n      line: {\n        tension: 0.4,\n        backgroundColor: defaultColor,\n        borderWidth: 3,\n        borderColor: defaultColor,\n        borderCapStyle: 'butt',\n        borderDash: [],\n        borderDashOffset: 0.0,\n        borderJoinStyle: 'miter',\n        capBezierPoints: true,\n        fill: true // do we fill in the area between the line and its base axis\n\n      }\n    }\n  });\n\n  var element_line = core_element.extend({\n    draw: function draw() {\n      var me = this;\n      var vm = me._view;\n      var ctx = me._chart.ctx;\n      var spanGaps = vm.spanGaps;\n\n      var points = me._children.slice(); // clone array\n\n\n      var globalDefaults = core_defaults.global;\n      var globalOptionLineElements = globalDefaults.elements.line;\n      var lastDrawnIndex = -1;\n      var index, current, previous, currentVM; // If we are looping, adding the first point again\n\n      if (me._loop && points.length) {\n        points.push(points[0]);\n      }\n\n      ctx.save(); // Stroke Line Options\n\n      ctx.lineCap = vm.borderCapStyle || globalOptionLineElements.borderCapStyle; // IE 9 and 10 do not support line dash\n\n      if (ctx.setLineDash) {\n        ctx.setLineDash(vm.borderDash || globalOptionLineElements.borderDash);\n      }\n\n      ctx.lineDashOffset = valueOrDefault$1(vm.borderDashOffset, globalOptionLineElements.borderDashOffset);\n      ctx.lineJoin = vm.borderJoinStyle || globalOptionLineElements.borderJoinStyle;\n      ctx.lineWidth = valueOrDefault$1(vm.borderWidth, globalOptionLineElements.borderWidth);\n      ctx.strokeStyle = vm.borderColor || globalDefaults.defaultColor; // Stroke Line\n\n      ctx.beginPath();\n      lastDrawnIndex = -1;\n\n      for (index = 0; index < points.length; ++index) {\n        current = points[index];\n        previous = helpers$1.previousItem(points, index);\n        currentVM = current._view; // First point moves to it's starting position no matter what\n\n        if (index === 0) {\n          if (!currentVM.skip) {\n            ctx.moveTo(currentVM.x, currentVM.y);\n            lastDrawnIndex = index;\n          }\n        } else {\n          previous = lastDrawnIndex === -1 ? previous : points[lastDrawnIndex];\n\n          if (!currentVM.skip) {\n            if (lastDrawnIndex !== index - 1 && !spanGaps || lastDrawnIndex === -1) {\n              // There was a gap and this is the first point after the gap\n              ctx.moveTo(currentVM.x, currentVM.y);\n            } else {\n              // Line to next point\n              helpers$1.canvas.lineTo(ctx, previous._view, current._view);\n            }\n\n            lastDrawnIndex = index;\n          }\n        }\n      }\n\n      ctx.stroke();\n      ctx.restore();\n    }\n  });\n  var valueOrDefault$2 = helpers$1.valueOrDefault;\n  var defaultColor$1 = core_defaults.global.defaultColor;\n\n  core_defaults._set('global', {\n    elements: {\n      point: {\n        radius: 3,\n        pointStyle: 'circle',\n        backgroundColor: defaultColor$1,\n        borderColor: defaultColor$1,\n        borderWidth: 1,\n        // Hover\n        hitRadius: 1,\n        hoverRadius: 4,\n        hoverBorderWidth: 1\n      }\n    }\n  });\n\n  function xRange(mouseX) {\n    var vm = this._view;\n    return vm ? Math.abs(mouseX - vm.x) < vm.radius + vm.hitRadius : false;\n  }\n\n  function yRange(mouseY) {\n    var vm = this._view;\n    return vm ? Math.abs(mouseY - vm.y) < vm.radius + vm.hitRadius : false;\n  }\n\n  var element_point = core_element.extend({\n    inRange: function inRange(mouseX, mouseY) {\n      var vm = this._view;\n      return vm ? Math.pow(mouseX - vm.x, 2) + Math.pow(mouseY - vm.y, 2) < Math.pow(vm.hitRadius + vm.radius, 2) : false;\n    },\n    inLabelRange: xRange,\n    inXRange: xRange,\n    inYRange: yRange,\n    getCenterPoint: function getCenterPoint() {\n      var vm = this._view;\n      return {\n        x: vm.x,\n        y: vm.y\n      };\n    },\n    getArea: function getArea() {\n      return Math.PI * Math.pow(this._view.radius, 2);\n    },\n    tooltipPosition: function tooltipPosition() {\n      var vm = this._view;\n      return {\n        x: vm.x,\n        y: vm.y,\n        padding: vm.radius + vm.borderWidth\n      };\n    },\n    draw: function draw(chartArea) {\n      var vm = this._view;\n      var ctx = this._chart.ctx;\n      var pointStyle = vm.pointStyle;\n      var rotation = vm.rotation;\n      var radius = vm.radius;\n      var x = vm.x;\n      var y = vm.y;\n      var globalDefaults = core_defaults.global;\n      var defaultColor = globalDefaults.defaultColor; // eslint-disable-line no-shadow\n\n      if (vm.skip) {\n        return;\n      } // Clipping for Points.\n\n\n      if (chartArea === undefined || helpers$1.canvas._isPointInArea(vm, chartArea)) {\n        ctx.strokeStyle = vm.borderColor || defaultColor;\n        ctx.lineWidth = valueOrDefault$2(vm.borderWidth, globalDefaults.elements.point.borderWidth);\n        ctx.fillStyle = vm.backgroundColor || defaultColor;\n        helpers$1.canvas.drawPoint(ctx, pointStyle, radius, x, y, rotation);\n      }\n    }\n  });\n  var defaultColor$2 = core_defaults.global.defaultColor;\n\n  core_defaults._set('global', {\n    elements: {\n      rectangle: {\n        backgroundColor: defaultColor$2,\n        borderColor: defaultColor$2,\n        borderSkipped: 'bottom',\n        borderWidth: 0\n      }\n    }\n  });\n\n  function isVertical(vm) {\n    return vm && vm.width !== undefined;\n  }\n  /**\n   * Helper function to get the bounds of the bar regardless of the orientation\n   * @param bar {Chart.Element.Rectangle} the bar\n   * @return {Bounds} bounds of the bar\n   * @private\n   */\n\n\n  function getBarBounds(vm) {\n    var x1, x2, y1, y2, half;\n\n    if (isVertical(vm)) {\n      half = vm.width / 2;\n      x1 = vm.x - half;\n      x2 = vm.x + half;\n      y1 = Math.min(vm.y, vm.base);\n      y2 = Math.max(vm.y, vm.base);\n    } else {\n      half = vm.height / 2;\n      x1 = Math.min(vm.x, vm.base);\n      x2 = Math.max(vm.x, vm.base);\n      y1 = vm.y - half;\n      y2 = vm.y + half;\n    }\n\n    return {\n      left: x1,\n      top: y1,\n      right: x2,\n      bottom: y2\n    };\n  }\n\n  function swap(orig, v1, v2) {\n    return orig === v1 ? v2 : orig === v2 ? v1 : orig;\n  }\n\n  function parseBorderSkipped(vm) {\n    var edge = vm.borderSkipped;\n    var res = {};\n\n    if (!edge) {\n      return res;\n    }\n\n    if (vm.horizontal) {\n      if (vm.base > vm.x) {\n        edge = swap(edge, 'left', 'right');\n      }\n    } else if (vm.base < vm.y) {\n      edge = swap(edge, 'bottom', 'top');\n    }\n\n    res[edge] = true;\n    return res;\n  }\n\n  function parseBorderWidth(vm, maxW, maxH) {\n    var value = vm.borderWidth;\n    var skip = parseBorderSkipped(vm);\n    var t, r, b, l;\n\n    if (helpers$1.isObject(value)) {\n      t = +value.top || 0;\n      r = +value.right || 0;\n      b = +value.bottom || 0;\n      l = +value.left || 0;\n    } else {\n      t = r = b = l = +value || 0;\n    }\n\n    return {\n      t: skip.top || t < 0 ? 0 : t > maxH ? maxH : t,\n      r: skip.right || r < 0 ? 0 : r > maxW ? maxW : r,\n      b: skip.bottom || b < 0 ? 0 : b > maxH ? maxH : b,\n      l: skip.left || l < 0 ? 0 : l > maxW ? maxW : l\n    };\n  }\n\n  function boundingRects(vm) {\n    var bounds = getBarBounds(vm);\n    var width = bounds.right - bounds.left;\n    var height = bounds.bottom - bounds.top;\n    var border = parseBorderWidth(vm, width / 2, height / 2);\n    return {\n      outer: {\n        x: bounds.left,\n        y: bounds.top,\n        w: width,\n        h: height\n      },\n      inner: {\n        x: bounds.left + border.l,\n        y: bounds.top + border.t,\n        w: width - border.l - border.r,\n        h: height - border.t - border.b\n      }\n    };\n  }\n\n  function _inRange(vm, x, y) {\n    var skipX = x === null;\n    var skipY = y === null;\n    var bounds = !vm || skipX && skipY ? false : getBarBounds(vm);\n    return bounds && (skipX || x >= bounds.left && x <= bounds.right) && (skipY || y >= bounds.top && y <= bounds.bottom);\n  }\n\n  var element_rectangle = core_element.extend({\n    draw: function draw() {\n      var ctx = this._chart.ctx;\n      var vm = this._view;\n      var rects = boundingRects(vm);\n      var outer = rects.outer;\n      var inner = rects.inner;\n      ctx.fillStyle = vm.backgroundColor;\n      ctx.fillRect(outer.x, outer.y, outer.w, outer.h);\n\n      if (outer.w === inner.w && outer.h === inner.h) {\n        return;\n      }\n\n      ctx.save();\n      ctx.beginPath();\n      ctx.rect(outer.x, outer.y, outer.w, outer.h);\n      ctx.clip();\n      ctx.fillStyle = vm.borderColor;\n      ctx.rect(inner.x, inner.y, inner.w, inner.h);\n      ctx.fill('evenodd');\n      ctx.restore();\n    },\n    height: function height() {\n      var vm = this._view;\n      return vm.base - vm.y;\n    },\n    inRange: function inRange(mouseX, mouseY) {\n      return _inRange(this._view, mouseX, mouseY);\n    },\n    inLabelRange: function inLabelRange(mouseX, mouseY) {\n      var vm = this._view;\n      return isVertical(vm) ? _inRange(vm, mouseX, null) : _inRange(vm, null, mouseY);\n    },\n    inXRange: function inXRange(mouseX) {\n      return _inRange(this._view, mouseX, null);\n    },\n    inYRange: function inYRange(mouseY) {\n      return _inRange(this._view, null, mouseY);\n    },\n    getCenterPoint: function getCenterPoint() {\n      var vm = this._view;\n      var x, y;\n\n      if (isVertical(vm)) {\n        x = vm.x;\n        y = (vm.y + vm.base) / 2;\n      } else {\n        x = (vm.x + vm.base) / 2;\n        y = vm.y;\n      }\n\n      return {\n        x: x,\n        y: y\n      };\n    },\n    getArea: function getArea() {\n      var vm = this._view;\n      return isVertical(vm) ? vm.width * Math.abs(vm.y - vm.base) : vm.height * Math.abs(vm.x - vm.base);\n    },\n    tooltipPosition: function tooltipPosition() {\n      var vm = this._view;\n      return {\n        x: vm.x,\n        y: vm.y\n      };\n    }\n  });\n  var elements = {};\n  var Arc = element_arc;\n  var Line = element_line;\n  var Point = element_point;\n  var Rectangle = element_rectangle;\n  elements.Arc = Arc;\n  elements.Line = Line;\n  elements.Point = Point;\n  elements.Rectangle = Rectangle;\n  var resolve$1 = helpers$1.options.resolve;\n\n  core_defaults._set('bar', {\n    hover: {\n      mode: 'label'\n    },\n    scales: {\n      xAxes: [{\n        type: 'category',\n        categoryPercentage: 0.8,\n        barPercentage: 0.9,\n        offset: true,\n        gridLines: {\n          offsetGridLines: true\n        }\n      }],\n      yAxes: [{\n        type: 'linear'\n      }]\n    }\n  });\n  /**\n   * Computes the \"optimal\" sample size to maintain bars equally sized while preventing overlap.\n   * @private\n   */\n\n\n  function computeMinSampleSize(scale, pixels) {\n    var min = scale.isHorizontal() ? scale.width : scale.height;\n    var ticks = scale.getTicks();\n    var prev, curr, i, ilen;\n\n    for (i = 1, ilen = pixels.length; i < ilen; ++i) {\n      min = Math.min(min, Math.abs(pixels[i] - pixels[i - 1]));\n    }\n\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      curr = scale.getPixelForTick(i);\n      min = i > 0 ? Math.min(min, curr - prev) : min;\n      prev = curr;\n    }\n\n    return min;\n  }\n  /**\n   * Computes an \"ideal\" category based on the absolute bar thickness or, if undefined or null,\n   * uses the smallest interval (see computeMinSampleSize) that prevents bar overlapping. This\n   * mode currently always generates bars equally sized (until we introduce scriptable options?).\n   * @private\n   */\n\n\n  function computeFitCategoryTraits(index, ruler, options) {\n    var thickness = options.barThickness;\n    var count = ruler.stackCount;\n    var curr = ruler.pixels[index];\n    var size, ratio;\n\n    if (helpers$1.isNullOrUndef(thickness)) {\n      size = ruler.min * options.categoryPercentage;\n      ratio = options.barPercentage;\n    } else {\n      // When bar thickness is enforced, category and bar percentages are ignored.\n      // Note(SB): we could add support for relative bar thickness (e.g. barThickness: '50%')\n      // and deprecate barPercentage since this value is ignored when thickness is absolute.\n      size = thickness * count;\n      ratio = 1;\n    }\n\n    return {\n      chunk: size / count,\n      ratio: ratio,\n      start: curr - size / 2\n    };\n  }\n  /**\n   * Computes an \"optimal\" category that globally arranges bars side by side (no gap when\n   * percentage options are 1), based on the previous and following categories. This mode\n   * generates bars with different widths when data are not evenly spaced.\n   * @private\n   */\n\n\n  function computeFlexCategoryTraits(index, ruler, options) {\n    var pixels = ruler.pixels;\n    var curr = pixels[index];\n    var prev = index > 0 ? pixels[index - 1] : null;\n    var next = index < pixels.length - 1 ? pixels[index + 1] : null;\n    var percent = options.categoryPercentage;\n    var start, size;\n\n    if (prev === null) {\n      // first data: its size is double based on the next point or,\n      // if it's also the last data, we use the scale size.\n      prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n    }\n\n    if (next === null) {\n      // last data: its size is also double based on the previous point.\n      next = curr + curr - prev;\n    }\n\n    start = curr - (curr - Math.min(prev, next)) / 2 * percent;\n    size = Math.abs(next - prev) / 2 * percent;\n    return {\n      chunk: size / ruler.stackCount,\n      ratio: options.barPercentage,\n      start: start\n    };\n  }\n\n  var controller_bar = core_datasetController.extend({\n    dataElementType: elements.Rectangle,\n    initialize: function initialize() {\n      var me = this;\n      var meta;\n      core_datasetController.prototype.initialize.apply(me, arguments);\n      meta = me.getMeta();\n      meta.stack = me.getDataset().stack;\n      meta.bar = true;\n    },\n    update: function update(reset) {\n      var me = this;\n      var rects = me.getMeta().data;\n      var i, ilen;\n      me._ruler = me.getRuler();\n\n      for (i = 0, ilen = rects.length; i < ilen; ++i) {\n        me.updateElement(rects[i], i, reset);\n      }\n    },\n    updateElement: function updateElement(rectangle, index, reset) {\n      var me = this;\n      var meta = me.getMeta();\n      var dataset = me.getDataset();\n\n      var options = me._resolveElementOptions(rectangle, index);\n\n      rectangle._xScale = me.getScaleForId(meta.xAxisID);\n      rectangle._yScale = me.getScaleForId(meta.yAxisID);\n      rectangle._datasetIndex = me.index;\n      rectangle._index = index;\n      rectangle._model = {\n        backgroundColor: options.backgroundColor,\n        borderColor: options.borderColor,\n        borderSkipped: options.borderSkipped,\n        borderWidth: options.borderWidth,\n        datasetLabel: dataset.label,\n        label: me.chart.data.labels[index]\n      };\n\n      me._updateElementGeometry(rectangle, index, reset);\n\n      rectangle.pivot();\n    },\n\n    /**\n     * @private\n     */\n    _updateElementGeometry: function _updateElementGeometry(rectangle, index, reset) {\n      var me = this;\n      var model = rectangle._model;\n\n      var vscale = me._getValueScale();\n\n      var base = vscale.getBasePixel();\n      var horizontal = vscale.isHorizontal();\n      var ruler = me._ruler || me.getRuler();\n      var vpixels = me.calculateBarValuePixels(me.index, index);\n      var ipixels = me.calculateBarIndexPixels(me.index, index, ruler);\n      model.horizontal = horizontal;\n      model.base = reset ? base : vpixels.base;\n      model.x = horizontal ? reset ? base : vpixels.head : ipixels.center;\n      model.y = horizontal ? ipixels.center : reset ? base : vpixels.head;\n      model.height = horizontal ? ipixels.size : undefined;\n      model.width = horizontal ? undefined : ipixels.size;\n    },\n\n    /**\n     * Returns the stacks based on groups and bar visibility.\n     * @param {number} [last] - The dataset index\n     * @returns {string[]} The list of stack IDs\n     * @private\n     */\n    _getStacks: function _getStacks(last) {\n      var me = this;\n      var chart = me.chart;\n\n      var scale = me._getIndexScale();\n\n      var stacked = scale.options.stacked;\n      var ilen = last === undefined ? chart.data.datasets.length : last + 1;\n      var stacks = [];\n      var i, meta;\n\n      for (i = 0; i < ilen; ++i) {\n        meta = chart.getDatasetMeta(i);\n\n        if (meta.bar && chart.isDatasetVisible(i) && (stacked === false || stacked === true && stacks.indexOf(meta.stack) === -1 || stacked === undefined && (meta.stack === undefined || stacks.indexOf(meta.stack) === -1))) {\n          stacks.push(meta.stack);\n        }\n      }\n\n      return stacks;\n    },\n\n    /**\n     * Returns the effective number of stacks based on groups and bar visibility.\n     * @private\n     */\n    getStackCount: function getStackCount() {\n      return this._getStacks().length;\n    },\n\n    /**\n     * Returns the stack index for the given dataset based on groups and bar visibility.\n     * @param {number} [datasetIndex] - The dataset index\n     * @param {string} [name] - The stack name to find\n     * @returns {number} The stack index\n     * @private\n     */\n    getStackIndex: function getStackIndex(datasetIndex, name) {\n      var stacks = this._getStacks(datasetIndex);\n\n      var index = name !== undefined ? stacks.indexOf(name) : -1; // indexOf returns -1 if element is not present\n\n      return index === -1 ? stacks.length - 1 : index;\n    },\n\n    /**\n     * @private\n     */\n    getRuler: function getRuler() {\n      var me = this;\n\n      var scale = me._getIndexScale();\n\n      var stackCount = me.getStackCount();\n      var datasetIndex = me.index;\n      var isHorizontal = scale.isHorizontal();\n      var start = isHorizontal ? scale.left : scale.top;\n      var end = start + (isHorizontal ? scale.width : scale.height);\n      var pixels = [];\n      var i, ilen, min;\n\n      for (i = 0, ilen = me.getMeta().data.length; i < ilen; ++i) {\n        pixels.push(scale.getPixelForValue(null, i, datasetIndex));\n      }\n\n      min = helpers$1.isNullOrUndef(scale.options.barThickness) ? computeMinSampleSize(scale, pixels) : -1;\n      return {\n        min: min,\n        pixels: pixels,\n        start: start,\n        end: end,\n        stackCount: stackCount,\n        scale: scale\n      };\n    },\n\n    /**\n     * Note: pixel values are not clamped to the scale area.\n     * @private\n     */\n    calculateBarValuePixels: function calculateBarValuePixels(datasetIndex, index) {\n      var me = this;\n      var chart = me.chart;\n      var meta = me.getMeta();\n\n      var scale = me._getValueScale();\n\n      var isHorizontal = scale.isHorizontal();\n      var datasets = chart.data.datasets;\n      var value = +scale.getRightValue(datasets[datasetIndex].data[index]);\n      var minBarLength = scale.options.minBarLength;\n      var stacked = scale.options.stacked;\n      var stack = meta.stack;\n      var start = 0;\n      var i, imeta, ivalue, base, head, size;\n\n      if (stacked || stacked === undefined && stack !== undefined) {\n        for (i = 0; i < datasetIndex; ++i) {\n          imeta = chart.getDatasetMeta(i);\n\n          if (imeta.bar && imeta.stack === stack && imeta.controller._getValueScaleId() === scale.id && chart.isDatasetVisible(i)) {\n            ivalue = +scale.getRightValue(datasets[i].data[index]);\n\n            if (value < 0 && ivalue < 0 || value >= 0 && ivalue > 0) {\n              start += ivalue;\n            }\n          }\n        }\n      }\n\n      base = scale.getPixelForValue(start);\n      head = scale.getPixelForValue(start + value);\n      size = head - base;\n\n      if (minBarLength !== undefined && Math.abs(size) < minBarLength) {\n        size = minBarLength;\n\n        if (value >= 0 && !isHorizontal || value < 0 && isHorizontal) {\n          head = base - minBarLength;\n        } else {\n          head = base + minBarLength;\n        }\n      }\n\n      return {\n        size: size,\n        base: base,\n        head: head,\n        center: head + size / 2\n      };\n    },\n\n    /**\n     * @private\n     */\n    calculateBarIndexPixels: function calculateBarIndexPixels(datasetIndex, index, ruler) {\n      var me = this;\n      var options = ruler.scale.options;\n      var range = options.barThickness === 'flex' ? computeFlexCategoryTraits(index, ruler, options) : computeFitCategoryTraits(index, ruler, options);\n      var stackIndex = me.getStackIndex(datasetIndex, me.getMeta().stack);\n      var center = range.start + range.chunk * stackIndex + range.chunk / 2;\n      var size = Math.min(helpers$1.valueOrDefault(options.maxBarThickness, Infinity), range.chunk * range.ratio);\n      return {\n        base: center - size / 2,\n        head: center + size / 2,\n        center: center,\n        size: size\n      };\n    },\n    draw: function draw() {\n      var me = this;\n      var chart = me.chart;\n\n      var scale = me._getValueScale();\n\n      var rects = me.getMeta().data;\n      var dataset = me.getDataset();\n      var ilen = rects.length;\n      var i = 0;\n      helpers$1.canvas.clipArea(chart.ctx, chart.chartArea);\n\n      for (; i < ilen; ++i) {\n        if (!isNaN(scale.getRightValue(dataset.data[i]))) {\n          rects[i].draw();\n        }\n      }\n\n      helpers$1.canvas.unclipArea(chart.ctx);\n    },\n\n    /**\n     * @private\n     */\n    _resolveElementOptions: function _resolveElementOptions(rectangle, index) {\n      var me = this;\n      var chart = me.chart;\n      var datasets = chart.data.datasets;\n      var dataset = datasets[me.index];\n      var custom = rectangle.custom || {};\n      var options = chart.options.elements.rectangle;\n      var values = {};\n      var i, ilen, key; // Scriptable options\n\n      var context = {\n        chart: chart,\n        dataIndex: index,\n        dataset: dataset,\n        datasetIndex: me.index\n      };\n      var keys = ['backgroundColor', 'borderColor', 'borderSkipped', 'borderWidth'];\n\n      for (i = 0, ilen = keys.length; i < ilen; ++i) {\n        key = keys[i];\n        values[key] = resolve$1([custom[key], dataset[key], options[key]], context, index);\n      }\n\n      return values;\n    }\n  });\n  var valueOrDefault$3 = helpers$1.valueOrDefault;\n  var resolve$2 = helpers$1.options.resolve;\n\n  core_defaults._set('bubble', {\n    hover: {\n      mode: 'single'\n    },\n    scales: {\n      xAxes: [{\n        type: 'linear',\n        // bubble should probably use a linear scale by default\n        position: 'bottom',\n        id: 'x-axis-0' // need an ID so datasets can reference the scale\n\n      }],\n      yAxes: [{\n        type: 'linear',\n        position: 'left',\n        id: 'y-axis-0'\n      }]\n    },\n    tooltips: {\n      callbacks: {\n        title: function title() {\n          // Title doesn't make sense for scatter since we format the data as a point\n          return '';\n        },\n        label: function label(item, data) {\n          var datasetLabel = data.datasets[item.datasetIndex].label || '';\n          var dataPoint = data.datasets[item.datasetIndex].data[item.index];\n          return datasetLabel + ': (' + item.xLabel + ', ' + item.yLabel + ', ' + dataPoint.r + ')';\n        }\n      }\n    }\n  });\n\n  var controller_bubble = core_datasetController.extend({\n    /**\n     * @protected\n     */\n    dataElementType: elements.Point,\n\n    /**\n     * @protected\n     */\n    update: function update(reset) {\n      var me = this;\n      var meta = me.getMeta();\n      var points = meta.data; // Update Points\n\n      helpers$1.each(points, function (point, index) {\n        me.updateElement(point, index, reset);\n      });\n    },\n\n    /**\n     * @protected\n     */\n    updateElement: function updateElement(point, index, reset) {\n      var me = this;\n      var meta = me.getMeta();\n      var custom = point.custom || {};\n      var xScale = me.getScaleForId(meta.xAxisID);\n      var yScale = me.getScaleForId(meta.yAxisID);\n\n      var options = me._resolveElementOptions(point, index);\n\n      var data = me.getDataset().data[index];\n      var dsIndex = me.index;\n      var x = reset ? xScale.getPixelForDecimal(0.5) : xScale.getPixelForValue(typeof data === 'object' ? data : NaN, index, dsIndex);\n      var y = reset ? yScale.getBasePixel() : yScale.getPixelForValue(data, index, dsIndex);\n      point._xScale = xScale;\n      point._yScale = yScale;\n      point._options = options;\n      point._datasetIndex = dsIndex;\n      point._index = index;\n      point._model = {\n        backgroundColor: options.backgroundColor,\n        borderColor: options.borderColor,\n        borderWidth: options.borderWidth,\n        hitRadius: options.hitRadius,\n        pointStyle: options.pointStyle,\n        rotation: options.rotation,\n        radius: reset ? 0 : options.radius,\n        skip: custom.skip || isNaN(x) || isNaN(y),\n        x: x,\n        y: y\n      };\n      point.pivot();\n    },\n\n    /**\n     * @protected\n     */\n    setHoverStyle: function setHoverStyle(point) {\n      var model = point._model;\n      var options = point._options;\n      var getHoverColor = helpers$1.getHoverColor;\n      point.$previousStyle = {\n        backgroundColor: model.backgroundColor,\n        borderColor: model.borderColor,\n        borderWidth: model.borderWidth,\n        radius: model.radius\n      };\n      model.backgroundColor = valueOrDefault$3(options.hoverBackgroundColor, getHoverColor(options.backgroundColor));\n      model.borderColor = valueOrDefault$3(options.hoverBorderColor, getHoverColor(options.borderColor));\n      model.borderWidth = valueOrDefault$3(options.hoverBorderWidth, options.borderWidth);\n      model.radius = options.radius + options.hoverRadius;\n    },\n\n    /**\n     * @private\n     */\n    _resolveElementOptions: function _resolveElementOptions(point, index) {\n      var me = this;\n      var chart = me.chart;\n      var datasets = chart.data.datasets;\n      var dataset = datasets[me.index];\n      var custom = point.custom || {};\n      var options = chart.options.elements.point;\n      var data = dataset.data[index];\n      var values = {};\n      var i, ilen, key; // Scriptable options\n\n      var context = {\n        chart: chart,\n        dataIndex: index,\n        dataset: dataset,\n        datasetIndex: me.index\n      };\n      var keys = ['backgroundColor', 'borderColor', 'borderWidth', 'hoverBackgroundColor', 'hoverBorderColor', 'hoverBorderWidth', 'hoverRadius', 'hitRadius', 'pointStyle', 'rotation'];\n\n      for (i = 0, ilen = keys.length; i < ilen; ++i) {\n        key = keys[i];\n        values[key] = resolve$2([custom[key], dataset[key], options[key]], context, index);\n      } // Custom radius resolution\n\n\n      values.radius = resolve$2([custom.radius, data ? data.r : undefined, dataset.radius, options.radius], context, index);\n      return values;\n    }\n  });\n  var resolve$3 = helpers$1.options.resolve;\n  var valueOrDefault$4 = helpers$1.valueOrDefault;\n\n  core_defaults._set('doughnut', {\n    animation: {\n      // Boolean - Whether we animate the rotation of the Doughnut\n      animateRotate: true,\n      // Boolean - Whether we animate scaling the Doughnut from the centre\n      animateScale: false\n    },\n    hover: {\n      mode: 'single'\n    },\n    legendCallback: function legendCallback(chart) {\n      var text = [];\n      text.push('<ul class=\"' + chart.id + '-legend\">');\n      var data = chart.data;\n      var datasets = data.datasets;\n      var labels = data.labels;\n\n      if (datasets.length) {\n        for (var i = 0; i < datasets[0].data.length; ++i) {\n          text.push('<li><span style=\"background-color:' + datasets[0].backgroundColor[i] + '\"></span>');\n\n          if (labels[i]) {\n            text.push(labels[i]);\n          }\n\n          text.push('</li>');\n        }\n      }\n\n      text.push('</ul>');\n      return text.join('');\n    },\n    legend: {\n      labels: {\n        generateLabels: function generateLabels(chart) {\n          var data = chart.data;\n\n          if (data.labels.length && data.datasets.length) {\n            return data.labels.map(function (label, i) {\n              var meta = chart.getDatasetMeta(0);\n              var ds = data.datasets[0];\n              var arc = meta.data[i];\n              var custom = arc && arc.custom || {};\n              var arcOpts = chart.options.elements.arc;\n              var fill = resolve$3([custom.backgroundColor, ds.backgroundColor, arcOpts.backgroundColor], undefined, i);\n              var stroke = resolve$3([custom.borderColor, ds.borderColor, arcOpts.borderColor], undefined, i);\n              var bw = resolve$3([custom.borderWidth, ds.borderWidth, arcOpts.borderWidth], undefined, i);\n              return {\n                text: label,\n                fillStyle: fill,\n                strokeStyle: stroke,\n                lineWidth: bw,\n                hidden: isNaN(ds.data[i]) || meta.data[i].hidden,\n                // Extra data used for toggling the correct item\n                index: i\n              };\n            });\n          }\n\n          return [];\n        }\n      },\n      onClick: function onClick(e, legendItem) {\n        var index = legendItem.index;\n        var chart = this.chart;\n        var i, ilen, meta;\n\n        for (i = 0, ilen = (chart.data.datasets || []).length; i < ilen; ++i) {\n          meta = chart.getDatasetMeta(i); // toggle visibility of index if exists\n\n          if (meta.data[index]) {\n            meta.data[index].hidden = !meta.data[index].hidden;\n          }\n        }\n\n        chart.update();\n      }\n    },\n    // The percentage of the chart that we cut out of the middle.\n    cutoutPercentage: 50,\n    // The rotation of the chart, where the first data arc begins.\n    rotation: Math.PI * -0.5,\n    // The total circumference of the chart.\n    circumference: Math.PI * 2.0,\n    // Need to override these to give a nice default\n    tooltips: {\n      callbacks: {\n        title: function title() {\n          return '';\n        },\n        label: function label(tooltipItem, data) {\n          var dataLabel = data.labels[tooltipItem.index];\n          var value = ': ' + data.datasets[tooltipItem.datasetIndex].data[tooltipItem.index];\n\n          if (helpers$1.isArray(dataLabel)) {\n            // show value on first line of multiline label\n            // need to clone because we are changing the value\n            dataLabel = dataLabel.slice();\n            dataLabel[0] += value;\n          } else {\n            dataLabel += value;\n          }\n\n          return dataLabel;\n        }\n      }\n    }\n  });\n\n  var controller_doughnut = core_datasetController.extend({\n    dataElementType: elements.Arc,\n    linkScales: helpers$1.noop,\n    // Get index of the dataset in relation to the visible datasets. This allows determining the inner and outer radius correctly\n    getRingIndex: function getRingIndex(datasetIndex) {\n      var ringIndex = 0;\n\n      for (var j = 0; j < datasetIndex; ++j) {\n        if (this.chart.isDatasetVisible(j)) {\n          ++ringIndex;\n        }\n      }\n\n      return ringIndex;\n    },\n    update: function update(reset) {\n      var me = this;\n      var chart = me.chart;\n      var chartArea = chart.chartArea;\n      var opts = chart.options;\n      var availableWidth = chartArea.right - chartArea.left;\n      var availableHeight = chartArea.bottom - chartArea.top;\n      var minSize = Math.min(availableWidth, availableHeight);\n      var offset = {\n        x: 0,\n        y: 0\n      };\n      var meta = me.getMeta();\n      var arcs = meta.data;\n      var cutoutPercentage = opts.cutoutPercentage;\n      var circumference = opts.circumference;\n\n      var chartWeight = me._getRingWeight(me.index);\n\n      var i, ilen; // If the chart's circumference isn't a full circle, calculate minSize as a ratio of the width/height of the arc\n\n      if (circumference < Math.PI * 2.0) {\n        var startAngle = opts.rotation % (Math.PI * 2.0);\n        startAngle += Math.PI * 2.0 * (startAngle >= Math.PI ? -1 : startAngle < -Math.PI ? 1 : 0);\n        var endAngle = startAngle + circumference;\n        var start = {\n          x: Math.cos(startAngle),\n          y: Math.sin(startAngle)\n        };\n        var end = {\n          x: Math.cos(endAngle),\n          y: Math.sin(endAngle)\n        };\n        var contains0 = startAngle <= 0 && endAngle >= 0 || startAngle <= Math.PI * 2.0 && Math.PI * 2.0 <= endAngle;\n        var contains90 = startAngle <= Math.PI * 0.5 && Math.PI * 0.5 <= endAngle || startAngle <= Math.PI * 2.5 && Math.PI * 2.5 <= endAngle;\n        var contains180 = startAngle <= -Math.PI && -Math.PI <= endAngle || startAngle <= Math.PI && Math.PI <= endAngle;\n        var contains270 = startAngle <= -Math.PI * 0.5 && -Math.PI * 0.5 <= endAngle || startAngle <= Math.PI * 1.5 && Math.PI * 1.5 <= endAngle;\n        var cutout = cutoutPercentage / 100.0;\n        var min = {\n          x: contains180 ? -1 : Math.min(start.x * (start.x < 0 ? 1 : cutout), end.x * (end.x < 0 ? 1 : cutout)),\n          y: contains270 ? -1 : Math.min(start.y * (start.y < 0 ? 1 : cutout), end.y * (end.y < 0 ? 1 : cutout))\n        };\n        var max = {\n          x: contains0 ? 1 : Math.max(start.x * (start.x > 0 ? 1 : cutout), end.x * (end.x > 0 ? 1 : cutout)),\n          y: contains90 ? 1 : Math.max(start.y * (start.y > 0 ? 1 : cutout), end.y * (end.y > 0 ? 1 : cutout))\n        };\n        var size = {\n          width: (max.x - min.x) * 0.5,\n          height: (max.y - min.y) * 0.5\n        };\n        minSize = Math.min(availableWidth / size.width, availableHeight / size.height);\n        offset = {\n          x: (max.x + min.x) * -0.5,\n          y: (max.y + min.y) * -0.5\n        };\n      }\n\n      for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n        arcs[i]._options = me._resolveElementOptions(arcs[i], i);\n      }\n\n      chart.borderWidth = me.getMaxBorderWidth();\n      chart.outerRadius = Math.max((minSize - chart.borderWidth) / 2, 0);\n      chart.innerRadius = Math.max(cutoutPercentage ? chart.outerRadius / 100 * cutoutPercentage : 0, 0);\n      chart.radiusLength = (chart.outerRadius - chart.innerRadius) / (me._getVisibleDatasetWeightTotal() || 1);\n      chart.offsetX = offset.x * chart.outerRadius;\n      chart.offsetY = offset.y * chart.outerRadius;\n      meta.total = me.calculateTotal();\n      me.outerRadius = chart.outerRadius - chart.radiusLength * me._getRingWeightOffset(me.index);\n      me.innerRadius = Math.max(me.outerRadius - chart.radiusLength * chartWeight, 0);\n\n      for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n        me.updateElement(arcs[i], i, reset);\n      }\n    },\n    updateElement: function updateElement(arc, index, reset) {\n      var me = this;\n      var chart = me.chart;\n      var chartArea = chart.chartArea;\n      var opts = chart.options;\n      var animationOpts = opts.animation;\n      var centerX = (chartArea.left + chartArea.right) / 2;\n      var centerY = (chartArea.top + chartArea.bottom) / 2;\n      var startAngle = opts.rotation; // non reset case handled later\n\n      var endAngle = opts.rotation; // non reset case handled later\n\n      var dataset = me.getDataset();\n      var circumference = reset && animationOpts.animateRotate ? 0 : arc.hidden ? 0 : me.calculateCircumference(dataset.data[index]) * (opts.circumference / (2.0 * Math.PI));\n      var innerRadius = reset && animationOpts.animateScale ? 0 : me.innerRadius;\n      var outerRadius = reset && animationOpts.animateScale ? 0 : me.outerRadius;\n      var options = arc._options || {};\n      helpers$1.extend(arc, {\n        // Utility\n        _datasetIndex: me.index,\n        _index: index,\n        // Desired view properties\n        _model: {\n          backgroundColor: options.backgroundColor,\n          borderColor: options.borderColor,\n          borderWidth: options.borderWidth,\n          borderAlign: options.borderAlign,\n          x: centerX + chart.offsetX,\n          y: centerY + chart.offsetY,\n          startAngle: startAngle,\n          endAngle: endAngle,\n          circumference: circumference,\n          outerRadius: outerRadius,\n          innerRadius: innerRadius,\n          label: helpers$1.valueAtIndexOrDefault(dataset.label, index, chart.data.labels[index])\n        }\n      });\n      var model = arc._model; // Set correct angles if not resetting\n\n      if (!reset || !animationOpts.animateRotate) {\n        if (index === 0) {\n          model.startAngle = opts.rotation;\n        } else {\n          model.startAngle = me.getMeta().data[index - 1]._model.endAngle;\n        }\n\n        model.endAngle = model.startAngle + model.circumference;\n      }\n\n      arc.pivot();\n    },\n    calculateTotal: function calculateTotal() {\n      var dataset = this.getDataset();\n      var meta = this.getMeta();\n      var total = 0;\n      var value;\n      helpers$1.each(meta.data, function (element, index) {\n        value = dataset.data[index];\n\n        if (!isNaN(value) && !element.hidden) {\n          total += Math.abs(value);\n        }\n      });\n      /* if (total === 0) {\n      \ttotal = NaN;\n      }*/\n\n      return total;\n    },\n    calculateCircumference: function calculateCircumference(value) {\n      var total = this.getMeta().total;\n\n      if (total > 0 && !isNaN(value)) {\n        return Math.PI * 2.0 * (Math.abs(value) / total);\n      }\n\n      return 0;\n    },\n    // gets the max border or hover width to properly scale pie charts\n    getMaxBorderWidth: function getMaxBorderWidth(arcs) {\n      var me = this;\n      var max = 0;\n      var chart = me.chart;\n      var i, ilen, meta, arc, controller, options, borderWidth, hoverWidth;\n\n      if (!arcs) {\n        // Find the outmost visible dataset\n        for (i = 0, ilen = chart.data.datasets.length; i < ilen; ++i) {\n          if (chart.isDatasetVisible(i)) {\n            meta = chart.getDatasetMeta(i);\n            arcs = meta.data;\n\n            if (i !== me.index) {\n              controller = meta.controller;\n            }\n\n            break;\n          }\n        }\n      }\n\n      if (!arcs) {\n        return 0;\n      }\n\n      for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n        arc = arcs[i];\n        options = controller ? controller._resolveElementOptions(arc, i) : arc._options;\n\n        if (options.borderAlign !== 'inner') {\n          borderWidth = options.borderWidth;\n          hoverWidth = options.hoverBorderWidth;\n          max = borderWidth > max ? borderWidth : max;\n          max = hoverWidth > max ? hoverWidth : max;\n        }\n      }\n\n      return max;\n    },\n\n    /**\n     * @protected\n     */\n    setHoverStyle: function setHoverStyle(arc) {\n      var model = arc._model;\n      var options = arc._options;\n      var getHoverColor = helpers$1.getHoverColor;\n      arc.$previousStyle = {\n        backgroundColor: model.backgroundColor,\n        borderColor: model.borderColor,\n        borderWidth: model.borderWidth\n      };\n      model.backgroundColor = valueOrDefault$4(options.hoverBackgroundColor, getHoverColor(options.backgroundColor));\n      model.borderColor = valueOrDefault$4(options.hoverBorderColor, getHoverColor(options.borderColor));\n      model.borderWidth = valueOrDefault$4(options.hoverBorderWidth, options.borderWidth);\n    },\n\n    /**\n     * @private\n     */\n    _resolveElementOptions: function _resolveElementOptions(arc, index) {\n      var me = this;\n      var chart = me.chart;\n      var dataset = me.getDataset();\n      var custom = arc.custom || {};\n      var options = chart.options.elements.arc;\n      var values = {};\n      var i, ilen, key; // Scriptable options\n\n      var context = {\n        chart: chart,\n        dataIndex: index,\n        dataset: dataset,\n        datasetIndex: me.index\n      };\n      var keys = ['backgroundColor', 'borderColor', 'borderWidth', 'borderAlign', 'hoverBackgroundColor', 'hoverBorderColor', 'hoverBorderWidth'];\n\n      for (i = 0, ilen = keys.length; i < ilen; ++i) {\n        key = keys[i];\n        values[key] = resolve$3([custom[key], dataset[key], options[key]], context, index);\n      }\n\n      return values;\n    },\n\n    /**\n     * Get radius length offset of the dataset in relation to the visible datasets weights. This allows determining the inner and outer radius correctly\n     * @private\n     */\n    _getRingWeightOffset: function _getRingWeightOffset(datasetIndex) {\n      var ringWeightOffset = 0;\n\n      for (var i = 0; i < datasetIndex; ++i) {\n        if (this.chart.isDatasetVisible(i)) {\n          ringWeightOffset += this._getRingWeight(i);\n        }\n      }\n\n      return ringWeightOffset;\n    },\n\n    /**\n     * @private\n     */\n    _getRingWeight: function _getRingWeight(dataSetIndex) {\n      return Math.max(valueOrDefault$4(this.chart.data.datasets[dataSetIndex].weight, 1), 0);\n    },\n\n    /**\n     * Returns the sum of all visibile data set weights.  This value can be 0.\n     * @private\n     */\n    _getVisibleDatasetWeightTotal: function _getVisibleDatasetWeightTotal() {\n      return this._getRingWeightOffset(this.chart.data.datasets.length);\n    }\n  });\n\n  core_defaults._set('horizontalBar', {\n    hover: {\n      mode: 'index',\n      axis: 'y'\n    },\n    scales: {\n      xAxes: [{\n        type: 'linear',\n        position: 'bottom'\n      }],\n      yAxes: [{\n        type: 'category',\n        position: 'left',\n        categoryPercentage: 0.8,\n        barPercentage: 0.9,\n        offset: true,\n        gridLines: {\n          offsetGridLines: true\n        }\n      }]\n    },\n    elements: {\n      rectangle: {\n        borderSkipped: 'left'\n      }\n    },\n    tooltips: {\n      mode: 'index',\n      axis: 'y'\n    }\n  });\n\n  var controller_horizontalBar = controller_bar.extend({\n    /**\n     * @private\n     */\n    _getValueScaleId: function _getValueScaleId() {\n      return this.getMeta().xAxisID;\n    },\n\n    /**\n     * @private\n     */\n    _getIndexScaleId: function _getIndexScaleId() {\n      return this.getMeta().yAxisID;\n    }\n  });\n  var valueOrDefault$5 = helpers$1.valueOrDefault;\n  var resolve$4 = helpers$1.options.resolve;\n  var isPointInArea = helpers$1.canvas._isPointInArea;\n\n  core_defaults._set('line', {\n    showLines: true,\n    spanGaps: false,\n    hover: {\n      mode: 'label'\n    },\n    scales: {\n      xAxes: [{\n        type: 'category',\n        id: 'x-axis-0'\n      }],\n      yAxes: [{\n        type: 'linear',\n        id: 'y-axis-0'\n      }]\n    }\n  });\n\n  function lineEnabled(dataset, options) {\n    return valueOrDefault$5(dataset.showLine, options.showLines);\n  }\n\n  var controller_line = core_datasetController.extend({\n    datasetElementType: elements.Line,\n    dataElementType: elements.Point,\n    update: function update(reset) {\n      var me = this;\n      var meta = me.getMeta();\n      var line = meta.dataset;\n      var points = meta.data || [];\n      var scale = me.getScaleForId(meta.yAxisID);\n      var dataset = me.getDataset();\n      var showLine = lineEnabled(dataset, me.chart.options);\n      var i, ilen; // Update Line\n\n      if (showLine) {\n        // Compatibility: If the properties are defined with only the old name, use those values\n        if (dataset.tension !== undefined && dataset.lineTension === undefined) {\n          dataset.lineTension = dataset.tension;\n        } // Utility\n\n\n        line._scale = scale;\n        line._datasetIndex = me.index; // Data\n\n        line._children = points; // Model\n\n        line._model = me._resolveLineOptions(line);\n        line.pivot();\n      } // Update Points\n\n\n      for (i = 0, ilen = points.length; i < ilen; ++i) {\n        me.updateElement(points[i], i, reset);\n      }\n\n      if (showLine && line._model.tension !== 0) {\n        me.updateBezierControlPoints();\n      } // Now pivot the point for animation\n\n\n      for (i = 0, ilen = points.length; i < ilen; ++i) {\n        points[i].pivot();\n      }\n    },\n    updateElement: function updateElement(point, index, reset) {\n      var me = this;\n      var meta = me.getMeta();\n      var custom = point.custom || {};\n      var dataset = me.getDataset();\n      var datasetIndex = me.index;\n      var value = dataset.data[index];\n      var yScale = me.getScaleForId(meta.yAxisID);\n      var xScale = me.getScaleForId(meta.xAxisID);\n      var lineModel = meta.dataset._model;\n      var x, y;\n\n      var options = me._resolvePointOptions(point, index);\n\n      x = xScale.getPixelForValue(typeof value === 'object' ? value : NaN, index, datasetIndex);\n      y = reset ? yScale.getBasePixel() : me.calculatePointY(value, index, datasetIndex); // Utility\n\n      point._xScale = xScale;\n      point._yScale = yScale;\n      point._options = options;\n      point._datasetIndex = datasetIndex;\n      point._index = index; // Desired view properties\n\n      point._model = {\n        x: x,\n        y: y,\n        skip: custom.skip || isNaN(x) || isNaN(y),\n        // Appearance\n        radius: options.radius,\n        pointStyle: options.pointStyle,\n        rotation: options.rotation,\n        backgroundColor: options.backgroundColor,\n        borderColor: options.borderColor,\n        borderWidth: options.borderWidth,\n        tension: valueOrDefault$5(custom.tension, lineModel ? lineModel.tension : 0),\n        steppedLine: lineModel ? lineModel.steppedLine : false,\n        // Tooltip\n        hitRadius: options.hitRadius\n      };\n    },\n\n    /**\n     * @private\n     */\n    _resolvePointOptions: function _resolvePointOptions(element, index) {\n      var me = this;\n      var chart = me.chart;\n      var dataset = chart.data.datasets[me.index];\n      var custom = element.custom || {};\n      var options = chart.options.elements.point;\n      var values = {};\n      var i, ilen, key; // Scriptable options\n\n      var context = {\n        chart: chart,\n        dataIndex: index,\n        dataset: dataset,\n        datasetIndex: me.index\n      };\n      var ELEMENT_OPTIONS = {\n        backgroundColor: 'pointBackgroundColor',\n        borderColor: 'pointBorderColor',\n        borderWidth: 'pointBorderWidth',\n        hitRadius: 'pointHitRadius',\n        hoverBackgroundColor: 'pointHoverBackgroundColor',\n        hoverBorderColor: 'pointHoverBorderColor',\n        hoverBorderWidth: 'pointHoverBorderWidth',\n        hoverRadius: 'pointHoverRadius',\n        pointStyle: 'pointStyle',\n        radius: 'pointRadius',\n        rotation: 'pointRotation'\n      };\n      var keys = Object.keys(ELEMENT_OPTIONS);\n\n      for (i = 0, ilen = keys.length; i < ilen; ++i) {\n        key = keys[i];\n        values[key] = resolve$4([custom[key], dataset[ELEMENT_OPTIONS[key]], dataset[key], options[key]], context, index);\n      }\n\n      return values;\n    },\n\n    /**\n     * @private\n     */\n    _resolveLineOptions: function _resolveLineOptions(element) {\n      var me = this;\n      var chart = me.chart;\n      var dataset = chart.data.datasets[me.index];\n      var custom = element.custom || {};\n      var options = chart.options;\n      var elementOptions = options.elements.line;\n      var values = {};\n      var i, ilen, key;\n      var keys = ['backgroundColor', 'borderWidth', 'borderColor', 'borderCapStyle', 'borderDash', 'borderDashOffset', 'borderJoinStyle', 'fill', 'cubicInterpolationMode'];\n\n      for (i = 0, ilen = keys.length; i < ilen; ++i) {\n        key = keys[i];\n        values[key] = resolve$4([custom[key], dataset[key], elementOptions[key]]);\n      } // The default behavior of lines is to break at null values, according\n      // to https://github.com/chartjs/Chart.js/issues/2435#issuecomment-216718158\n      // This option gives lines the ability to span gaps\n\n\n      values.spanGaps = valueOrDefault$5(dataset.spanGaps, options.spanGaps);\n      values.tension = valueOrDefault$5(dataset.lineTension, elementOptions.tension);\n      values.steppedLine = resolve$4([custom.steppedLine, dataset.steppedLine, elementOptions.stepped]);\n      return values;\n    },\n    calculatePointY: function calculatePointY(value, index, datasetIndex) {\n      var me = this;\n      var chart = me.chart;\n      var meta = me.getMeta();\n      var yScale = me.getScaleForId(meta.yAxisID);\n      var sumPos = 0;\n      var sumNeg = 0;\n      var i, ds, dsMeta;\n\n      if (yScale.options.stacked) {\n        for (i = 0; i < datasetIndex; i++) {\n          ds = chart.data.datasets[i];\n          dsMeta = chart.getDatasetMeta(i);\n\n          if (dsMeta.type === 'line' && dsMeta.yAxisID === yScale.id && chart.isDatasetVisible(i)) {\n            var stackedRightValue = Number(yScale.getRightValue(ds.data[index]));\n\n            if (stackedRightValue < 0) {\n              sumNeg += stackedRightValue || 0;\n            } else {\n              sumPos += stackedRightValue || 0;\n            }\n          }\n        }\n\n        var rightValue = Number(yScale.getRightValue(value));\n\n        if (rightValue < 0) {\n          return yScale.getPixelForValue(sumNeg + rightValue);\n        }\n\n        return yScale.getPixelForValue(sumPos + rightValue);\n      }\n\n      return yScale.getPixelForValue(value);\n    },\n    updateBezierControlPoints: function updateBezierControlPoints() {\n      var me = this;\n      var chart = me.chart;\n      var meta = me.getMeta();\n      var lineModel = meta.dataset._model;\n      var area = chart.chartArea;\n      var points = meta.data || [];\n      var i, ilen, model, controlPoints; // Only consider points that are drawn in case the spanGaps option is used\n\n      if (lineModel.spanGaps) {\n        points = points.filter(function (pt) {\n          return !pt._model.skip;\n        });\n      }\n\n      function capControlPoint(pt, min, max) {\n        return Math.max(Math.min(pt, max), min);\n      }\n\n      if (lineModel.cubicInterpolationMode === 'monotone') {\n        helpers$1.splineCurveMonotone(points);\n      } else {\n        for (i = 0, ilen = points.length; i < ilen; ++i) {\n          model = points[i]._model;\n          controlPoints = helpers$1.splineCurve(helpers$1.previousItem(points, i)._model, model, helpers$1.nextItem(points, i)._model, lineModel.tension);\n          model.controlPointPreviousX = controlPoints.previous.x;\n          model.controlPointPreviousY = controlPoints.previous.y;\n          model.controlPointNextX = controlPoints.next.x;\n          model.controlPointNextY = controlPoints.next.y;\n        }\n      }\n\n      if (chart.options.elements.line.capBezierPoints) {\n        for (i = 0, ilen = points.length; i < ilen; ++i) {\n          model = points[i]._model;\n\n          if (isPointInArea(model, area)) {\n            if (i > 0 && isPointInArea(points[i - 1]._model, area)) {\n              model.controlPointPreviousX = capControlPoint(model.controlPointPreviousX, area.left, area.right);\n              model.controlPointPreviousY = capControlPoint(model.controlPointPreviousY, area.top, area.bottom);\n            }\n\n            if (i < points.length - 1 && isPointInArea(points[i + 1]._model, area)) {\n              model.controlPointNextX = capControlPoint(model.controlPointNextX, area.left, area.right);\n              model.controlPointNextY = capControlPoint(model.controlPointNextY, area.top, area.bottom);\n            }\n          }\n        }\n      }\n    },\n    draw: function draw() {\n      var me = this;\n      var chart = me.chart;\n      var meta = me.getMeta();\n      var points = meta.data || [];\n      var area = chart.chartArea;\n      var ilen = points.length;\n      var halfBorderWidth;\n      var i = 0;\n\n      if (lineEnabled(me.getDataset(), chart.options)) {\n        halfBorderWidth = (meta.dataset._model.borderWidth || 0) / 2;\n        helpers$1.canvas.clipArea(chart.ctx, {\n          left: area.left,\n          right: area.right,\n          top: area.top - halfBorderWidth,\n          bottom: area.bottom + halfBorderWidth\n        });\n        meta.dataset.draw();\n        helpers$1.canvas.unclipArea(chart.ctx);\n      } // Draw the points\n\n\n      for (; i < ilen; ++i) {\n        points[i].draw(area);\n      }\n    },\n\n    /**\n     * @protected\n     */\n    setHoverStyle: function setHoverStyle(point) {\n      var model = point._model;\n      var options = point._options;\n      var getHoverColor = helpers$1.getHoverColor;\n      point.$previousStyle = {\n        backgroundColor: model.backgroundColor,\n        borderColor: model.borderColor,\n        borderWidth: model.borderWidth,\n        radius: model.radius\n      };\n      model.backgroundColor = valueOrDefault$5(options.hoverBackgroundColor, getHoverColor(options.backgroundColor));\n      model.borderColor = valueOrDefault$5(options.hoverBorderColor, getHoverColor(options.borderColor));\n      model.borderWidth = valueOrDefault$5(options.hoverBorderWidth, options.borderWidth);\n      model.radius = valueOrDefault$5(options.hoverRadius, options.radius);\n    }\n  });\n  var resolve$5 = helpers$1.options.resolve;\n\n  core_defaults._set('polarArea', {\n    scale: {\n      type: 'radialLinear',\n      angleLines: {\n        display: false\n      },\n      gridLines: {\n        circular: true\n      },\n      pointLabels: {\n        display: false\n      },\n      ticks: {\n        beginAtZero: true\n      }\n    },\n    // Boolean - Whether to animate the rotation of the chart\n    animation: {\n      animateRotate: true,\n      animateScale: true\n    },\n    startAngle: -0.5 * Math.PI,\n    legendCallback: function legendCallback(chart) {\n      var text = [];\n      text.push('<ul class=\"' + chart.id + '-legend\">');\n      var data = chart.data;\n      var datasets = data.datasets;\n      var labels = data.labels;\n\n      if (datasets.length) {\n        for (var i = 0; i < datasets[0].data.length; ++i) {\n          text.push('<li><span style=\"background-color:' + datasets[0].backgroundColor[i] + '\"></span>');\n\n          if (labels[i]) {\n            text.push(labels[i]);\n          }\n\n          text.push('</li>');\n        }\n      }\n\n      text.push('</ul>');\n      return text.join('');\n    },\n    legend: {\n      labels: {\n        generateLabels: function generateLabels(chart) {\n          var data = chart.data;\n\n          if (data.labels.length && data.datasets.length) {\n            return data.labels.map(function (label, i) {\n              var meta = chart.getDatasetMeta(0);\n              var ds = data.datasets[0];\n              var arc = meta.data[i];\n              var custom = arc.custom || {};\n              var arcOpts = chart.options.elements.arc;\n              var fill = resolve$5([custom.backgroundColor, ds.backgroundColor, arcOpts.backgroundColor], undefined, i);\n              var stroke = resolve$5([custom.borderColor, ds.borderColor, arcOpts.borderColor], undefined, i);\n              var bw = resolve$5([custom.borderWidth, ds.borderWidth, arcOpts.borderWidth], undefined, i);\n              return {\n                text: label,\n                fillStyle: fill,\n                strokeStyle: stroke,\n                lineWidth: bw,\n                hidden: isNaN(ds.data[i]) || meta.data[i].hidden,\n                // Extra data used for toggling the correct item\n                index: i\n              };\n            });\n          }\n\n          return [];\n        }\n      },\n      onClick: function onClick(e, legendItem) {\n        var index = legendItem.index;\n        var chart = this.chart;\n        var i, ilen, meta;\n\n        for (i = 0, ilen = (chart.data.datasets || []).length; i < ilen; ++i) {\n          meta = chart.getDatasetMeta(i);\n          meta.data[index].hidden = !meta.data[index].hidden;\n        }\n\n        chart.update();\n      }\n    },\n    // Need to override these to give a nice default\n    tooltips: {\n      callbacks: {\n        title: function title() {\n          return '';\n        },\n        label: function label(item, data) {\n          return data.labels[item.index] + ': ' + item.yLabel;\n        }\n      }\n    }\n  });\n\n  var controller_polarArea = core_datasetController.extend({\n    dataElementType: elements.Arc,\n    linkScales: helpers$1.noop,\n    update: function update(reset) {\n      var me = this;\n      var dataset = me.getDataset();\n      var meta = me.getMeta();\n      var start = me.chart.options.startAngle || 0;\n      var starts = me._starts = [];\n      var angles = me._angles = [];\n      var arcs = meta.data;\n      var i, ilen, angle;\n\n      me._updateRadius();\n\n      meta.count = me.countVisibleElements();\n\n      for (i = 0, ilen = dataset.data.length; i < ilen; i++) {\n        starts[i] = start;\n        angle = me._computeAngle(i);\n        angles[i] = angle;\n        start += angle;\n      }\n\n      for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n        arcs[i]._options = me._resolveElementOptions(arcs[i], i);\n        me.updateElement(arcs[i], i, reset);\n      }\n    },\n\n    /**\n     * @private\n     */\n    _updateRadius: function _updateRadius() {\n      var me = this;\n      var chart = me.chart;\n      var chartArea = chart.chartArea;\n      var opts = chart.options;\n      var minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n      chart.outerRadius = Math.max(minSize / 2, 0);\n      chart.innerRadius = Math.max(opts.cutoutPercentage ? chart.outerRadius / 100 * opts.cutoutPercentage : 1, 0);\n      chart.radiusLength = (chart.outerRadius - chart.innerRadius) / chart.getVisibleDatasetCount();\n      me.outerRadius = chart.outerRadius - chart.radiusLength * me.index;\n      me.innerRadius = me.outerRadius - chart.radiusLength;\n    },\n    updateElement: function updateElement(arc, index, reset) {\n      var me = this;\n      var chart = me.chart;\n      var dataset = me.getDataset();\n      var opts = chart.options;\n      var animationOpts = opts.animation;\n      var scale = chart.scale;\n      var labels = chart.data.labels;\n      var centerX = scale.xCenter;\n      var centerY = scale.yCenter; // var negHalfPI = -0.5 * Math.PI;\n\n      var datasetStartAngle = opts.startAngle;\n      var distance = arc.hidden ? 0 : scale.getDistanceFromCenterForValue(dataset.data[index]);\n      var startAngle = me._starts[index];\n      var endAngle = startAngle + (arc.hidden ? 0 : me._angles[index]);\n      var resetRadius = animationOpts.animateScale ? 0 : scale.getDistanceFromCenterForValue(dataset.data[index]);\n      var options = arc._options || {};\n      helpers$1.extend(arc, {\n        // Utility\n        _datasetIndex: me.index,\n        _index: index,\n        _scale: scale,\n        // Desired view properties\n        _model: {\n          backgroundColor: options.backgroundColor,\n          borderColor: options.borderColor,\n          borderWidth: options.borderWidth,\n          borderAlign: options.borderAlign,\n          x: centerX,\n          y: centerY,\n          innerRadius: 0,\n          outerRadius: reset ? resetRadius : distance,\n          startAngle: reset && animationOpts.animateRotate ? datasetStartAngle : startAngle,\n          endAngle: reset && animationOpts.animateRotate ? datasetStartAngle : endAngle,\n          label: helpers$1.valueAtIndexOrDefault(labels, index, labels[index])\n        }\n      });\n      arc.pivot();\n    },\n    countVisibleElements: function countVisibleElements() {\n      var dataset = this.getDataset();\n      var meta = this.getMeta();\n      var count = 0;\n      helpers$1.each(meta.data, function (element, index) {\n        if (!isNaN(dataset.data[index]) && !element.hidden) {\n          count++;\n        }\n      });\n      return count;\n    },\n\n    /**\n     * @protected\n     */\n    setHoverStyle: function setHoverStyle(arc) {\n      var model = arc._model;\n      var options = arc._options;\n      var getHoverColor = helpers$1.getHoverColor;\n      var valueOrDefault = helpers$1.valueOrDefault;\n      arc.$previousStyle = {\n        backgroundColor: model.backgroundColor,\n        borderColor: model.borderColor,\n        borderWidth: model.borderWidth\n      };\n      model.backgroundColor = valueOrDefault(options.hoverBackgroundColor, getHoverColor(options.backgroundColor));\n      model.borderColor = valueOrDefault(options.hoverBorderColor, getHoverColor(options.borderColor));\n      model.borderWidth = valueOrDefault(options.hoverBorderWidth, options.borderWidth);\n    },\n\n    /**\n     * @private\n     */\n    _resolveElementOptions: function _resolveElementOptions(arc, index) {\n      var me = this;\n      var chart = me.chart;\n      var dataset = me.getDataset();\n      var custom = arc.custom || {};\n      var options = chart.options.elements.arc;\n      var values = {};\n      var i, ilen, key; // Scriptable options\n\n      var context = {\n        chart: chart,\n        dataIndex: index,\n        dataset: dataset,\n        datasetIndex: me.index\n      };\n      var keys = ['backgroundColor', 'borderColor', 'borderWidth', 'borderAlign', 'hoverBackgroundColor', 'hoverBorderColor', 'hoverBorderWidth'];\n\n      for (i = 0, ilen = keys.length; i < ilen; ++i) {\n        key = keys[i];\n        values[key] = resolve$5([custom[key], dataset[key], options[key]], context, index);\n      }\n\n      return values;\n    },\n\n    /**\n     * @private\n     */\n    _computeAngle: function _computeAngle(index) {\n      var me = this;\n      var count = this.getMeta().count;\n      var dataset = me.getDataset();\n      var meta = me.getMeta();\n\n      if (isNaN(dataset.data[index]) || meta.data[index].hidden) {\n        return 0;\n      } // Scriptable options\n\n\n      var context = {\n        chart: me.chart,\n        dataIndex: index,\n        dataset: dataset,\n        datasetIndex: me.index\n      };\n      return resolve$5([me.chart.options.elements.arc.angle, 2 * Math.PI / count], context, index);\n    }\n  });\n\n  core_defaults._set('pie', helpers$1.clone(core_defaults.doughnut));\n\n  core_defaults._set('pie', {\n    cutoutPercentage: 0\n  }); // Pie charts are Doughnut chart with different defaults\n\n\n  var controller_pie = controller_doughnut;\n  var valueOrDefault$6 = helpers$1.valueOrDefault;\n  var resolve$6 = helpers$1.options.resolve;\n\n  core_defaults._set('radar', {\n    scale: {\n      type: 'radialLinear'\n    },\n    elements: {\n      line: {\n        tension: 0 // no bezier in radar\n\n      }\n    }\n  });\n\n  var controller_radar = core_datasetController.extend({\n    datasetElementType: elements.Line,\n    dataElementType: elements.Point,\n    linkScales: helpers$1.noop,\n    update: function update(reset) {\n      var me = this;\n      var meta = me.getMeta();\n      var line = meta.dataset;\n      var points = meta.data || [];\n      var scale = me.chart.scale;\n      var dataset = me.getDataset();\n      var i, ilen; // Compatibility: If the properties are defined with only the old name, use those values\n\n      if (dataset.tension !== undefined && dataset.lineTension === undefined) {\n        dataset.lineTension = dataset.tension;\n      } // Utility\n\n\n      line._scale = scale;\n      line._datasetIndex = me.index; // Data\n\n      line._children = points;\n      line._loop = true; // Model\n\n      line._model = me._resolveLineOptions(line);\n      line.pivot(); // Update Points\n\n      for (i = 0, ilen = points.length; i < ilen; ++i) {\n        me.updateElement(points[i], i, reset);\n      } // Update bezier control points\n\n\n      me.updateBezierControlPoints(); // Now pivot the point for animation\n\n      for (i = 0, ilen = points.length; i < ilen; ++i) {\n        points[i].pivot();\n      }\n    },\n    updateElement: function updateElement(point, index, reset) {\n      var me = this;\n      var custom = point.custom || {};\n      var dataset = me.getDataset();\n      var scale = me.chart.scale;\n      var pointPosition = scale.getPointPositionForValue(index, dataset.data[index]);\n\n      var options = me._resolvePointOptions(point, index);\n\n      var lineModel = me.getMeta().dataset._model;\n\n      var x = reset ? scale.xCenter : pointPosition.x;\n      var y = reset ? scale.yCenter : pointPosition.y; // Utility\n\n      point._scale = scale;\n      point._options = options;\n      point._datasetIndex = me.index;\n      point._index = index; // Desired view properties\n\n      point._model = {\n        x: x,\n        // value not used in dataset scale, but we want a consistent API between scales\n        y: y,\n        skip: custom.skip || isNaN(x) || isNaN(y),\n        // Appearance\n        radius: options.radius,\n        pointStyle: options.pointStyle,\n        rotation: options.rotation,\n        backgroundColor: options.backgroundColor,\n        borderColor: options.borderColor,\n        borderWidth: options.borderWidth,\n        tension: valueOrDefault$6(custom.tension, lineModel ? lineModel.tension : 0),\n        // Tooltip\n        hitRadius: options.hitRadius\n      };\n    },\n\n    /**\n     * @private\n     */\n    _resolvePointOptions: function _resolvePointOptions(element, index) {\n      var me = this;\n      var chart = me.chart;\n      var dataset = chart.data.datasets[me.index];\n      var custom = element.custom || {};\n      var options = chart.options.elements.point;\n      var values = {};\n      var i, ilen, key; // Scriptable options\n\n      var context = {\n        chart: chart,\n        dataIndex: index,\n        dataset: dataset,\n        datasetIndex: me.index\n      };\n      var ELEMENT_OPTIONS = {\n        backgroundColor: 'pointBackgroundColor',\n        borderColor: 'pointBorderColor',\n        borderWidth: 'pointBorderWidth',\n        hitRadius: 'pointHitRadius',\n        hoverBackgroundColor: 'pointHoverBackgroundColor',\n        hoverBorderColor: 'pointHoverBorderColor',\n        hoverBorderWidth: 'pointHoverBorderWidth',\n        hoverRadius: 'pointHoverRadius',\n        pointStyle: 'pointStyle',\n        radius: 'pointRadius',\n        rotation: 'pointRotation'\n      };\n      var keys = Object.keys(ELEMENT_OPTIONS);\n\n      for (i = 0, ilen = keys.length; i < ilen; ++i) {\n        key = keys[i];\n        values[key] = resolve$6([custom[key], dataset[ELEMENT_OPTIONS[key]], dataset[key], options[key]], context, index);\n      }\n\n      return values;\n    },\n\n    /**\n     * @private\n     */\n    _resolveLineOptions: function _resolveLineOptions(element) {\n      var me = this;\n      var chart = me.chart;\n      var dataset = chart.data.datasets[me.index];\n      var custom = element.custom || {};\n      var options = chart.options.elements.line;\n      var values = {};\n      var i, ilen, key;\n      var keys = ['backgroundColor', 'borderWidth', 'borderColor', 'borderCapStyle', 'borderDash', 'borderDashOffset', 'borderJoinStyle', 'fill'];\n\n      for (i = 0, ilen = keys.length; i < ilen; ++i) {\n        key = keys[i];\n        values[key] = resolve$6([custom[key], dataset[key], options[key]]);\n      }\n\n      values.tension = valueOrDefault$6(dataset.lineTension, options.tension);\n      return values;\n    },\n    updateBezierControlPoints: function updateBezierControlPoints() {\n      var me = this;\n      var meta = me.getMeta();\n      var area = me.chart.chartArea;\n      var points = meta.data || [];\n      var i, ilen, model, controlPoints;\n\n      function capControlPoint(pt, min, max) {\n        return Math.max(Math.min(pt, max), min);\n      }\n\n      for (i = 0, ilen = points.length; i < ilen; ++i) {\n        model = points[i]._model;\n        controlPoints = helpers$1.splineCurve(helpers$1.previousItem(points, i, true)._model, model, helpers$1.nextItem(points, i, true)._model, model.tension); // Prevent the bezier going outside of the bounds of the graph\n\n        model.controlPointPreviousX = capControlPoint(controlPoints.previous.x, area.left, area.right);\n        model.controlPointPreviousY = capControlPoint(controlPoints.previous.y, area.top, area.bottom);\n        model.controlPointNextX = capControlPoint(controlPoints.next.x, area.left, area.right);\n        model.controlPointNextY = capControlPoint(controlPoints.next.y, area.top, area.bottom);\n      }\n    },\n    setHoverStyle: function setHoverStyle(point) {\n      var model = point._model;\n      var options = point._options;\n      var getHoverColor = helpers$1.getHoverColor;\n      point.$previousStyle = {\n        backgroundColor: model.backgroundColor,\n        borderColor: model.borderColor,\n        borderWidth: model.borderWidth,\n        radius: model.radius\n      };\n      model.backgroundColor = valueOrDefault$6(options.hoverBackgroundColor, getHoverColor(options.backgroundColor));\n      model.borderColor = valueOrDefault$6(options.hoverBorderColor, getHoverColor(options.borderColor));\n      model.borderWidth = valueOrDefault$6(options.hoverBorderWidth, options.borderWidth);\n      model.radius = valueOrDefault$6(options.hoverRadius, options.radius);\n    }\n  });\n\n  core_defaults._set('scatter', {\n    hover: {\n      mode: 'single'\n    },\n    scales: {\n      xAxes: [{\n        id: 'x-axis-1',\n        // need an ID so datasets can reference the scale\n        type: 'linear',\n        // scatter should not use a category axis\n        position: 'bottom'\n      }],\n      yAxes: [{\n        id: 'y-axis-1',\n        type: 'linear',\n        position: 'left'\n      }]\n    },\n    showLines: false,\n    tooltips: {\n      callbacks: {\n        title: function title() {\n          return ''; // doesn't make sense for scatter since data are formatted as a point\n        },\n        label: function label(item) {\n          return '(' + item.xLabel + ', ' + item.yLabel + ')';\n        }\n      }\n    }\n  }); // Scatter charts use line controllers\n\n\n  var controller_scatter = controller_line; // NOTE export a map in which the key represents the controller type, not\n  // the class, and so must be CamelCase in order to be correctly retrieved\n  // by the controller in core.controller.js (`controllers[meta.type]`).\n\n  var controllers = {\n    bar: controller_bar,\n    bubble: controller_bubble,\n    doughnut: controller_doughnut,\n    horizontalBar: controller_horizontalBar,\n    line: controller_line,\n    polarArea: controller_polarArea,\n    pie: controller_pie,\n    radar: controller_radar,\n    scatter: controller_scatter\n  };\n  /**\n   * Helper function to get relative position for an event\n   * @param {Event|IEvent} event - The event to get the position for\n   * @param {Chart} chart - The chart\n   * @returns {object} the event position\n   */\n\n  function getRelativePosition(e, chart) {\n    if (e.native) {\n      return {\n        x: e.x,\n        y: e.y\n      };\n    }\n\n    return helpers$1.getRelativePosition(e, chart);\n  }\n  /**\n   * Helper function to traverse all of the visible elements in the chart\n   * @param {Chart} chart - the chart\n   * @param {function} handler - the callback to execute for each visible item\n   */\n\n\n  function parseVisibleItems(chart, handler) {\n    var datasets = chart.data.datasets;\n    var meta, i, j, ilen, jlen;\n\n    for (i = 0, ilen = datasets.length; i < ilen; ++i) {\n      if (!chart.isDatasetVisible(i)) {\n        continue;\n      }\n\n      meta = chart.getDatasetMeta(i);\n\n      for (j = 0, jlen = meta.data.length; j < jlen; ++j) {\n        var element = meta.data[j];\n\n        if (!element._view.skip) {\n          handler(element);\n        }\n      }\n    }\n  }\n  /**\n   * Helper function to get the items that intersect the event position\n   * @param {ChartElement[]} items - elements to filter\n   * @param {object} position - the point to be nearest to\n   * @return {ChartElement[]} the nearest items\n   */\n\n\n  function getIntersectItems(chart, position) {\n    var elements = [];\n    parseVisibleItems(chart, function (element) {\n      if (element.inRange(position.x, position.y)) {\n        elements.push(element);\n      }\n    });\n    return elements;\n  }\n  /**\n   * Helper function to get the items nearest to the event position considering all visible items in teh chart\n   * @param {Chart} chart - the chart to look at elements from\n   * @param {object} position - the point to be nearest to\n   * @param {boolean} intersect - if true, only consider items that intersect the position\n   * @param {function} distanceMetric - function to provide the distance between points\n   * @return {ChartElement[]} the nearest items\n   */\n\n\n  function getNearestItems(chart, position, intersect, distanceMetric) {\n    var minDistance = Number.POSITIVE_INFINITY;\n    var nearestItems = [];\n    parseVisibleItems(chart, function (element) {\n      if (intersect && !element.inRange(position.x, position.y)) {\n        return;\n      }\n\n      var center = element.getCenterPoint();\n      var distance = distanceMetric(position, center);\n\n      if (distance < minDistance) {\n        nearestItems = [element];\n        minDistance = distance;\n      } else if (distance === minDistance) {\n        // Can have multiple items at the same distance in which case we sort by size\n        nearestItems.push(element);\n      }\n    });\n    return nearestItems;\n  }\n  /**\n   * Get a distance metric function for two points based on the\n   * axis mode setting\n   * @param {string} axis - the axis mode. x|y|xy\n   */\n\n\n  function getDistanceMetricForAxis(axis) {\n    var useX = axis.indexOf('x') !== -1;\n    var useY = axis.indexOf('y') !== -1;\n    return function (pt1, pt2) {\n      var deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n      var deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n      return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n    };\n  }\n\n  function indexMode(chart, e, options) {\n    var position = getRelativePosition(e, chart); // Default axis for index mode is 'x' to match old behaviour\n\n    options.axis = options.axis || 'x';\n    var distanceMetric = getDistanceMetricForAxis(options.axis);\n    var items = options.intersect ? getIntersectItems(chart, position) : getNearestItems(chart, position, false, distanceMetric);\n    var elements = [];\n\n    if (!items.length) {\n      return [];\n    }\n\n    chart.data.datasets.forEach(function (dataset, datasetIndex) {\n      if (chart.isDatasetVisible(datasetIndex)) {\n        var meta = chart.getDatasetMeta(datasetIndex);\n        var element = meta.data[items[0]._index]; // don't count items that are skipped (null data)\n\n        if (element && !element._view.skip) {\n          elements.push(element);\n        }\n      }\n    });\n    return elements;\n  }\n  /**\n   * @interface IInteractionOptions\n   */\n\n  /**\n   * If true, only consider items that intersect the point\n   * @name IInterfaceOptions#boolean\n   * @type Boolean\n   */\n\n  /**\n   * Contains interaction related functions\n   * @namespace Chart.Interaction\n   */\n\n\n  var core_interaction = {\n    // Helper function for different modes\n    modes: {\n      single: function single(chart, e) {\n        var position = getRelativePosition(e, chart);\n        var elements = [];\n        parseVisibleItems(chart, function (element) {\n          if (element.inRange(position.x, position.y)) {\n            elements.push(element);\n            return elements;\n          }\n        });\n        return elements.slice(0, 1);\n      },\n\n      /**\n       * @function Chart.Interaction.modes.label\n       * @deprecated since version 2.4.0\n       * @todo remove at version 3\n       * @private\n       */\n      label: indexMode,\n\n      /**\n       * Returns items at the same index. If the options.intersect parameter is true, we only return items if we intersect something\n       * If the options.intersect mode is false, we find the nearest item and return the items at the same index as that item\n       * @function Chart.Interaction.modes.index\n       * @since v2.4.0\n       * @param {Chart} chart - the chart we are returning items from\n       * @param {Event} e - the event we are find things at\n       * @param {IInteractionOptions} options - options to use during interaction\n       * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n       */\n      index: indexMode,\n\n      /**\n       * Returns items in the same dataset. If the options.intersect parameter is true, we only return items if we intersect something\n       * If the options.intersect is false, we find the nearest item and return the items in that dataset\n       * @function Chart.Interaction.modes.dataset\n       * @param {Chart} chart - the chart we are returning items from\n       * @param {Event} e - the event we are find things at\n       * @param {IInteractionOptions} options - options to use during interaction\n       * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n       */\n      dataset: function dataset(chart, e, options) {\n        var position = getRelativePosition(e, chart);\n        options.axis = options.axis || 'xy';\n        var distanceMetric = getDistanceMetricForAxis(options.axis);\n        var items = options.intersect ? getIntersectItems(chart, position) : getNearestItems(chart, position, false, distanceMetric);\n\n        if (items.length > 0) {\n          items = chart.getDatasetMeta(items[0]._datasetIndex).data;\n        }\n\n        return items;\n      },\n\n      /**\n       * @function Chart.Interaction.modes.x-axis\n       * @deprecated since version 2.4.0. Use index mode and intersect == true\n       * @todo remove at version 3\n       * @private\n       */\n      'x-axis': function xAxis(chart, e) {\n        return indexMode(chart, e, {\n          intersect: false\n        });\n      },\n\n      /**\n       * Point mode returns all elements that hit test based on the event position\n       * of the event\n       * @function Chart.Interaction.modes.intersect\n       * @param {Chart} chart - the chart we are returning items from\n       * @param {Event} e - the event we are find things at\n       * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n       */\n      point: function point(chart, e) {\n        var position = getRelativePosition(e, chart);\n        return getIntersectItems(chart, position);\n      },\n\n      /**\n       * nearest mode returns the element closest to the point\n       * @function Chart.Interaction.modes.intersect\n       * @param {Chart} chart - the chart we are returning items from\n       * @param {Event} e - the event we are find things at\n       * @param {IInteractionOptions} options - options to use\n       * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n       */\n      nearest: function nearest(chart, e, options) {\n        var position = getRelativePosition(e, chart);\n        options.axis = options.axis || 'xy';\n        var distanceMetric = getDistanceMetricForAxis(options.axis);\n        return getNearestItems(chart, position, options.intersect, distanceMetric);\n      },\n\n      /**\n       * x mode returns the elements that hit-test at the current x coordinate\n       * @function Chart.Interaction.modes.x\n       * @param {Chart} chart - the chart we are returning items from\n       * @param {Event} e - the event we are find things at\n       * @param {IInteractionOptions} options - options to use\n       * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n       */\n      x: function x(chart, e, options) {\n        var position = getRelativePosition(e, chart);\n        var items = [];\n        var intersectsItem = false;\n        parseVisibleItems(chart, function (element) {\n          if (element.inXRange(position.x)) {\n            items.push(element);\n          }\n\n          if (element.inRange(position.x, position.y)) {\n            intersectsItem = true;\n          }\n        }); // If we want to trigger on an intersect and we don't have any items\n        // that intersect the position, return nothing\n\n        if (options.intersect && !intersectsItem) {\n          items = [];\n        }\n\n        return items;\n      },\n\n      /**\n       * y mode returns the elements that hit-test at the current y coordinate\n       * @function Chart.Interaction.modes.y\n       * @param {Chart} chart - the chart we are returning items from\n       * @param {Event} e - the event we are find things at\n       * @param {IInteractionOptions} options - options to use\n       * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n       */\n      y: function y(chart, e, options) {\n        var position = getRelativePosition(e, chart);\n        var items = [];\n        var intersectsItem = false;\n        parseVisibleItems(chart, function (element) {\n          if (element.inYRange(position.y)) {\n            items.push(element);\n          }\n\n          if (element.inRange(position.x, position.y)) {\n            intersectsItem = true;\n          }\n        }); // If we want to trigger on an intersect and we don't have any items\n        // that intersect the position, return nothing\n\n        if (options.intersect && !intersectsItem) {\n          items = [];\n        }\n\n        return items;\n      }\n    }\n  };\n\n  function filterByPosition(array, position) {\n    return helpers$1.where(array, function (v) {\n      return v.position === position;\n    });\n  }\n\n  function sortByWeight(array, reverse) {\n    array.forEach(function (v, i) {\n      v._tmpIndex_ = i;\n      return v;\n    });\n    array.sort(function (a, b) {\n      var v0 = reverse ? b : a;\n      var v1 = reverse ? a : b;\n      return v0.weight === v1.weight ? v0._tmpIndex_ - v1._tmpIndex_ : v0.weight - v1.weight;\n    });\n    array.forEach(function (v) {\n      delete v._tmpIndex_;\n    });\n  }\n\n  function findMaxPadding(boxes) {\n    var top = 0;\n    var left = 0;\n    var bottom = 0;\n    var right = 0;\n    helpers$1.each(boxes, function (box) {\n      if (box.getPadding) {\n        var boxPadding = box.getPadding();\n        top = Math.max(top, boxPadding.top);\n        left = Math.max(left, boxPadding.left);\n        bottom = Math.max(bottom, boxPadding.bottom);\n        right = Math.max(right, boxPadding.right);\n      }\n    });\n    return {\n      top: top,\n      left: left,\n      bottom: bottom,\n      right: right\n    };\n  }\n\n  function addSizeByPosition(boxes, size) {\n    helpers$1.each(boxes, function (box) {\n      size[box.position] += box.isHorizontal() ? box.height : box.width;\n    });\n  }\n\n  core_defaults._set('global', {\n    layout: {\n      padding: {\n        top: 0,\n        right: 0,\n        bottom: 0,\n        left: 0\n      }\n    }\n  });\n  /**\n   * @interface ILayoutItem\n   * @prop {string} position - The position of the item in the chart layout. Possible values are\n   * 'left', 'top', 'right', 'bottom', and 'chartArea'\n   * @prop {number} weight - The weight used to sort the item. Higher weights are further away from the chart area\n   * @prop {boolean} fullWidth - if true, and the item is horizontal, then push vertical boxes down\n   * @prop {function} isHorizontal - returns true if the layout item is horizontal (ie. top or bottom)\n   * @prop {function} update - Takes two parameters: width and height. Returns size of item\n   * @prop {function} getPadding -  Returns an object with padding on the edges\n   * @prop {number} width - Width of item. Must be valid after update()\n   * @prop {number} height - Height of item. Must be valid after update()\n   * @prop {number} left - Left edge of the item. Set by layout system and cannot be used in update\n   * @prop {number} top - Top edge of the item. Set by layout system and cannot be used in update\n   * @prop {number} right - Right edge of the item. Set by layout system and cannot be used in update\n   * @prop {number} bottom - Bottom edge of the item. Set by layout system and cannot be used in update\n   */\n  // The layout service is very self explanatory.  It's responsible for the layout within a chart.\n  // Scales, Legends and Plugins all rely on the layout service and can easily register to be placed anywhere they need\n  // It is this service's responsibility of carrying out that layout.\n\n\n  var core_layouts = {\n    defaults: {},\n\n    /**\n     * Register a box to a chart.\n     * A box is simply a reference to an object that requires layout. eg. Scales, Legend, Title.\n     * @param {Chart} chart - the chart to use\n     * @param {ILayoutItem} item - the item to add to be layed out\n     */\n    addBox: function addBox(chart, item) {\n      if (!chart.boxes) {\n        chart.boxes = [];\n      } // initialize item with default values\n\n\n      item.fullWidth = item.fullWidth || false;\n      item.position = item.position || 'top';\n      item.weight = item.weight || 0;\n      chart.boxes.push(item);\n    },\n\n    /**\n     * Remove a layoutItem from a chart\n     * @param {Chart} chart - the chart to remove the box from\n     * @param {ILayoutItem} layoutItem - the item to remove from the layout\n     */\n    removeBox: function removeBox(chart, layoutItem) {\n      var index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n\n      if (index !== -1) {\n        chart.boxes.splice(index, 1);\n      }\n    },\n\n    /**\n     * Sets (or updates) options on the given `item`.\n     * @param {Chart} chart - the chart in which the item lives (or will be added to)\n     * @param {ILayoutItem} item - the item to configure with the given options\n     * @param {object} options - the new item options.\n     */\n    configure: function configure(chart, item, options) {\n      var props = ['fullWidth', 'position', 'weight'];\n      var ilen = props.length;\n      var i = 0;\n      var prop;\n\n      for (; i < ilen; ++i) {\n        prop = props[i];\n\n        if (options.hasOwnProperty(prop)) {\n          item[prop] = options[prop];\n        }\n      }\n    },\n\n    /**\n     * Fits boxes of the given chart into the given size by having each box measure itself\n     * then running a fitting algorithm\n     * @param {Chart} chart - the chart\n     * @param {number} width - the width to fit into\n     * @param {number} height - the height to fit into\n     */\n    update: function update(chart, width, height) {\n      if (!chart) {\n        return;\n      }\n\n      var layoutOptions = chart.options.layout || {};\n      var padding = helpers$1.options.toPadding(layoutOptions.padding);\n      var leftPadding = padding.left;\n      var rightPadding = padding.right;\n      var topPadding = padding.top;\n      var bottomPadding = padding.bottom;\n      var leftBoxes = filterByPosition(chart.boxes, 'left');\n      var rightBoxes = filterByPosition(chart.boxes, 'right');\n      var topBoxes = filterByPosition(chart.boxes, 'top');\n      var bottomBoxes = filterByPosition(chart.boxes, 'bottom');\n      var chartAreaBoxes = filterByPosition(chart.boxes, 'chartArea'); // Sort boxes by weight. A higher weight is further away from the chart area\n\n      sortByWeight(leftBoxes, true);\n      sortByWeight(rightBoxes, false);\n      sortByWeight(topBoxes, true);\n      sortByWeight(bottomBoxes, false);\n      var verticalBoxes = leftBoxes.concat(rightBoxes);\n      var horizontalBoxes = topBoxes.concat(bottomBoxes);\n      var outerBoxes = verticalBoxes.concat(horizontalBoxes); // Essentially we now have any number of boxes on each of the 4 sides.\n      // Our canvas looks like the following.\n      // The areas L1 and L2 are the left axes. R1 is the right axis, T1 is the top axis and\n      // B1 is the bottom axis\n      // There are also 4 quadrant-like locations (left to right instead of clockwise) reserved for chart overlays\n      // These locations are single-box locations only, when trying to register a chartArea location that is already taken,\n      // an error will be thrown.\n      //\n      // |----------------------------------------------------|\n      // |                  T1 (Full Width)                   |\n      // |----------------------------------------------------|\n      // |    |    |                 T2                  |    |\n      // |    |----|-------------------------------------|----|\n      // |    |    | C1 |                           | C2 |    |\n      // |    |    |----|                           |----|    |\n      // |    |    |                                     |    |\n      // | L1 | L2 |           ChartArea (C0)            | R1 |\n      // |    |    |                                     |    |\n      // |    |    |----|                           |----|    |\n      // |    |    | C3 |                           | C4 |    |\n      // |    |----|-------------------------------------|----|\n      // |    |    |                 B1                  |    |\n      // |----------------------------------------------------|\n      // |                  B2 (Full Width)                   |\n      // |----------------------------------------------------|\n      //\n      // What we do to find the best sizing, we do the following\n      // 1. Determine the minimum size of the chart area.\n      // 2. Split the remaining width equally between each vertical axis\n      // 3. Split the remaining height equally between each horizontal axis\n      // 4. Give each layout the maximum size it can be. The layout will return it's minimum size\n      // 5. Adjust the sizes of each axis based on it's minimum reported size.\n      // 6. Refit each axis\n      // 7. Position each axis in the final location\n      // 8. Tell the chart the final location of the chart area\n      // 9. Tell any axes that overlay the chart area the positions of the chart area\n      // Step 1\n\n      var chartWidth = width - leftPadding - rightPadding;\n      var chartHeight = height - topPadding - bottomPadding;\n      var chartAreaWidth = chartWidth / 2; // min 50%\n      // Step 2\n\n      var verticalBoxWidth = (width - chartAreaWidth) / verticalBoxes.length; // Step 3\n      // TODO re-limit horizontal axis height (this limit has affected only padding calculation since PR 1837)\n      // var horizontalBoxHeight = (height - chartAreaHeight) / horizontalBoxes.length;\n      // Step 4\n\n      var maxChartAreaWidth = chartWidth;\n      var maxChartAreaHeight = chartHeight;\n      var outerBoxSizes = {\n        top: topPadding,\n        left: leftPadding,\n        bottom: bottomPadding,\n        right: rightPadding\n      };\n      var minBoxSizes = [];\n      var maxPadding;\n\n      function getMinimumBoxSize(box) {\n        var minSize;\n        var isHorizontal = box.isHorizontal();\n\n        if (isHorizontal) {\n          minSize = box.update(box.fullWidth ? chartWidth : maxChartAreaWidth, chartHeight / 2);\n          maxChartAreaHeight -= minSize.height;\n        } else {\n          minSize = box.update(verticalBoxWidth, maxChartAreaHeight);\n          maxChartAreaWidth -= minSize.width;\n        }\n\n        minBoxSizes.push({\n          horizontal: isHorizontal,\n          width: minSize.width,\n          box: box\n        });\n      }\n\n      helpers$1.each(outerBoxes, getMinimumBoxSize); // If a horizontal box has padding, we move the left boxes over to avoid ugly charts (see issue #2478)\n\n      maxPadding = findMaxPadding(outerBoxes); // At this point, maxChartAreaHeight and maxChartAreaWidth are the size the chart area could\n      // be if the axes are drawn at their minimum sizes.\n      // Steps 5 & 6\n      // Function to fit a box\n\n      function fitBox(box) {\n        var minBoxSize = helpers$1.findNextWhere(minBoxSizes, function (minBox) {\n          return minBox.box === box;\n        });\n\n        if (minBoxSize) {\n          if (minBoxSize.horizontal) {\n            var scaleMargin = {\n              left: Math.max(outerBoxSizes.left, maxPadding.left),\n              right: Math.max(outerBoxSizes.right, maxPadding.right),\n              top: 0,\n              bottom: 0\n            }; // Don't use min size here because of label rotation. When the labels are rotated, their rotation highly depends\n            // on the margin. Sometimes they need to increase in size slightly\n\n            box.update(box.fullWidth ? chartWidth : maxChartAreaWidth, chartHeight / 2, scaleMargin);\n          } else {\n            box.update(minBoxSize.width, maxChartAreaHeight);\n          }\n        }\n      } // Update, and calculate the left and right margins for the horizontal boxes\n\n\n      helpers$1.each(verticalBoxes, fitBox);\n      addSizeByPosition(verticalBoxes, outerBoxSizes); // Set the Left and Right margins for the horizontal boxes\n\n      helpers$1.each(horizontalBoxes, fitBox);\n      addSizeByPosition(horizontalBoxes, outerBoxSizes);\n\n      function finalFitVerticalBox(box) {\n        var minBoxSize = helpers$1.findNextWhere(minBoxSizes, function (minSize) {\n          return minSize.box === box;\n        });\n        var scaleMargin = {\n          left: 0,\n          right: 0,\n          top: outerBoxSizes.top,\n          bottom: outerBoxSizes.bottom\n        };\n\n        if (minBoxSize) {\n          box.update(minBoxSize.width, maxChartAreaHeight, scaleMargin);\n        }\n      } // Let the left layout know the final margin\n\n\n      helpers$1.each(verticalBoxes, finalFitVerticalBox); // Recalculate because the size of each layout might have changed slightly due to the margins (label rotation for instance)\n\n      outerBoxSizes = {\n        top: topPadding,\n        left: leftPadding,\n        bottom: bottomPadding,\n        right: rightPadding\n      };\n      addSizeByPosition(outerBoxes, outerBoxSizes); // We may be adding some padding to account for rotated x axis labels\n\n      var leftPaddingAddition = Math.max(maxPadding.left - outerBoxSizes.left, 0);\n      outerBoxSizes.left += leftPaddingAddition;\n      outerBoxSizes.right += Math.max(maxPadding.right - outerBoxSizes.right, 0);\n      var topPaddingAddition = Math.max(maxPadding.top - outerBoxSizes.top, 0);\n      outerBoxSizes.top += topPaddingAddition;\n      outerBoxSizes.bottom += Math.max(maxPadding.bottom - outerBoxSizes.bottom, 0); // Figure out if our chart area changed. This would occur if the dataset layout label rotation\n      // changed due to the application of the margins in step 6. Since we can only get bigger, this is safe to do\n      // without calling `fit` again\n\n      var newMaxChartAreaHeight = height - outerBoxSizes.top - outerBoxSizes.bottom;\n      var newMaxChartAreaWidth = width - outerBoxSizes.left - outerBoxSizes.right;\n\n      if (newMaxChartAreaWidth !== maxChartAreaWidth || newMaxChartAreaHeight !== maxChartAreaHeight) {\n        helpers$1.each(verticalBoxes, function (box) {\n          box.height = newMaxChartAreaHeight;\n        });\n        helpers$1.each(horizontalBoxes, function (box) {\n          if (!box.fullWidth) {\n            box.width = newMaxChartAreaWidth;\n          }\n        });\n        maxChartAreaHeight = newMaxChartAreaHeight;\n        maxChartAreaWidth = newMaxChartAreaWidth;\n      } // Step 7 - Position the boxes\n\n\n      var left = leftPadding + leftPaddingAddition;\n      var top = topPadding + topPaddingAddition;\n\n      function placeBox(box) {\n        if (box.isHorizontal()) {\n          box.left = box.fullWidth ? leftPadding : outerBoxSizes.left;\n          box.right = box.fullWidth ? width - rightPadding : outerBoxSizes.left + maxChartAreaWidth;\n          box.top = top;\n          box.bottom = top + box.height; // Move to next point\n\n          top = box.bottom;\n        } else {\n          box.left = left;\n          box.right = left + box.width;\n          box.top = outerBoxSizes.top;\n          box.bottom = outerBoxSizes.top + maxChartAreaHeight; // Move to next point\n\n          left = box.right;\n        }\n      }\n\n      helpers$1.each(leftBoxes.concat(topBoxes), placeBox); // Account for chart width and height\n\n      left += maxChartAreaWidth;\n      top += maxChartAreaHeight;\n      helpers$1.each(rightBoxes, placeBox);\n      helpers$1.each(bottomBoxes, placeBox); // Step 8\n\n      chart.chartArea = {\n        left: outerBoxSizes.left,\n        top: outerBoxSizes.top,\n        right: outerBoxSizes.left + maxChartAreaWidth,\n        bottom: outerBoxSizes.top + maxChartAreaHeight\n      }; // Step 9\n\n      helpers$1.each(chartAreaBoxes, function (box) {\n        box.left = chart.chartArea.left;\n        box.top = chart.chartArea.top;\n        box.right = chart.chartArea.right;\n        box.bottom = chart.chartArea.bottom;\n        box.update(maxChartAreaWidth, maxChartAreaHeight);\n      });\n    }\n  };\n  /**\n   * Platform fallback implementation (minimal).\n   * @see https://github.com/chartjs/Chart.js/pull/4591#issuecomment-319575939\n   */\n\n  var platform_basic = {\n    acquireContext: function acquireContext(item) {\n      if (item && item.canvas) {\n        // Support for any object associated to a canvas (including a context2d)\n        item = item.canvas;\n      }\n\n      return item && item.getContext('2d') || null;\n    }\n  };\n  var platform_dom = \"/*\\n * DOM element rendering detection\\n * https://davidwalsh.name/detect-node-insertion\\n */\\n@keyframes chartjs-render-animation {\\n\\tfrom { opacity: 0.99; }\\n\\tto { opacity: 1; }\\n}\\n\\n.chartjs-render-monitor {\\n\\tanimation: chartjs-render-animation 0.001s;\\n}\\n\\n/*\\n * DOM element resizing detection\\n * https://github.com/marcj/css-element-queries\\n */\\n.chartjs-size-monitor,\\n.chartjs-size-monitor-expand,\\n.chartjs-size-monitor-shrink {\\n\\tposition: absolute;\\n\\tdirection: ltr;\\n\\tleft: 0;\\n\\ttop: 0;\\n\\tright: 0;\\n\\tbottom: 0;\\n\\toverflow: hidden;\\n\\tpointer-events: none;\\n\\tvisibility: hidden;\\n\\tz-index: -1;\\n}\\n\\n.chartjs-size-monitor-expand > div {\\n\\tposition: absolute;\\n\\twidth: 1000000px;\\n\\theight: 1000000px;\\n\\tleft: 0;\\n\\ttop: 0;\\n}\\n\\n.chartjs-size-monitor-shrink > div {\\n\\tposition: absolute;\\n\\twidth: 200%;\\n\\theight: 200%;\\n\\tleft: 0;\\n\\ttop: 0;\\n}\\n\";\n  var platform_dom$1 =\n  /*#__PURE__*/\n  Object.freeze({\n    default: platform_dom\n  });\n\n  function getCjsExportFromNamespace(n) {\n    return n && n.default || n;\n  }\n\n  var stylesheet = getCjsExportFromNamespace(platform_dom$1);\n  var EXPANDO_KEY = '$chartjs';\n  var CSS_PREFIX = 'chartjs-';\n  var CSS_SIZE_MONITOR = CSS_PREFIX + 'size-monitor';\n  var CSS_RENDER_MONITOR = CSS_PREFIX + 'render-monitor';\n  var CSS_RENDER_ANIMATION = CSS_PREFIX + 'render-animation';\n  var ANIMATION_START_EVENTS = ['animationstart', 'webkitAnimationStart'];\n  /**\n   * DOM event types -> Chart.js event types.\n   * Note: only events with different types are mapped.\n   * @see https://developer.mozilla.org/en-US/docs/Web/Events\n   */\n\n  var EVENT_TYPES = {\n    touchstart: 'mousedown',\n    touchmove: 'mousemove',\n    touchend: 'mouseup',\n    pointerenter: 'mouseenter',\n    pointerdown: 'mousedown',\n    pointermove: 'mousemove',\n    pointerup: 'mouseup',\n    pointerleave: 'mouseout',\n    pointerout: 'mouseout'\n  };\n  /**\n   * The \"used\" size is the final value of a dimension property after all calculations have\n   * been performed. This method uses the computed style of `element` but returns undefined\n   * if the computed style is not expressed in pixels. That can happen in some cases where\n   * `element` has a size relative to its parent and this last one is not yet displayed,\n   * for example because of `display: none` on a parent node.\n   * @see https://developer.mozilla.org/en-US/docs/Web/CSS/used_value\n   * @returns {number} Size in pixels or undefined if unknown.\n   */\n\n  function readUsedSize(element, property) {\n    var value = helpers$1.getStyle(element, property);\n    var matches = value && value.match(/^(\\d+)(\\.\\d+)?px$/);\n    return matches ? Number(matches[1]) : undefined;\n  }\n  /**\n   * Initializes the canvas style and render size without modifying the canvas display size,\n   * since responsiveness is handled by the controller.resize() method. The config is used\n   * to determine the aspect ratio to apply in case no explicit height has been specified.\n   */\n\n\n  function initCanvas(canvas, config) {\n    var style = canvas.style; // NOTE(SB) canvas.getAttribute('width') !== canvas.width: in the first case it\n    // returns null or '' if no explicit value has been set to the canvas attribute.\n\n    var renderHeight = canvas.getAttribute('height');\n    var renderWidth = canvas.getAttribute('width'); // Chart.js modifies some canvas values that we want to restore on destroy\n\n    canvas[EXPANDO_KEY] = {\n      initial: {\n        height: renderHeight,\n        width: renderWidth,\n        style: {\n          display: style.display,\n          height: style.height,\n          width: style.width\n        }\n      }\n    }; // Force canvas to display as block to avoid extra space caused by inline\n    // elements, which would interfere with the responsive resize process.\n    // https://github.com/chartjs/Chart.js/issues/2538\n\n    style.display = style.display || 'block';\n\n    if (renderWidth === null || renderWidth === '') {\n      var displayWidth = readUsedSize(canvas, 'width');\n\n      if (displayWidth !== undefined) {\n        canvas.width = displayWidth;\n      }\n    }\n\n    if (renderHeight === null || renderHeight === '') {\n      if (canvas.style.height === '') {\n        // If no explicit render height and style height, let's apply the aspect ratio,\n        // which one can be specified by the user but also by charts as default option\n        // (i.e. options.aspectRatio). If not specified, use canvas aspect ratio of 2.\n        canvas.height = canvas.width / (config.options.aspectRatio || 2);\n      } else {\n        var displayHeight = readUsedSize(canvas, 'height');\n\n        if (displayWidth !== undefined) {\n          canvas.height = displayHeight;\n        }\n      }\n    }\n\n    return canvas;\n  }\n  /**\n   * Detects support for options object argument in addEventListener.\n   * https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Safely_detecting_option_support\n   * @private\n   */\n\n\n  var supportsEventListenerOptions = function () {\n    var supports = false;\n\n    try {\n      var options = Object.defineProperty({}, 'passive', {\n        // eslint-disable-next-line getter-return\n        get: function get() {\n          supports = true;\n        }\n      });\n      window.addEventListener('e', null, options);\n    } catch (e) {// continue regardless of error\n    }\n\n    return supports;\n  }(); // Default passive to true as expected by Chrome for 'touchstart' and 'touchend' events.\n  // https://github.com/chartjs/Chart.js/issues/4287\n\n\n  var eventListenerOptions = supportsEventListenerOptions ? {\n    passive: true\n  } : false;\n\n  function addListener(node, type, listener) {\n    node.addEventListener(type, listener, eventListenerOptions);\n  }\n\n  function removeListener(node, type, listener) {\n    node.removeEventListener(type, listener, eventListenerOptions);\n  }\n\n  function createEvent(type, chart, x, y, nativeEvent) {\n    return {\n      type: type,\n      chart: chart,\n      native: nativeEvent || null,\n      x: x !== undefined ? x : null,\n      y: y !== undefined ? y : null\n    };\n  }\n\n  function fromNativeEvent(event, chart) {\n    var type = EVENT_TYPES[event.type] || event.type;\n    var pos = helpers$1.getRelativePosition(event, chart);\n    return createEvent(type, chart, pos.x, pos.y, event);\n  }\n\n  function throttled(fn, thisArg) {\n    var ticking = false;\n    var args = [];\n    return function () {\n      args = Array.prototype.slice.call(arguments);\n      thisArg = thisArg || this;\n\n      if (!ticking) {\n        ticking = true;\n        helpers$1.requestAnimFrame.call(window, function () {\n          ticking = false;\n          fn.apply(thisArg, args);\n        });\n      }\n    };\n  }\n\n  function createDiv(cls) {\n    var el = document.createElement('div');\n    el.className = cls || '';\n    return el;\n  } // Implementation based on https://github.com/marcj/css-element-queries\n\n\n  function createResizer(handler) {\n    var maxSize = 1000000; // NOTE(SB) Don't use innerHTML because it could be considered unsafe.\n    // https://github.com/chartjs/Chart.js/issues/5902\n\n    var resizer = createDiv(CSS_SIZE_MONITOR);\n    var expand = createDiv(CSS_SIZE_MONITOR + '-expand');\n    var shrink = createDiv(CSS_SIZE_MONITOR + '-shrink');\n    expand.appendChild(createDiv());\n    shrink.appendChild(createDiv());\n    resizer.appendChild(expand);\n    resizer.appendChild(shrink);\n\n    resizer._reset = function () {\n      expand.scrollLeft = maxSize;\n      expand.scrollTop = maxSize;\n      shrink.scrollLeft = maxSize;\n      shrink.scrollTop = maxSize;\n    };\n\n    var onScroll = function onScroll() {\n      resizer._reset();\n\n      handler();\n    };\n\n    addListener(expand, 'scroll', onScroll.bind(expand, 'expand'));\n    addListener(shrink, 'scroll', onScroll.bind(shrink, 'shrink'));\n    return resizer;\n  } // https://davidwalsh.name/detect-node-insertion\n\n\n  function watchForRender(node, handler) {\n    var expando = node[EXPANDO_KEY] || (node[EXPANDO_KEY] = {});\n\n    var proxy = expando.renderProxy = function (e) {\n      if (e.animationName === CSS_RENDER_ANIMATION) {\n        handler();\n      }\n    };\n\n    helpers$1.each(ANIMATION_START_EVENTS, function (type) {\n      addListener(node, type, proxy);\n    }); // #4737: Chrome might skip the CSS animation when the CSS_RENDER_MONITOR class\n    // is removed then added back immediately (same animation frame?). Accessing the\n    // `offsetParent` property will force a reflow and re-evaluate the CSS animation.\n    // https://gist.github.com/paulirish/5d52fb081b3570c81e3a#box-metrics\n    // https://github.com/chartjs/Chart.js/issues/4737\n\n    expando.reflow = !!node.offsetParent;\n    node.classList.add(CSS_RENDER_MONITOR);\n  }\n\n  function unwatchForRender(node) {\n    var expando = node[EXPANDO_KEY] || {};\n    var proxy = expando.renderProxy;\n\n    if (proxy) {\n      helpers$1.each(ANIMATION_START_EVENTS, function (type) {\n        removeListener(node, type, proxy);\n      });\n      delete expando.renderProxy;\n    }\n\n    node.classList.remove(CSS_RENDER_MONITOR);\n  }\n\n  function addResizeListener(node, listener, chart) {\n    var expando = node[EXPANDO_KEY] || (node[EXPANDO_KEY] = {}); // Let's keep track of this added resizer and thus avoid DOM query when removing it.\n\n    var resizer = expando.resizer = createResizer(throttled(function () {\n      if (expando.resizer) {\n        var container = chart.options.maintainAspectRatio && node.parentNode;\n        var w = container ? container.clientWidth : 0;\n        listener(createEvent('resize', chart));\n\n        if (container && container.clientWidth < w && chart.canvas) {\n          // If the container size shrank during chart resize, let's assume\n          // scrollbar appeared. So we resize again with the scrollbar visible -\n          // effectively making chart smaller and the scrollbar hidden again.\n          // Because we are inside `throttled`, and currently `ticking`, scroll\n          // events are ignored during this whole 2 resize process.\n          // If we assumed wrong and something else happened, we are resizing\n          // twice in a frame (potential performance issue)\n          listener(createEvent('resize', chart));\n        }\n      }\n    })); // The resizer needs to be attached to the node parent, so we first need to be\n    // sure that `node` is attached to the DOM before injecting the resizer element.\n\n    watchForRender(node, function () {\n      if (expando.resizer) {\n        var container = node.parentNode;\n\n        if (container && container !== resizer.parentNode) {\n          container.insertBefore(resizer, container.firstChild);\n        } // The container size might have changed, let's reset the resizer state.\n\n\n        resizer._reset();\n      }\n    });\n  }\n\n  function removeResizeListener(node) {\n    var expando = node[EXPANDO_KEY] || {};\n    var resizer = expando.resizer;\n    delete expando.resizer;\n    unwatchForRender(node);\n\n    if (resizer && resizer.parentNode) {\n      resizer.parentNode.removeChild(resizer);\n    }\n  }\n\n  function injectCSS(platform, css) {\n    // https://stackoverflow.com/q/3922139\n    var style = platform._style || document.createElement('style');\n\n    if (!platform._style) {\n      platform._style = style;\n      css = '/* Chart.js */\\n' + css;\n      style.setAttribute('type', 'text/css');\n      document.getElementsByTagName('head')[0].appendChild(style);\n    }\n\n    style.appendChild(document.createTextNode(css));\n  }\n\n  var platform_dom$2 = {\n    /**\n     * When `true`, prevents the automatic injection of the stylesheet required to\n     * correctly detect when the chart is added to the DOM and then resized. This\n     * switch has been added to allow external stylesheet (`dist/Chart(.min)?.js`)\n     * to be manually imported to make this library compatible with any CSP.\n     * See https://github.com/chartjs/Chart.js/issues/5208\n     */\n    disableCSSInjection: false,\n\n    /**\n     * This property holds whether this platform is enabled for the current environment.\n     * Currently used by platform.js to select the proper implementation.\n     * @private\n     */\n    _enabled: typeof window !== 'undefined' && typeof document !== 'undefined',\n\n    /**\n     * @private\n     */\n    _ensureLoaded: function _ensureLoaded() {\n      if (this._loaded) {\n        return;\n      }\n\n      this._loaded = true; // https://github.com/chartjs/Chart.js/issues/5208\n\n      if (!this.disableCSSInjection) {\n        injectCSS(this, stylesheet);\n      }\n    },\n    acquireContext: function acquireContext(item, config) {\n      if (typeof item === 'string') {\n        item = document.getElementById(item);\n      } else if (item.length) {\n        // Support for array based queries (such as jQuery)\n        item = item[0];\n      }\n\n      if (item && item.canvas) {\n        // Support for any object associated to a canvas (including a context2d)\n        item = item.canvas;\n      } // To prevent canvas fingerprinting, some add-ons undefine the getContext\n      // method, for example: https://github.com/kkapsner/CanvasBlocker\n      // https://github.com/chartjs/Chart.js/issues/2807\n\n\n      var context = item && item.getContext && item.getContext('2d'); // Load platform resources on first chart creation, to make possible to change\n      // platform options after importing the library (e.g. `disableCSSInjection`).\n\n      this._ensureLoaded(); // `instanceof HTMLCanvasElement/CanvasRenderingContext2D` fails when the item is\n      // inside an iframe or when running in a protected environment. We could guess the\n      // types from their toString() value but let's keep things flexible and assume it's\n      // a sufficient condition if the item has a context2D which has item as `canvas`.\n      // https://github.com/chartjs/Chart.js/issues/3887\n      // https://github.com/chartjs/Chart.js/issues/4102\n      // https://github.com/chartjs/Chart.js/issues/4152\n\n\n      if (context && context.canvas === item) {\n        initCanvas(item, config);\n        return context;\n      }\n\n      return null;\n    },\n    releaseContext: function releaseContext(context) {\n      var canvas = context.canvas;\n\n      if (!canvas[EXPANDO_KEY]) {\n        return;\n      }\n\n      var initial = canvas[EXPANDO_KEY].initial;\n      ['height', 'width'].forEach(function (prop) {\n        var value = initial[prop];\n\n        if (helpers$1.isNullOrUndef(value)) {\n          canvas.removeAttribute(prop);\n        } else {\n          canvas.setAttribute(prop, value);\n        }\n      });\n      helpers$1.each(initial.style || {}, function (value, key) {\n        canvas.style[key] = value;\n      }); // The canvas render size might have been changed (and thus the state stack discarded),\n      // we can't use save() and restore() to restore the initial state. So make sure that at\n      // least the canvas context is reset to the default state by setting the canvas width.\n      // https://www.w3.org/TR/2011/WD-html5-20110525/the-canvas-element.html\n      // eslint-disable-next-line no-self-assign\n\n      canvas.width = canvas.width;\n      delete canvas[EXPANDO_KEY];\n    },\n    addEventListener: function addEventListener(chart, type, listener) {\n      var canvas = chart.canvas;\n\n      if (type === 'resize') {\n        // Note: the resize event is not supported on all browsers.\n        addResizeListener(canvas, listener, chart);\n        return;\n      }\n\n      var expando = listener[EXPANDO_KEY] || (listener[EXPANDO_KEY] = {});\n      var proxies = expando.proxies || (expando.proxies = {});\n\n      var proxy = proxies[chart.id + '_' + type] = function (event) {\n        listener(fromNativeEvent(event, chart));\n      };\n\n      addListener(canvas, type, proxy);\n    },\n    removeEventListener: function removeEventListener(chart, type, listener) {\n      var canvas = chart.canvas;\n\n      if (type === 'resize') {\n        // Note: the resize event is not supported on all browsers.\n        removeResizeListener(canvas);\n        return;\n      }\n\n      var expando = listener[EXPANDO_KEY] || {};\n      var proxies = expando.proxies || {};\n      var proxy = proxies[chart.id + '_' + type];\n\n      if (!proxy) {\n        return;\n      }\n\n      removeListener(canvas, type, proxy);\n    }\n  }; // DEPRECATIONS\n\n  /**\n   * Provided for backward compatibility, use EventTarget.addEventListener instead.\n   * EventTarget.addEventListener compatibility: Chrome, Opera 7, Safari, FF1.5+, IE9+\n   * @see https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener\n   * @function Chart.helpers.addEvent\n   * @deprecated since version 2.7.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers$1.addEvent = addListener;\n  /**\n   * Provided for backward compatibility, use EventTarget.removeEventListener instead.\n   * EventTarget.removeEventListener compatibility: Chrome, Opera 7, Safari, FF1.5+, IE9+\n   * @see https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/removeEventListener\n   * @function Chart.helpers.removeEvent\n   * @deprecated since version 2.7.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers$1.removeEvent = removeListener; // @TODO Make possible to select another platform at build time.\n\n  var implementation = platform_dom$2._enabled ? platform_dom$2 : platform_basic;\n  /**\n   * @namespace Chart.platform\n   * @see https://chartjs.gitbooks.io/proposals/content/Platform.html\n   * @since 2.4.0\n   */\n\n  var platform = helpers$1.extend({\n    /**\n     * @since 2.7.0\n     */\n    initialize: function initialize() {},\n\n    /**\n     * Called at chart construction time, returns a context2d instance implementing\n     * the [W3C Canvas 2D Context API standard]{@link https://www.w3.org/TR/2dcontext/}.\n     * @param {*} item - The native item from which to acquire context (platform specific)\n     * @param {object} options - The chart options\n     * @returns {CanvasRenderingContext2D} context2d instance\n     */\n    acquireContext: function acquireContext() {},\n\n    /**\n     * Called at chart destruction time, releases any resources associated to the context\n     * previously returned by the acquireContext() method.\n     * @param {CanvasRenderingContext2D} context - The context2d instance\n     * @returns {boolean} true if the method succeeded, else false\n     */\n    releaseContext: function releaseContext() {},\n\n    /**\n     * Registers the specified listener on the given chart.\n     * @param {Chart} chart - Chart from which to listen for event\n     * @param {string} type - The ({@link IEvent}) type to listen for\n     * @param {function} listener - Receives a notification (an object that implements\n     * the {@link IEvent} interface) when an event of the specified type occurs.\n     */\n    addEventListener: function addEventListener() {},\n\n    /**\n     * Removes the specified listener previously registered with addEventListener.\n     * @param {Chart} chart - Chart from which to remove the listener\n     * @param {string} type - The ({@link IEvent}) type to remove\n     * @param {function} listener - The listener function to remove from the event target.\n     */\n    removeEventListener: function removeEventListener() {}\n  }, implementation);\n\n  core_defaults._set('global', {\n    plugins: {}\n  });\n  /**\n   * The plugin service singleton\n   * @namespace Chart.plugins\n   * @since 2.1.0\n   */\n\n\n  var core_plugins = {\n    /**\n     * Globally registered plugins.\n     * @private\n     */\n    _plugins: [],\n\n    /**\n     * This identifier is used to invalidate the descriptors cache attached to each chart\n     * when a global plugin is registered or unregistered. In this case, the cache ID is\n     * incremented and descriptors are regenerated during following API calls.\n     * @private\n     */\n    _cacheId: 0,\n\n    /**\n     * Registers the given plugin(s) if not already registered.\n     * @param {IPlugin[]|IPlugin} plugins plugin instance(s).\n     */\n    register: function register(plugins) {\n      var p = this._plugins;\n      [].concat(plugins).forEach(function (plugin) {\n        if (p.indexOf(plugin) === -1) {\n          p.push(plugin);\n        }\n      });\n      this._cacheId++;\n    },\n\n    /**\n     * Unregisters the given plugin(s) only if registered.\n     * @param {IPlugin[]|IPlugin} plugins plugin instance(s).\n     */\n    unregister: function unregister(plugins) {\n      var p = this._plugins;\n      [].concat(plugins).forEach(function (plugin) {\n        var idx = p.indexOf(plugin);\n\n        if (idx !== -1) {\n          p.splice(idx, 1);\n        }\n      });\n      this._cacheId++;\n    },\n\n    /**\n     * Remove all registered plugins.\n     * @since 2.1.5\n     */\n    clear: function clear() {\n      this._plugins = [];\n      this._cacheId++;\n    },\n\n    /**\n     * Returns the number of registered plugins?\n     * @returns {number}\n     * @since 2.1.5\n     */\n    count: function count() {\n      return this._plugins.length;\n    },\n\n    /**\n     * Returns all registered plugin instances.\n     * @returns {IPlugin[]} array of plugin objects.\n     * @since 2.1.5\n     */\n    getAll: function getAll() {\n      return this._plugins;\n    },\n\n    /**\n     * Calls enabled plugins for `chart` on the specified hook and with the given args.\n     * This method immediately returns as soon as a plugin explicitly returns false. The\n     * returned value can be used, for instance, to interrupt the current action.\n     * @param {Chart} chart - The chart instance for which plugins should be called.\n     * @param {string} hook - The name of the plugin method to call (e.g. 'beforeUpdate').\n     * @param {Array} [args] - Extra arguments to apply to the hook call.\n     * @returns {boolean} false if any of the plugins return false, else returns true.\n     */\n    notify: function notify(chart, hook, args) {\n      var descriptors = this.descriptors(chart);\n      var ilen = descriptors.length;\n      var i, descriptor, plugin, params, method;\n\n      for (i = 0; i < ilen; ++i) {\n        descriptor = descriptors[i];\n        plugin = descriptor.plugin;\n        method = plugin[hook];\n\n        if (typeof method === 'function') {\n          params = [chart].concat(args || []);\n          params.push(descriptor.options);\n\n          if (method.apply(plugin, params) === false) {\n            return false;\n          }\n        }\n      }\n\n      return true;\n    },\n\n    /**\n     * Returns descriptors of enabled plugins for the given chart.\n     * @returns {object[]} [{ plugin, options }]\n     * @private\n     */\n    descriptors: function descriptors(chart) {\n      var cache = chart.$plugins || (chart.$plugins = {});\n\n      if (cache.id === this._cacheId) {\n        return cache.descriptors;\n      }\n\n      var plugins = [];\n      var descriptors = [];\n      var config = chart && chart.config || {};\n      var options = config.options && config.options.plugins || {};\n\n      this._plugins.concat(config.plugins || []).forEach(function (plugin) {\n        var idx = plugins.indexOf(plugin);\n\n        if (idx !== -1) {\n          return;\n        }\n\n        var id = plugin.id;\n        var opts = options[id];\n\n        if (opts === false) {\n          return;\n        }\n\n        if (opts === true) {\n          opts = helpers$1.clone(core_defaults.global.plugins[id]);\n        }\n\n        plugins.push(plugin);\n        descriptors.push({\n          plugin: plugin,\n          options: opts || {}\n        });\n      });\n\n      cache.descriptors = descriptors;\n      cache.id = this._cacheId;\n      return descriptors;\n    },\n\n    /**\n     * Invalidates cache for the given chart: descriptors hold a reference on plugin option,\n     * but in some cases, this reference can be changed by the user when updating options.\n     * https://github.com/chartjs/Chart.js/issues/5111#issuecomment-355934167\n     * @private\n     */\n    _invalidate: function _invalidate(chart) {\n      delete chart.$plugins;\n    }\n  };\n  var core_scaleService = {\n    // Scale registration object. Extensions can register new scale types (such as log or DB scales) and then\n    // use the new chart options to grab the correct scale\n    constructors: {},\n    // Use a registration function so that we can move to an ES6 map when we no longer need to support\n    // old browsers\n    // Scale config defaults\n    defaults: {},\n    registerScaleType: function registerScaleType(type, scaleConstructor, scaleDefaults) {\n      this.constructors[type] = scaleConstructor;\n      this.defaults[type] = helpers$1.clone(scaleDefaults);\n    },\n    getScaleConstructor: function getScaleConstructor(type) {\n      return this.constructors.hasOwnProperty(type) ? this.constructors[type] : undefined;\n    },\n    getScaleDefaults: function getScaleDefaults(type) {\n      // Return the scale defaults merged with the global settings so that we always use the latest ones\n      return this.defaults.hasOwnProperty(type) ? helpers$1.merge({}, [core_defaults.scale, this.defaults[type]]) : {};\n    },\n    updateScaleDefaults: function updateScaleDefaults(type, additions) {\n      var me = this;\n\n      if (me.defaults.hasOwnProperty(type)) {\n        me.defaults[type] = helpers$1.extend(me.defaults[type], additions);\n      }\n    },\n    addScalesToLayout: function addScalesToLayout(chart) {\n      // Adds each scale to the chart.boxes array to be sized accordingly\n      helpers$1.each(chart.scales, function (scale) {\n        // Set ILayoutItem parameters for backwards compatibility\n        scale.fullWidth = scale.options.fullWidth;\n        scale.position = scale.options.position;\n        scale.weight = scale.options.weight;\n        core_layouts.addBox(chart, scale);\n      });\n    }\n  };\n  var valueOrDefault$7 = helpers$1.valueOrDefault;\n\n  core_defaults._set('global', {\n    tooltips: {\n      enabled: true,\n      custom: null,\n      mode: 'nearest',\n      position: 'average',\n      intersect: true,\n      backgroundColor: 'rgba(0,0,0,0.8)',\n      titleFontStyle: 'bold',\n      titleSpacing: 2,\n      titleMarginBottom: 6,\n      titleFontColor: '#fff',\n      titleAlign: 'left',\n      bodySpacing: 2,\n      bodyFontColor: '#fff',\n      bodyAlign: 'left',\n      footerFontStyle: 'bold',\n      footerSpacing: 2,\n      footerMarginTop: 6,\n      footerFontColor: '#fff',\n      footerAlign: 'left',\n      yPadding: 6,\n      xPadding: 6,\n      caretPadding: 2,\n      caretSize: 5,\n      cornerRadius: 6,\n      multiKeyBackground: '#fff',\n      displayColors: true,\n      borderColor: 'rgba(0,0,0,0)',\n      borderWidth: 0,\n      callbacks: {\n        // Args are: (tooltipItems, data)\n        beforeTitle: helpers$1.noop,\n        title: function title(tooltipItems, data) {\n          var title = '';\n          var labels = data.labels;\n          var labelCount = labels ? labels.length : 0;\n\n          if (tooltipItems.length > 0) {\n            var item = tooltipItems[0];\n\n            if (item.label) {\n              title = item.label;\n            } else if (item.xLabel) {\n              title = item.xLabel;\n            } else if (labelCount > 0 && item.index < labelCount) {\n              title = labels[item.index];\n            }\n          }\n\n          return title;\n        },\n        afterTitle: helpers$1.noop,\n        // Args are: (tooltipItems, data)\n        beforeBody: helpers$1.noop,\n        // Args are: (tooltipItem, data)\n        beforeLabel: helpers$1.noop,\n        label: function label(tooltipItem, data) {\n          var label = data.datasets[tooltipItem.datasetIndex].label || '';\n\n          if (label) {\n            label += ': ';\n          }\n\n          if (!helpers$1.isNullOrUndef(tooltipItem.value)) {\n            label += tooltipItem.value;\n          } else {\n            label += tooltipItem.yLabel;\n          }\n\n          return label;\n        },\n        labelColor: function labelColor(tooltipItem, chart) {\n          var meta = chart.getDatasetMeta(tooltipItem.datasetIndex);\n          var activeElement = meta.data[tooltipItem.index];\n          var view = activeElement._view;\n          return {\n            borderColor: view.borderColor,\n            backgroundColor: view.backgroundColor\n          };\n        },\n        labelTextColor: function labelTextColor() {\n          return this._options.bodyFontColor;\n        },\n        afterLabel: helpers$1.noop,\n        // Args are: (tooltipItems, data)\n        afterBody: helpers$1.noop,\n        // Args are: (tooltipItems, data)\n        beforeFooter: helpers$1.noop,\n        footer: helpers$1.noop,\n        afterFooter: helpers$1.noop\n      }\n    }\n  });\n\n  var positioners = {\n    /**\n     * Average mode places the tooltip at the average position of the elements shown\n     * @function Chart.Tooltip.positioners.average\n     * @param elements {ChartElement[]} the elements being displayed in the tooltip\n     * @returns {object} tooltip position\n     */\n    average: function average(elements) {\n      if (!elements.length) {\n        return false;\n      }\n\n      var i, len;\n      var x = 0;\n      var y = 0;\n      var count = 0;\n\n      for (i = 0, len = elements.length; i < len; ++i) {\n        var el = elements[i];\n\n        if (el && el.hasValue()) {\n          var pos = el.tooltipPosition();\n          x += pos.x;\n          y += pos.y;\n          ++count;\n        }\n      }\n\n      return {\n        x: x / count,\n        y: y / count\n      };\n    },\n\n    /**\n     * Gets the tooltip position nearest of the item nearest to the event position\n     * @function Chart.Tooltip.positioners.nearest\n     * @param elements {Chart.Element[]} the tooltip elements\n     * @param eventPosition {object} the position of the event in canvas coordinates\n     * @returns {object} the tooltip position\n     */\n    nearest: function nearest(elements, eventPosition) {\n      var x = eventPosition.x;\n      var y = eventPosition.y;\n      var minDistance = Number.POSITIVE_INFINITY;\n      var i, len, nearestElement;\n\n      for (i = 0, len = elements.length; i < len; ++i) {\n        var el = elements[i];\n\n        if (el && el.hasValue()) {\n          var center = el.getCenterPoint();\n          var d = helpers$1.distanceBetweenPoints(eventPosition, center);\n\n          if (d < minDistance) {\n            minDistance = d;\n            nearestElement = el;\n          }\n        }\n      }\n\n      if (nearestElement) {\n        var tp = nearestElement.tooltipPosition();\n        x = tp.x;\n        y = tp.y;\n      }\n\n      return {\n        x: x,\n        y: y\n      };\n    }\n  }; // Helper to push or concat based on if the 2nd parameter is an array or not\n\n  function pushOrConcat(base, toPush) {\n    if (toPush) {\n      if (helpers$1.isArray(toPush)) {\n        // base = base.concat(toPush);\n        Array.prototype.push.apply(base, toPush);\n      } else {\n        base.push(toPush);\n      }\n    }\n\n    return base;\n  }\n  /**\n   * Returns array of strings split by newline\n   * @param {string} value - The value to split by newline.\n   * @returns {string[]} value if newline present - Returned from String split() method\n   * @function\n   */\n\n\n  function splitNewlines(str) {\n    if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n      return str.split('\\n');\n    }\n\n    return str;\n  }\n  /**\n   * Private helper to create a tooltip item model\n   * @param element - the chart element (point, arc, bar) to create the tooltip item for\n   * @return new tooltip item\n   */\n\n\n  function createTooltipItem(element) {\n    var xScale = element._xScale;\n    var yScale = element._yScale || element._scale; // handle radar || polarArea charts\n\n    var index = element._index;\n    var datasetIndex = element._datasetIndex;\n\n    var controller = element._chart.getDatasetMeta(datasetIndex).controller;\n\n    var indexScale = controller._getIndexScale();\n\n    var valueScale = controller._getValueScale();\n\n    return {\n      xLabel: xScale ? xScale.getLabelForIndex(index, datasetIndex) : '',\n      yLabel: yScale ? yScale.getLabelForIndex(index, datasetIndex) : '',\n      label: indexScale ? '' + indexScale.getLabelForIndex(index, datasetIndex) : '',\n      value: valueScale ? '' + valueScale.getLabelForIndex(index, datasetIndex) : '',\n      index: index,\n      datasetIndex: datasetIndex,\n      x: element._model.x,\n      y: element._model.y\n    };\n  }\n  /**\n   * Helper to get the reset model for the tooltip\n   * @param tooltipOpts {object} the tooltip options\n   */\n\n\n  function getBaseModel(tooltipOpts) {\n    var globalDefaults = core_defaults.global;\n    return {\n      // Positioning\n      xPadding: tooltipOpts.xPadding,\n      yPadding: tooltipOpts.yPadding,\n      xAlign: tooltipOpts.xAlign,\n      yAlign: tooltipOpts.yAlign,\n      // Body\n      bodyFontColor: tooltipOpts.bodyFontColor,\n      _bodyFontFamily: valueOrDefault$7(tooltipOpts.bodyFontFamily, globalDefaults.defaultFontFamily),\n      _bodyFontStyle: valueOrDefault$7(tooltipOpts.bodyFontStyle, globalDefaults.defaultFontStyle),\n      _bodyAlign: tooltipOpts.bodyAlign,\n      bodyFontSize: valueOrDefault$7(tooltipOpts.bodyFontSize, globalDefaults.defaultFontSize),\n      bodySpacing: tooltipOpts.bodySpacing,\n      // Title\n      titleFontColor: tooltipOpts.titleFontColor,\n      _titleFontFamily: valueOrDefault$7(tooltipOpts.titleFontFamily, globalDefaults.defaultFontFamily),\n      _titleFontStyle: valueOrDefault$7(tooltipOpts.titleFontStyle, globalDefaults.defaultFontStyle),\n      titleFontSize: valueOrDefault$7(tooltipOpts.titleFontSize, globalDefaults.defaultFontSize),\n      _titleAlign: tooltipOpts.titleAlign,\n      titleSpacing: tooltipOpts.titleSpacing,\n      titleMarginBottom: tooltipOpts.titleMarginBottom,\n      // Footer\n      footerFontColor: tooltipOpts.footerFontColor,\n      _footerFontFamily: valueOrDefault$7(tooltipOpts.footerFontFamily, globalDefaults.defaultFontFamily),\n      _footerFontStyle: valueOrDefault$7(tooltipOpts.footerFontStyle, globalDefaults.defaultFontStyle),\n      footerFontSize: valueOrDefault$7(tooltipOpts.footerFontSize, globalDefaults.defaultFontSize),\n      _footerAlign: tooltipOpts.footerAlign,\n      footerSpacing: tooltipOpts.footerSpacing,\n      footerMarginTop: tooltipOpts.footerMarginTop,\n      // Appearance\n      caretSize: tooltipOpts.caretSize,\n      cornerRadius: tooltipOpts.cornerRadius,\n      backgroundColor: tooltipOpts.backgroundColor,\n      opacity: 0,\n      legendColorBackground: tooltipOpts.multiKeyBackground,\n      displayColors: tooltipOpts.displayColors,\n      borderColor: tooltipOpts.borderColor,\n      borderWidth: tooltipOpts.borderWidth\n    };\n  }\n  /**\n   * Get the size of the tooltip\n   */\n\n\n  function getTooltipSize(tooltip, model) {\n    var ctx = tooltip._chart.ctx;\n    var height = model.yPadding * 2; // Tooltip Padding\n\n    var width = 0; // Count of all lines in the body\n\n    var body = model.body;\n    var combinedBodyLength = body.reduce(function (count, bodyItem) {\n      return count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length;\n    }, 0);\n    combinedBodyLength += model.beforeBody.length + model.afterBody.length;\n    var titleLineCount = model.title.length;\n    var footerLineCount = model.footer.length;\n    var titleFontSize = model.titleFontSize;\n    var bodyFontSize = model.bodyFontSize;\n    var footerFontSize = model.footerFontSize;\n    height += titleLineCount * titleFontSize; // Title Lines\n\n    height += titleLineCount ? (titleLineCount - 1) * model.titleSpacing : 0; // Title Line Spacing\n\n    height += titleLineCount ? model.titleMarginBottom : 0; // Title's bottom Margin\n\n    height += combinedBodyLength * bodyFontSize; // Body Lines\n\n    height += combinedBodyLength ? (combinedBodyLength - 1) * model.bodySpacing : 0; // Body Line Spacing\n\n    height += footerLineCount ? model.footerMarginTop : 0; // Footer Margin\n\n    height += footerLineCount * footerFontSize; // Footer Lines\n\n    height += footerLineCount ? (footerLineCount - 1) * model.footerSpacing : 0; // Footer Line Spacing\n    // Title width\n\n    var widthPadding = 0;\n\n    var maxLineWidth = function maxLineWidth(line) {\n      width = Math.max(width, ctx.measureText(line).width + widthPadding);\n    };\n\n    ctx.font = helpers$1.fontString(titleFontSize, model._titleFontStyle, model._titleFontFamily);\n    helpers$1.each(model.title, maxLineWidth); // Body width\n\n    ctx.font = helpers$1.fontString(bodyFontSize, model._bodyFontStyle, model._bodyFontFamily);\n    helpers$1.each(model.beforeBody.concat(model.afterBody), maxLineWidth); // Body lines may include some extra width due to the color box\n\n    widthPadding = model.displayColors ? bodyFontSize + 2 : 0;\n    helpers$1.each(body, function (bodyItem) {\n      helpers$1.each(bodyItem.before, maxLineWidth);\n      helpers$1.each(bodyItem.lines, maxLineWidth);\n      helpers$1.each(bodyItem.after, maxLineWidth);\n    }); // Reset back to 0\n\n    widthPadding = 0; // Footer width\n\n    ctx.font = helpers$1.fontString(footerFontSize, model._footerFontStyle, model._footerFontFamily);\n    helpers$1.each(model.footer, maxLineWidth); // Add padding\n\n    width += 2 * model.xPadding;\n    return {\n      width: width,\n      height: height\n    };\n  }\n  /**\n   * Helper to get the alignment of a tooltip given the size\n   */\n\n\n  function determineAlignment(tooltip, size) {\n    var model = tooltip._model;\n    var chart = tooltip._chart;\n    var chartArea = tooltip._chart.chartArea;\n    var xAlign = 'center';\n    var yAlign = 'center';\n\n    if (model.y < size.height) {\n      yAlign = 'top';\n    } else if (model.y > chart.height - size.height) {\n      yAlign = 'bottom';\n    }\n\n    var lf, rf; // functions to determine left, right alignment\n\n    var olf, orf; // functions to determine if left/right alignment causes tooltip to go outside chart\n\n    var yf; // function to get the y alignment if the tooltip goes outside of the left or right edges\n\n    var midX = (chartArea.left + chartArea.right) / 2;\n    var midY = (chartArea.top + chartArea.bottom) / 2;\n\n    if (yAlign === 'center') {\n      lf = function lf(x) {\n        return x <= midX;\n      };\n\n      rf = function rf(x) {\n        return x > midX;\n      };\n    } else {\n      lf = function lf(x) {\n        return x <= size.width / 2;\n      };\n\n      rf = function rf(x) {\n        return x >= chart.width - size.width / 2;\n      };\n    }\n\n    olf = function olf(x) {\n      return x + size.width + model.caretSize + model.caretPadding > chart.width;\n    };\n\n    orf = function orf(x) {\n      return x - size.width - model.caretSize - model.caretPadding < 0;\n    };\n\n    yf = function yf(y) {\n      return y <= midY ? 'top' : 'bottom';\n    };\n\n    if (lf(model.x)) {\n      xAlign = 'left'; // Is tooltip too wide and goes over the right side of the chart.?\n\n      if (olf(model.x)) {\n        xAlign = 'center';\n        yAlign = yf(model.y);\n      }\n    } else if (rf(model.x)) {\n      xAlign = 'right'; // Is tooltip too wide and goes outside left edge of canvas?\n\n      if (orf(model.x)) {\n        xAlign = 'center';\n        yAlign = yf(model.y);\n      }\n    }\n\n    var opts = tooltip._options;\n    return {\n      xAlign: opts.xAlign ? opts.xAlign : xAlign,\n      yAlign: opts.yAlign ? opts.yAlign : yAlign\n    };\n  }\n  /**\n   * Helper to get the location a tooltip needs to be placed at given the initial position (via the vm) and the size and alignment\n   */\n\n\n  function getBackgroundPoint(vm, size, alignment, chart) {\n    // Background Position\n    var x = vm.x;\n    var y = vm.y;\n    var caretSize = vm.caretSize;\n    var caretPadding = vm.caretPadding;\n    var cornerRadius = vm.cornerRadius;\n    var xAlign = alignment.xAlign;\n    var yAlign = alignment.yAlign;\n    var paddingAndSize = caretSize + caretPadding;\n    var radiusAndPadding = cornerRadius + caretPadding;\n\n    if (xAlign === 'right') {\n      x -= size.width;\n    } else if (xAlign === 'center') {\n      x -= size.width / 2;\n\n      if (x + size.width > chart.width) {\n        x = chart.width - size.width;\n      }\n\n      if (x < 0) {\n        x = 0;\n      }\n    }\n\n    if (yAlign === 'top') {\n      y += paddingAndSize;\n    } else if (yAlign === 'bottom') {\n      y -= size.height + paddingAndSize;\n    } else {\n      y -= size.height / 2;\n    }\n\n    if (yAlign === 'center') {\n      if (xAlign === 'left') {\n        x += paddingAndSize;\n      } else if (xAlign === 'right') {\n        x -= paddingAndSize;\n      }\n    } else if (xAlign === 'left') {\n      x -= radiusAndPadding;\n    } else if (xAlign === 'right') {\n      x += radiusAndPadding;\n    }\n\n    return {\n      x: x,\n      y: y\n    };\n  }\n\n  function getAlignedX(vm, align) {\n    return align === 'center' ? vm.x + vm.width / 2 : align === 'right' ? vm.x + vm.width - vm.xPadding : vm.x + vm.xPadding;\n  }\n  /**\n   * Helper to build before and after body lines\n   */\n\n\n  function getBeforeAfterBodyLines(callback) {\n    return pushOrConcat([], splitNewlines(callback));\n  }\n\n  var exports$3 = core_element.extend({\n    initialize: function initialize() {\n      this._model = getBaseModel(this._options);\n      this._lastActive = [];\n    },\n    // Get the title\n    // Args are: (tooltipItem, data)\n    getTitle: function getTitle() {\n      var me = this;\n      var opts = me._options;\n      var callbacks = opts.callbacks;\n      var beforeTitle = callbacks.beforeTitle.apply(me, arguments);\n      var title = callbacks.title.apply(me, arguments);\n      var afterTitle = callbacks.afterTitle.apply(me, arguments);\n      var lines = [];\n      lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n      lines = pushOrConcat(lines, splitNewlines(title));\n      lines = pushOrConcat(lines, splitNewlines(afterTitle));\n      return lines;\n    },\n    // Args are: (tooltipItem, data)\n    getBeforeBody: function getBeforeBody() {\n      return getBeforeAfterBodyLines(this._options.callbacks.beforeBody.apply(this, arguments));\n    },\n    // Args are: (tooltipItem, data)\n    getBody: function getBody(tooltipItems, data) {\n      var me = this;\n      var callbacks = me._options.callbacks;\n      var bodyItems = [];\n      helpers$1.each(tooltipItems, function (tooltipItem) {\n        var bodyItem = {\n          before: [],\n          lines: [],\n          after: []\n        };\n        pushOrConcat(bodyItem.before, splitNewlines(callbacks.beforeLabel.call(me, tooltipItem, data)));\n        pushOrConcat(bodyItem.lines, callbacks.label.call(me, tooltipItem, data));\n        pushOrConcat(bodyItem.after, splitNewlines(callbacks.afterLabel.call(me, tooltipItem, data)));\n        bodyItems.push(bodyItem);\n      });\n      return bodyItems;\n    },\n    // Args are: (tooltipItem, data)\n    getAfterBody: function getAfterBody() {\n      return getBeforeAfterBodyLines(this._options.callbacks.afterBody.apply(this, arguments));\n    },\n    // Get the footer and beforeFooter and afterFooter lines\n    // Args are: (tooltipItem, data)\n    getFooter: function getFooter() {\n      var me = this;\n      var callbacks = me._options.callbacks;\n      var beforeFooter = callbacks.beforeFooter.apply(me, arguments);\n      var footer = callbacks.footer.apply(me, arguments);\n      var afterFooter = callbacks.afterFooter.apply(me, arguments);\n      var lines = [];\n      lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n      lines = pushOrConcat(lines, splitNewlines(footer));\n      lines = pushOrConcat(lines, splitNewlines(afterFooter));\n      return lines;\n    },\n    update: function update(changed) {\n      var me = this;\n      var opts = me._options; // Need to regenerate the model because its faster than using extend and it is necessary due to the optimization in Chart.Element.transition\n      // that does _view = _model if ease === 1. This causes the 2nd tooltip update to set properties in both the view and model at the same time\n      // which breaks any animations.\n\n      var existingModel = me._model;\n      var model = me._model = getBaseModel(opts);\n      var active = me._active;\n      var data = me._data; // In the case where active.length === 0 we need to keep these at existing values for good animations\n\n      var alignment = {\n        xAlign: existingModel.xAlign,\n        yAlign: existingModel.yAlign\n      };\n      var backgroundPoint = {\n        x: existingModel.x,\n        y: existingModel.y\n      };\n      var tooltipSize = {\n        width: existingModel.width,\n        height: existingModel.height\n      };\n      var tooltipPosition = {\n        x: existingModel.caretX,\n        y: existingModel.caretY\n      };\n      var i, len;\n\n      if (active.length) {\n        model.opacity = 1;\n        var labelColors = [];\n        var labelTextColors = [];\n        tooltipPosition = positioners[opts.position].call(me, active, me._eventPosition);\n        var tooltipItems = [];\n\n        for (i = 0, len = active.length; i < len; ++i) {\n          tooltipItems.push(createTooltipItem(active[i]));\n        } // If the user provided a filter function, use it to modify the tooltip items\n\n\n        if (opts.filter) {\n          tooltipItems = tooltipItems.filter(function (a) {\n            return opts.filter(a, data);\n          });\n        } // If the user provided a sorting function, use it to modify the tooltip items\n\n\n        if (opts.itemSort) {\n          tooltipItems = tooltipItems.sort(function (a, b) {\n            return opts.itemSort(a, b, data);\n          });\n        } // Determine colors for boxes\n\n\n        helpers$1.each(tooltipItems, function (tooltipItem) {\n          labelColors.push(opts.callbacks.labelColor.call(me, tooltipItem, me._chart));\n          labelTextColors.push(opts.callbacks.labelTextColor.call(me, tooltipItem, me._chart));\n        }); // Build the Text Lines\n\n        model.title = me.getTitle(tooltipItems, data);\n        model.beforeBody = me.getBeforeBody(tooltipItems, data);\n        model.body = me.getBody(tooltipItems, data);\n        model.afterBody = me.getAfterBody(tooltipItems, data);\n        model.footer = me.getFooter(tooltipItems, data); // Initial positioning and colors\n\n        model.x = tooltipPosition.x;\n        model.y = tooltipPosition.y;\n        model.caretPadding = opts.caretPadding;\n        model.labelColors = labelColors;\n        model.labelTextColors = labelTextColors; // data points\n\n        model.dataPoints = tooltipItems; // We need to determine alignment of the tooltip\n\n        tooltipSize = getTooltipSize(this, model);\n        alignment = determineAlignment(this, tooltipSize); // Final Size and Position\n\n        backgroundPoint = getBackgroundPoint(model, tooltipSize, alignment, me._chart);\n      } else {\n        model.opacity = 0;\n      }\n\n      model.xAlign = alignment.xAlign;\n      model.yAlign = alignment.yAlign;\n      model.x = backgroundPoint.x;\n      model.y = backgroundPoint.y;\n      model.width = tooltipSize.width;\n      model.height = tooltipSize.height; // Point where the caret on the tooltip points to\n\n      model.caretX = tooltipPosition.x;\n      model.caretY = tooltipPosition.y;\n      me._model = model;\n\n      if (changed && opts.custom) {\n        opts.custom.call(me, model);\n      }\n\n      return me;\n    },\n    drawCaret: function drawCaret(tooltipPoint, size) {\n      var ctx = this._chart.ctx;\n      var vm = this._view;\n      var caretPosition = this.getCaretPosition(tooltipPoint, size, vm);\n      ctx.lineTo(caretPosition.x1, caretPosition.y1);\n      ctx.lineTo(caretPosition.x2, caretPosition.y2);\n      ctx.lineTo(caretPosition.x3, caretPosition.y3);\n    },\n    getCaretPosition: function getCaretPosition(tooltipPoint, size, vm) {\n      var x1, x2, x3, y1, y2, y3;\n      var caretSize = vm.caretSize;\n      var cornerRadius = vm.cornerRadius;\n      var xAlign = vm.xAlign;\n      var yAlign = vm.yAlign;\n      var ptX = tooltipPoint.x;\n      var ptY = tooltipPoint.y;\n      var width = size.width;\n      var height = size.height;\n\n      if (yAlign === 'center') {\n        y2 = ptY + height / 2;\n\n        if (xAlign === 'left') {\n          x1 = ptX;\n          x2 = x1 - caretSize;\n          x3 = x1;\n          y1 = y2 + caretSize;\n          y3 = y2 - caretSize;\n        } else {\n          x1 = ptX + width;\n          x2 = x1 + caretSize;\n          x3 = x1;\n          y1 = y2 - caretSize;\n          y3 = y2 + caretSize;\n        }\n      } else {\n        if (xAlign === 'left') {\n          x2 = ptX + cornerRadius + caretSize;\n          x1 = x2 - caretSize;\n          x3 = x2 + caretSize;\n        } else if (xAlign === 'right') {\n          x2 = ptX + width - cornerRadius - caretSize;\n          x1 = x2 - caretSize;\n          x3 = x2 + caretSize;\n        } else {\n          x2 = vm.caretX;\n          x1 = x2 - caretSize;\n          x3 = x2 + caretSize;\n        }\n\n        if (yAlign === 'top') {\n          y1 = ptY;\n          y2 = y1 - caretSize;\n          y3 = y1;\n        } else {\n          y1 = ptY + height;\n          y2 = y1 + caretSize;\n          y3 = y1; // invert drawing order\n\n          var tmp = x3;\n          x3 = x1;\n          x1 = tmp;\n        }\n      }\n\n      return {\n        x1: x1,\n        x2: x2,\n        x3: x3,\n        y1: y1,\n        y2: y2,\n        y3: y3\n      };\n    },\n    drawTitle: function drawTitle(pt, vm, ctx) {\n      var title = vm.title;\n\n      if (title.length) {\n        pt.x = getAlignedX(vm, vm._titleAlign);\n        ctx.textAlign = vm._titleAlign;\n        ctx.textBaseline = 'top';\n        var titleFontSize = vm.titleFontSize;\n        var titleSpacing = vm.titleSpacing;\n        ctx.fillStyle = vm.titleFontColor;\n        ctx.font = helpers$1.fontString(titleFontSize, vm._titleFontStyle, vm._titleFontFamily);\n        var i, len;\n\n        for (i = 0, len = title.length; i < len; ++i) {\n          ctx.fillText(title[i], pt.x, pt.y);\n          pt.y += titleFontSize + titleSpacing; // Line Height and spacing\n\n          if (i + 1 === title.length) {\n            pt.y += vm.titleMarginBottom - titleSpacing; // If Last, add margin, remove spacing\n          }\n        }\n      }\n    },\n    drawBody: function drawBody(pt, vm, ctx) {\n      var bodyFontSize = vm.bodyFontSize;\n      var bodySpacing = vm.bodySpacing;\n      var bodyAlign = vm._bodyAlign;\n      var body = vm.body;\n      var drawColorBoxes = vm.displayColors;\n      var labelColors = vm.labelColors;\n      var xLinePadding = 0;\n      var colorX = drawColorBoxes ? getAlignedX(vm, 'left') : 0;\n      var textColor;\n      ctx.textAlign = bodyAlign;\n      ctx.textBaseline = 'top';\n      ctx.font = helpers$1.fontString(bodyFontSize, vm._bodyFontStyle, vm._bodyFontFamily);\n      pt.x = getAlignedX(vm, bodyAlign); // Before Body\n\n      var fillLineOfText = function fillLineOfText(line) {\n        ctx.fillText(line, pt.x + xLinePadding, pt.y);\n        pt.y += bodyFontSize + bodySpacing;\n      }; // Before body lines\n\n\n      ctx.fillStyle = vm.bodyFontColor;\n      helpers$1.each(vm.beforeBody, fillLineOfText);\n      xLinePadding = drawColorBoxes && bodyAlign !== 'right' ? bodyAlign === 'center' ? bodyFontSize / 2 + 1 : bodyFontSize + 2 : 0; // Draw body lines now\n\n      helpers$1.each(body, function (bodyItem, i) {\n        textColor = vm.labelTextColors[i];\n        ctx.fillStyle = textColor;\n        helpers$1.each(bodyItem.before, fillLineOfText);\n        helpers$1.each(bodyItem.lines, function (line) {\n          // Draw Legend-like boxes if needed\n          if (drawColorBoxes) {\n            // Fill a white rect so that colours merge nicely if the opacity is < 1\n            ctx.fillStyle = vm.legendColorBackground;\n            ctx.fillRect(colorX, pt.y, bodyFontSize, bodyFontSize); // Border\n\n            ctx.lineWidth = 1;\n            ctx.strokeStyle = labelColors[i].borderColor;\n            ctx.strokeRect(colorX, pt.y, bodyFontSize, bodyFontSize); // Inner square\n\n            ctx.fillStyle = labelColors[i].backgroundColor;\n            ctx.fillRect(colorX + 1, pt.y + 1, bodyFontSize - 2, bodyFontSize - 2);\n            ctx.fillStyle = textColor;\n          }\n\n          fillLineOfText(line);\n        });\n        helpers$1.each(bodyItem.after, fillLineOfText);\n      }); // Reset back to 0 for after body\n\n      xLinePadding = 0; // After body lines\n\n      helpers$1.each(vm.afterBody, fillLineOfText);\n      pt.y -= bodySpacing; // Remove last body spacing\n    },\n    drawFooter: function drawFooter(pt, vm, ctx) {\n      var footer = vm.footer;\n\n      if (footer.length) {\n        pt.x = getAlignedX(vm, vm._footerAlign);\n        pt.y += vm.footerMarginTop;\n        ctx.textAlign = vm._footerAlign;\n        ctx.textBaseline = 'top';\n        ctx.fillStyle = vm.footerFontColor;\n        ctx.font = helpers$1.fontString(vm.footerFontSize, vm._footerFontStyle, vm._footerFontFamily);\n        helpers$1.each(footer, function (line) {\n          ctx.fillText(line, pt.x, pt.y);\n          pt.y += vm.footerFontSize + vm.footerSpacing;\n        });\n      }\n    },\n    drawBackground: function drawBackground(pt, vm, ctx, tooltipSize) {\n      ctx.fillStyle = vm.backgroundColor;\n      ctx.strokeStyle = vm.borderColor;\n      ctx.lineWidth = vm.borderWidth;\n      var xAlign = vm.xAlign;\n      var yAlign = vm.yAlign;\n      var x = pt.x;\n      var y = pt.y;\n      var width = tooltipSize.width;\n      var height = tooltipSize.height;\n      var radius = vm.cornerRadius;\n      ctx.beginPath();\n      ctx.moveTo(x + radius, y);\n\n      if (yAlign === 'top') {\n        this.drawCaret(pt, tooltipSize);\n      }\n\n      ctx.lineTo(x + width - radius, y);\n      ctx.quadraticCurveTo(x + width, y, x + width, y + radius);\n\n      if (yAlign === 'center' && xAlign === 'right') {\n        this.drawCaret(pt, tooltipSize);\n      }\n\n      ctx.lineTo(x + width, y + height - radius);\n      ctx.quadraticCurveTo(x + width, y + height, x + width - radius, y + height);\n\n      if (yAlign === 'bottom') {\n        this.drawCaret(pt, tooltipSize);\n      }\n\n      ctx.lineTo(x + radius, y + height);\n      ctx.quadraticCurveTo(x, y + height, x, y + height - radius);\n\n      if (yAlign === 'center' && xAlign === 'left') {\n        this.drawCaret(pt, tooltipSize);\n      }\n\n      ctx.lineTo(x, y + radius);\n      ctx.quadraticCurveTo(x, y, x + radius, y);\n      ctx.closePath();\n      ctx.fill();\n\n      if (vm.borderWidth > 0) {\n        ctx.stroke();\n      }\n    },\n    draw: function draw() {\n      var ctx = this._chart.ctx;\n      var vm = this._view;\n\n      if (vm.opacity === 0) {\n        return;\n      }\n\n      var tooltipSize = {\n        width: vm.width,\n        height: vm.height\n      };\n      var pt = {\n        x: vm.x,\n        y: vm.y\n      }; // IE11/Edge does not like very small opacities, so snap to 0\n\n      var opacity = Math.abs(vm.opacity < 1e-3) ? 0 : vm.opacity; // Truthy/falsey value for empty tooltip\n\n      var hasTooltipContent = vm.title.length || vm.beforeBody.length || vm.body.length || vm.afterBody.length || vm.footer.length;\n\n      if (this._options.enabled && hasTooltipContent) {\n        ctx.save();\n        ctx.globalAlpha = opacity; // Draw Background\n\n        this.drawBackground(pt, vm, ctx, tooltipSize); // Draw Title, Body, and Footer\n\n        pt.y += vm.yPadding; // Titles\n\n        this.drawTitle(pt, vm, ctx); // Body\n\n        this.drawBody(pt, vm, ctx); // Footer\n\n        this.drawFooter(pt, vm, ctx);\n        ctx.restore();\n      }\n    },\n\n    /**\n     * Handle an event\n     * @private\n     * @param {IEvent} event - The event to handle\n     * @returns {boolean} true if the tooltip changed\n     */\n    handleEvent: function handleEvent(e) {\n      var me = this;\n      var options = me._options;\n      var changed = false;\n      me._lastActive = me._lastActive || []; // Find Active Elements for tooltips\n\n      if (e.type === 'mouseout') {\n        me._active = [];\n      } else {\n        me._active = me._chart.getElementsAtEventForMode(e, options.mode, options);\n      } // Remember Last Actives\n\n\n      changed = !helpers$1.arrayEquals(me._active, me._lastActive); // Only handle target event on tooltip change\n\n      if (changed) {\n        me._lastActive = me._active;\n\n        if (options.enabled || options.custom) {\n          me._eventPosition = {\n            x: e.x,\n            y: e.y\n          };\n          me.update(true);\n          me.pivot();\n        }\n      }\n\n      return changed;\n    }\n  });\n  /**\n   * @namespace Chart.Tooltip.positioners\n   */\n\n  var positioners_1 = positioners;\n  var core_tooltip = exports$3;\n  core_tooltip.positioners = positioners_1;\n  var valueOrDefault$8 = helpers$1.valueOrDefault;\n\n  core_defaults._set('global', {\n    elements: {},\n    events: ['mousemove', 'mouseout', 'click', 'touchstart', 'touchmove'],\n    hover: {\n      onHover: null,\n      mode: 'nearest',\n      intersect: true,\n      animationDuration: 400\n    },\n    onClick: null,\n    maintainAspectRatio: true,\n    responsive: true,\n    responsiveAnimationDuration: 0\n  });\n  /**\n   * Recursively merge the given config objects representing the `scales` option\n   * by incorporating scale defaults in `xAxes` and `yAxes` array items, then\n   * returns a deep copy of the result, thus doesn't alter inputs.\n   */\n\n\n  function mergeScaleConfig()\n  /* config objects ... */\n  {\n    return helpers$1.merge({}, [].slice.call(arguments), {\n      merger: function merger(key, target, source, options) {\n        if (key === 'xAxes' || key === 'yAxes') {\n          var slen = source[key].length;\n          var i, type, scale;\n\n          if (!target[key]) {\n            target[key] = [];\n          }\n\n          for (i = 0; i < slen; ++i) {\n            scale = source[key][i];\n            type = valueOrDefault$8(scale.type, key === 'xAxes' ? 'category' : 'linear');\n\n            if (i >= target[key].length) {\n              target[key].push({});\n            }\n\n            if (!target[key][i].type || scale.type && scale.type !== target[key][i].type) {\n              // new/untyped scale or type changed: let's apply the new defaults\n              // then merge source scale to correctly overwrite the defaults.\n              helpers$1.merge(target[key][i], [core_scaleService.getScaleDefaults(type), scale]);\n            } else {\n              // scales type are the same\n              helpers$1.merge(target[key][i], scale);\n            }\n          }\n        } else {\n          helpers$1._merger(key, target, source, options);\n        }\n      }\n    });\n  }\n  /**\n   * Recursively merge the given config objects as the root options by handling\n   * default scale options for the `scales` and `scale` properties, then returns\n   * a deep copy of the result, thus doesn't alter inputs.\n   */\n\n\n  function mergeConfig()\n  /* config objects ... */\n  {\n    return helpers$1.merge({}, [].slice.call(arguments), {\n      merger: function merger(key, target, source, options) {\n        var tval = target[key] || {};\n        var sval = source[key];\n\n        if (key === 'scales') {\n          // scale config merging is complex. Add our own function here for that\n          target[key] = mergeScaleConfig(tval, sval);\n        } else if (key === 'scale') {\n          // used in polar area & radar charts since there is only one scale\n          target[key] = helpers$1.merge(tval, [core_scaleService.getScaleDefaults(sval.type), sval]);\n        } else {\n          helpers$1._merger(key, target, source, options);\n        }\n      }\n    });\n  }\n\n  function initConfig(config) {\n    config = config || {}; // Do NOT use mergeConfig for the data object because this method merges arrays\n    // and so would change references to labels and datasets, preventing data updates.\n\n    var data = config.data = config.data || {};\n    data.datasets = data.datasets || [];\n    data.labels = data.labels || [];\n    config.options = mergeConfig(core_defaults.global, core_defaults[config.type], config.options || {});\n    return config;\n  }\n\n  function updateConfig(chart) {\n    var newOptions = chart.options;\n    helpers$1.each(chart.scales, function (scale) {\n      core_layouts.removeBox(chart, scale);\n    });\n    newOptions = mergeConfig(core_defaults.global, core_defaults[chart.config.type], newOptions);\n    chart.options = chart.config.options = newOptions;\n    chart.ensureScalesHaveIDs();\n    chart.buildOrUpdateScales(); // Tooltip\n\n    chart.tooltip._options = newOptions.tooltips;\n    chart.tooltip.initialize();\n  }\n\n  function positionIsHorizontal(position) {\n    return position === 'top' || position === 'bottom';\n  }\n\n  var Chart = function Chart(item, config) {\n    this.construct(item, config);\n    return this;\n  };\n\n  helpers$1.extend(Chart.prototype,\n  /** @lends Chart */\n  {\n    /**\n     * @private\n     */\n    construct: function construct(item, config) {\n      var me = this;\n      config = initConfig(config);\n      var context = platform.acquireContext(item, config);\n      var canvas = context && context.canvas;\n      var height = canvas && canvas.height;\n      var width = canvas && canvas.width;\n      me.id = helpers$1.uid();\n      me.ctx = context;\n      me.canvas = canvas;\n      me.config = config;\n      me.width = width;\n      me.height = height;\n      me.aspectRatio = height ? width / height : null;\n      me.options = config.options;\n      me._bufferedRender = false;\n      /**\n       * Provided for backward compatibility, Chart and Chart.Controller have been merged,\n       * the \"instance\" still need to be defined since it might be called from plugins.\n       * @prop Chart#chart\n       * @deprecated since version 2.6.0\n       * @todo remove at version 3\n       * @private\n       */\n\n      me.chart = me;\n      me.controller = me; // chart.chart.controller #inception\n      // Add the chart instance to the global namespace\n\n      Chart.instances[me.id] = me; // Define alias to the config data: `chart.data === chart.config.data`\n\n      Object.defineProperty(me, 'data', {\n        get: function get() {\n          return me.config.data;\n        },\n        set: function set(value) {\n          me.config.data = value;\n        }\n      });\n\n      if (!context || !canvas) {\n        // The given item is not a compatible context2d element, let's return before finalizing\n        // the chart initialization but after setting basic chart / controller properties that\n        // can help to figure out that the chart is not valid (e.g chart.canvas !== null);\n        // https://github.com/chartjs/Chart.js/issues/2807\n        console.error(\"Failed to create chart: can't acquire context from the given item\");\n        return;\n      }\n\n      me.initialize();\n      me.update();\n    },\n\n    /**\n     * @private\n     */\n    initialize: function initialize() {\n      var me = this; // Before init plugin notification\n\n      core_plugins.notify(me, 'beforeInit');\n      helpers$1.retinaScale(me, me.options.devicePixelRatio);\n      me.bindEvents();\n\n      if (me.options.responsive) {\n        // Initial resize before chart draws (must be silent to preserve initial animations).\n        me.resize(true);\n      } // Make sure scales have IDs and are built before we build any controllers.\n\n\n      me.ensureScalesHaveIDs();\n      me.buildOrUpdateScales();\n      me.initToolTip(); // After init plugin notification\n\n      core_plugins.notify(me, 'afterInit');\n      return me;\n    },\n    clear: function clear() {\n      helpers$1.canvas.clear(this);\n      return this;\n    },\n    stop: function stop() {\n      // Stops any current animation loop occurring\n      core_animations.cancelAnimation(this);\n      return this;\n    },\n    resize: function resize(silent) {\n      var me = this;\n      var options = me.options;\n      var canvas = me.canvas;\n      var aspectRatio = options.maintainAspectRatio && me.aspectRatio || null; // the canvas render width and height will be casted to integers so make sure that\n      // the canvas display style uses the same integer values to avoid blurring effect.\n      // Set to 0 instead of canvas.size because the size defaults to 300x150 if the element is collapsed\n\n      var newWidth = Math.max(0, Math.floor(helpers$1.getMaximumWidth(canvas)));\n      var newHeight = Math.max(0, Math.floor(aspectRatio ? newWidth / aspectRatio : helpers$1.getMaximumHeight(canvas)));\n\n      if (me.width === newWidth && me.height === newHeight) {\n        return;\n      }\n\n      canvas.width = me.width = newWidth;\n      canvas.height = me.height = newHeight;\n      canvas.style.width = newWidth + 'px';\n      canvas.style.height = newHeight + 'px';\n      helpers$1.retinaScale(me, options.devicePixelRatio);\n\n      if (!silent) {\n        // Notify any plugins about the resize\n        var newSize = {\n          width: newWidth,\n          height: newHeight\n        };\n        core_plugins.notify(me, 'resize', [newSize]); // Notify of resize\n\n        if (options.onResize) {\n          options.onResize(me, newSize);\n        }\n\n        me.stop();\n        me.update({\n          duration: options.responsiveAnimationDuration\n        });\n      }\n    },\n    ensureScalesHaveIDs: function ensureScalesHaveIDs() {\n      var options = this.options;\n      var scalesOptions = options.scales || {};\n      var scaleOptions = options.scale;\n      helpers$1.each(scalesOptions.xAxes, function (xAxisOptions, index) {\n        xAxisOptions.id = xAxisOptions.id || 'x-axis-' + index;\n      });\n      helpers$1.each(scalesOptions.yAxes, function (yAxisOptions, index) {\n        yAxisOptions.id = yAxisOptions.id || 'y-axis-' + index;\n      });\n\n      if (scaleOptions) {\n        scaleOptions.id = scaleOptions.id || 'scale';\n      }\n    },\n\n    /**\n     * Builds a map of scale ID to scale object for future lookup.\n     */\n    buildOrUpdateScales: function buildOrUpdateScales() {\n      var me = this;\n      var options = me.options;\n      var scales = me.scales || {};\n      var items = [];\n      var updated = Object.keys(scales).reduce(function (obj, id) {\n        obj[id] = false;\n        return obj;\n      }, {});\n\n      if (options.scales) {\n        items = items.concat((options.scales.xAxes || []).map(function (xAxisOptions) {\n          return {\n            options: xAxisOptions,\n            dtype: 'category',\n            dposition: 'bottom'\n          };\n        }), (options.scales.yAxes || []).map(function (yAxisOptions) {\n          return {\n            options: yAxisOptions,\n            dtype: 'linear',\n            dposition: 'left'\n          };\n        }));\n      }\n\n      if (options.scale) {\n        items.push({\n          options: options.scale,\n          dtype: 'radialLinear',\n          isDefault: true,\n          dposition: 'chartArea'\n        });\n      }\n\n      helpers$1.each(items, function (item) {\n        var scaleOptions = item.options;\n        var id = scaleOptions.id;\n        var scaleType = valueOrDefault$8(scaleOptions.type, item.dtype);\n\n        if (positionIsHorizontal(scaleOptions.position) !== positionIsHorizontal(item.dposition)) {\n          scaleOptions.position = item.dposition;\n        }\n\n        updated[id] = true;\n        var scale = null;\n\n        if (id in scales && scales[id].type === scaleType) {\n          scale = scales[id];\n          scale.options = scaleOptions;\n          scale.ctx = me.ctx;\n          scale.chart = me;\n        } else {\n          var scaleClass = core_scaleService.getScaleConstructor(scaleType);\n\n          if (!scaleClass) {\n            return;\n          }\n\n          scale = new scaleClass({\n            id: id,\n            type: scaleType,\n            options: scaleOptions,\n            ctx: me.ctx,\n            chart: me\n          });\n          scales[scale.id] = scale;\n        }\n\n        scale.mergeTicksOptions(); // TODO(SB): I think we should be able to remove this custom case (options.scale)\n        // and consider it as a regular scale part of the \"scales\"\" map only! This would\n        // make the logic easier and remove some useless? custom code.\n\n        if (item.isDefault) {\n          me.scale = scale;\n        }\n      }); // clear up discarded scales\n\n      helpers$1.each(updated, function (hasUpdated, id) {\n        if (!hasUpdated) {\n          delete scales[id];\n        }\n      });\n      me.scales = scales;\n      core_scaleService.addScalesToLayout(this);\n    },\n    buildOrUpdateControllers: function buildOrUpdateControllers() {\n      var me = this;\n      var newControllers = [];\n      helpers$1.each(me.data.datasets, function (dataset, datasetIndex) {\n        var meta = me.getDatasetMeta(datasetIndex);\n        var type = dataset.type || me.config.type;\n\n        if (meta.type && meta.type !== type) {\n          me.destroyDatasetMeta(datasetIndex);\n          meta = me.getDatasetMeta(datasetIndex);\n        }\n\n        meta.type = type;\n\n        if (meta.controller) {\n          meta.controller.updateIndex(datasetIndex);\n          meta.controller.linkScales();\n        } else {\n          var ControllerClass = controllers[meta.type];\n\n          if (ControllerClass === undefined) {\n            throw new Error('\"' + meta.type + '\" is not a chart type.');\n          }\n\n          meta.controller = new ControllerClass(me, datasetIndex);\n          newControllers.push(meta.controller);\n        }\n      }, me);\n      return newControllers;\n    },\n\n    /**\n     * Reset the elements of all datasets\n     * @private\n     */\n    resetElements: function resetElements() {\n      var me = this;\n      helpers$1.each(me.data.datasets, function (dataset, datasetIndex) {\n        me.getDatasetMeta(datasetIndex).controller.reset();\n      }, me);\n    },\n\n    /**\n    * Resets the chart back to it's state before the initial animation\n    */\n    reset: function reset() {\n      this.resetElements();\n      this.tooltip.initialize();\n    },\n    update: function update(config) {\n      var me = this;\n\n      if (!config || typeof config !== 'object') {\n        // backwards compatibility\n        config = {\n          duration: config,\n          lazy: arguments[1]\n        };\n      }\n\n      updateConfig(me); // plugins options references might have change, let's invalidate the cache\n      // https://github.com/chartjs/Chart.js/issues/5111#issuecomment-355934167\n\n      core_plugins._invalidate(me);\n\n      if (core_plugins.notify(me, 'beforeUpdate') === false) {\n        return;\n      } // In case the entire data object changed\n\n\n      me.tooltip._data = me.data; // Make sure dataset controllers are updated and new controllers are reset\n\n      var newControllers = me.buildOrUpdateControllers(); // Make sure all dataset controllers have correct meta data counts\n\n      helpers$1.each(me.data.datasets, function (dataset, datasetIndex) {\n        me.getDatasetMeta(datasetIndex).controller.buildOrUpdateElements();\n      }, me);\n      me.updateLayout(); // Can only reset the new controllers after the scales have been updated\n\n      if (me.options.animation && me.options.animation.duration) {\n        helpers$1.each(newControllers, function (controller) {\n          controller.reset();\n        });\n      }\n\n      me.updateDatasets(); // Need to reset tooltip in case it is displayed with elements that are removed\n      // after update.\n\n      me.tooltip.initialize(); // Last active contains items that were previously in the tooltip.\n      // When we reset the tooltip, we need to clear it\n\n      me.lastActive = []; // Do this before render so that any plugins that need final scale updates can use it\n\n      core_plugins.notify(me, 'afterUpdate');\n\n      if (me._bufferedRender) {\n        me._bufferedRequest = {\n          duration: config.duration,\n          easing: config.easing,\n          lazy: config.lazy\n        };\n      } else {\n        me.render(config);\n      }\n    },\n\n    /**\n     * Updates the chart layout unless a plugin returns `false` to the `beforeLayout`\n     * hook, in which case, plugins will not be called on `afterLayout`.\n     * @private\n     */\n    updateLayout: function updateLayout() {\n      var me = this;\n\n      if (core_plugins.notify(me, 'beforeLayout') === false) {\n        return;\n      }\n\n      core_layouts.update(this, this.width, this.height);\n      /**\n       * Provided for backward compatibility, use `afterLayout` instead.\n       * @method IPlugin#afterScaleUpdate\n       * @deprecated since version 2.5.0\n       * @todo remove at version 3\n       * @private\n       */\n\n      core_plugins.notify(me, 'afterScaleUpdate');\n      core_plugins.notify(me, 'afterLayout');\n    },\n\n    /**\n     * Updates all datasets unless a plugin returns `false` to the `beforeDatasetsUpdate`\n     * hook, in which case, plugins will not be called on `afterDatasetsUpdate`.\n     * @private\n     */\n    updateDatasets: function updateDatasets() {\n      var me = this;\n\n      if (core_plugins.notify(me, 'beforeDatasetsUpdate') === false) {\n        return;\n      }\n\n      for (var i = 0, ilen = me.data.datasets.length; i < ilen; ++i) {\n        me.updateDataset(i);\n      }\n\n      core_plugins.notify(me, 'afterDatasetsUpdate');\n    },\n\n    /**\n     * Updates dataset at index unless a plugin returns `false` to the `beforeDatasetUpdate`\n     * hook, in which case, plugins will not be called on `afterDatasetUpdate`.\n     * @private\n     */\n    updateDataset: function updateDataset(index) {\n      var me = this;\n      var meta = me.getDatasetMeta(index);\n      var args = {\n        meta: meta,\n        index: index\n      };\n\n      if (core_plugins.notify(me, 'beforeDatasetUpdate', [args]) === false) {\n        return;\n      }\n\n      meta.controller.update();\n      core_plugins.notify(me, 'afterDatasetUpdate', [args]);\n    },\n    render: function render(config) {\n      var me = this;\n\n      if (!config || typeof config !== 'object') {\n        // backwards compatibility\n        config = {\n          duration: config,\n          lazy: arguments[1]\n        };\n      }\n\n      var animationOptions = me.options.animation;\n      var duration = valueOrDefault$8(config.duration, animationOptions && animationOptions.duration);\n      var lazy = config.lazy;\n\n      if (core_plugins.notify(me, 'beforeRender') === false) {\n        return;\n      }\n\n      var onComplete = function onComplete(animation) {\n        core_plugins.notify(me, 'afterRender');\n        helpers$1.callback(animationOptions && animationOptions.onComplete, [animation], me);\n      };\n\n      if (animationOptions && duration) {\n        var animation = new core_animation({\n          numSteps: duration / 16.66,\n          // 60 fps\n          easing: config.easing || animationOptions.easing,\n          render: function render(chart, animationObject) {\n            var easingFunction = helpers$1.easing.effects[animationObject.easing];\n            var currentStep = animationObject.currentStep;\n            var stepDecimal = currentStep / animationObject.numSteps;\n            chart.draw(easingFunction(stepDecimal), stepDecimal, currentStep);\n          },\n          onAnimationProgress: animationOptions.onProgress,\n          onAnimationComplete: onComplete\n        });\n        core_animations.addAnimation(me, animation, duration, lazy);\n      } else {\n        me.draw(); // See https://github.com/chartjs/Chart.js/issues/3781\n\n        onComplete(new core_animation({\n          numSteps: 0,\n          chart: me\n        }));\n      }\n\n      return me;\n    },\n    draw: function draw(easingValue) {\n      var me = this;\n      me.clear();\n\n      if (helpers$1.isNullOrUndef(easingValue)) {\n        easingValue = 1;\n      }\n\n      me.transition(easingValue);\n\n      if (me.width <= 0 || me.height <= 0) {\n        return;\n      }\n\n      if (core_plugins.notify(me, 'beforeDraw', [easingValue]) === false) {\n        return;\n      } // Draw all the scales\n\n\n      helpers$1.each(me.boxes, function (box) {\n        box.draw(me.chartArea);\n      }, me);\n      me.drawDatasets(easingValue);\n\n      me._drawTooltip(easingValue);\n\n      core_plugins.notify(me, 'afterDraw', [easingValue]);\n    },\n\n    /**\n     * @private\n     */\n    transition: function transition(easingValue) {\n      var me = this;\n\n      for (var i = 0, ilen = (me.data.datasets || []).length; i < ilen; ++i) {\n        if (me.isDatasetVisible(i)) {\n          me.getDatasetMeta(i).controller.transition(easingValue);\n        }\n      }\n\n      me.tooltip.transition(easingValue);\n    },\n\n    /**\n     * Draws all datasets unless a plugin returns `false` to the `beforeDatasetsDraw`\n     * hook, in which case, plugins will not be called on `afterDatasetsDraw`.\n     * @private\n     */\n    drawDatasets: function drawDatasets(easingValue) {\n      var me = this;\n\n      if (core_plugins.notify(me, 'beforeDatasetsDraw', [easingValue]) === false) {\n        return;\n      } // Draw datasets reversed to support proper line stacking\n\n\n      for (var i = (me.data.datasets || []).length - 1; i >= 0; --i) {\n        if (me.isDatasetVisible(i)) {\n          me.drawDataset(i, easingValue);\n        }\n      }\n\n      core_plugins.notify(me, 'afterDatasetsDraw', [easingValue]);\n    },\n\n    /**\n     * Draws dataset at index unless a plugin returns `false` to the `beforeDatasetDraw`\n     * hook, in which case, plugins will not be called on `afterDatasetDraw`.\n     * @private\n     */\n    drawDataset: function drawDataset(index, easingValue) {\n      var me = this;\n      var meta = me.getDatasetMeta(index);\n      var args = {\n        meta: meta,\n        index: index,\n        easingValue: easingValue\n      };\n\n      if (core_plugins.notify(me, 'beforeDatasetDraw', [args]) === false) {\n        return;\n      }\n\n      meta.controller.draw(easingValue);\n      core_plugins.notify(me, 'afterDatasetDraw', [args]);\n    },\n\n    /**\n     * Draws tooltip unless a plugin returns `false` to the `beforeTooltipDraw`\n     * hook, in which case, plugins will not be called on `afterTooltipDraw`.\n     * @private\n     */\n    _drawTooltip: function _drawTooltip(easingValue) {\n      var me = this;\n      var tooltip = me.tooltip;\n      var args = {\n        tooltip: tooltip,\n        easingValue: easingValue\n      };\n\n      if (core_plugins.notify(me, 'beforeTooltipDraw', [args]) === false) {\n        return;\n      }\n\n      tooltip.draw();\n      core_plugins.notify(me, 'afterTooltipDraw', [args]);\n    },\n\n    /**\n     * Get the single element that was clicked on\n     * @return An object containing the dataset index and element index of the matching element. Also contains the rectangle that was draw\n     */\n    getElementAtEvent: function getElementAtEvent(e) {\n      return core_interaction.modes.single(this, e);\n    },\n    getElementsAtEvent: function getElementsAtEvent(e) {\n      return core_interaction.modes.label(this, e, {\n        intersect: true\n      });\n    },\n    getElementsAtXAxis: function getElementsAtXAxis(e) {\n      return core_interaction.modes['x-axis'](this, e, {\n        intersect: true\n      });\n    },\n    getElementsAtEventForMode: function getElementsAtEventForMode(e, mode, options) {\n      var method = core_interaction.modes[mode];\n\n      if (typeof method === 'function') {\n        return method(this, e, options);\n      }\n\n      return [];\n    },\n    getDatasetAtEvent: function getDatasetAtEvent(e) {\n      return core_interaction.modes.dataset(this, e, {\n        intersect: true\n      });\n    },\n    getDatasetMeta: function getDatasetMeta(datasetIndex) {\n      var me = this;\n      var dataset = me.data.datasets[datasetIndex];\n\n      if (!dataset._meta) {\n        dataset._meta = {};\n      }\n\n      var meta = dataset._meta[me.id];\n\n      if (!meta) {\n        meta = dataset._meta[me.id] = {\n          type: null,\n          data: [],\n          dataset: null,\n          controller: null,\n          hidden: null,\n          // See isDatasetVisible() comment\n          xAxisID: null,\n          yAxisID: null\n        };\n      }\n\n      return meta;\n    },\n    getVisibleDatasetCount: function getVisibleDatasetCount() {\n      var count = 0;\n\n      for (var i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n        if (this.isDatasetVisible(i)) {\n          count++;\n        }\n      }\n\n      return count;\n    },\n    isDatasetVisible: function isDatasetVisible(datasetIndex) {\n      var meta = this.getDatasetMeta(datasetIndex); // meta.hidden is a per chart dataset hidden flag override with 3 states: if true or false,\n      // the dataset.hidden value is ignored, else if null, the dataset hidden state is returned.\n\n      return typeof meta.hidden === 'boolean' ? !meta.hidden : !this.data.datasets[datasetIndex].hidden;\n    },\n    generateLegend: function generateLegend() {\n      return this.options.legendCallback(this);\n    },\n\n    /**\n     * @private\n     */\n    destroyDatasetMeta: function destroyDatasetMeta(datasetIndex) {\n      var id = this.id;\n      var dataset = this.data.datasets[datasetIndex];\n      var meta = dataset._meta && dataset._meta[id];\n\n      if (meta) {\n        meta.controller.destroy();\n        delete dataset._meta[id];\n      }\n    },\n    destroy: function destroy() {\n      var me = this;\n      var canvas = me.canvas;\n      var i, ilen;\n      me.stop(); // dataset controllers need to cleanup associated data\n\n      for (i = 0, ilen = me.data.datasets.length; i < ilen; ++i) {\n        me.destroyDatasetMeta(i);\n      }\n\n      if (canvas) {\n        me.unbindEvents();\n        helpers$1.canvas.clear(me);\n        platform.releaseContext(me.ctx);\n        me.canvas = null;\n        me.ctx = null;\n      }\n\n      core_plugins.notify(me, 'destroy');\n      delete Chart.instances[me.id];\n    },\n    toBase64Image: function toBase64Image() {\n      return this.canvas.toDataURL.apply(this.canvas, arguments);\n    },\n    initToolTip: function initToolTip() {\n      var me = this;\n      me.tooltip = new core_tooltip({\n        _chart: me,\n        _chartInstance: me,\n        // deprecated, backward compatibility\n        _data: me.data,\n        _options: me.options.tooltips\n      }, me);\n    },\n\n    /**\n     * @private\n     */\n    bindEvents: function bindEvents() {\n      var me = this;\n      var listeners = me._listeners = {};\n\n      var listener = function listener() {\n        me.eventHandler.apply(me, arguments);\n      };\n\n      helpers$1.each(me.options.events, function (type) {\n        platform.addEventListener(me, type, listener);\n        listeners[type] = listener;\n      }); // Elements used to detect size change should not be injected for non responsive charts.\n      // See https://github.com/chartjs/Chart.js/issues/2210\n\n      if (me.options.responsive) {\n        listener = function listener() {\n          me.resize();\n        };\n\n        platform.addEventListener(me, 'resize', listener);\n        listeners.resize = listener;\n      }\n    },\n\n    /**\n     * @private\n     */\n    unbindEvents: function unbindEvents() {\n      var me = this;\n      var listeners = me._listeners;\n\n      if (!listeners) {\n        return;\n      }\n\n      delete me._listeners;\n      helpers$1.each(listeners, function (listener, type) {\n        platform.removeEventListener(me, type, listener);\n      });\n    },\n    updateHoverStyle: function updateHoverStyle(elements, mode, enabled) {\n      var method = enabled ? 'setHoverStyle' : 'removeHoverStyle';\n      var element, i, ilen;\n\n      for (i = 0, ilen = elements.length; i < ilen; ++i) {\n        element = elements[i];\n\n        if (element) {\n          this.getDatasetMeta(element._datasetIndex).controller[method](element);\n        }\n      }\n    },\n\n    /**\n     * @private\n     */\n    eventHandler: function eventHandler(e) {\n      var me = this;\n      var tooltip = me.tooltip;\n\n      if (core_plugins.notify(me, 'beforeEvent', [e]) === false) {\n        return;\n      } // Buffer any update calls so that renders do not occur\n\n\n      me._bufferedRender = true;\n      me._bufferedRequest = null;\n      var changed = me.handleEvent(e); // for smooth tooltip animations issue #4989\n      // the tooltip should be the source of change\n      // Animation check workaround:\n      // tooltip._start will be null when tooltip isn't animating\n\n      if (tooltip) {\n        changed = tooltip._start ? tooltip.handleEvent(e) : changed | tooltip.handleEvent(e);\n      }\n\n      core_plugins.notify(me, 'afterEvent', [e]);\n      var bufferedRequest = me._bufferedRequest;\n\n      if (bufferedRequest) {\n        // If we have an update that was triggered, we need to do a normal render\n        me.render(bufferedRequest);\n      } else if (changed && !me.animating) {\n        // If entering, leaving, or changing elements, animate the change via pivot\n        me.stop(); // We only need to render at this point. Updating will cause scales to be\n        // recomputed generating flicker & using more memory than necessary.\n\n        me.render({\n          duration: me.options.hover.animationDuration,\n          lazy: true\n        });\n      }\n\n      me._bufferedRender = false;\n      me._bufferedRequest = null;\n      return me;\n    },\n\n    /**\n     * Handle an event\n     * @private\n     * @param {IEvent} event the event to handle\n     * @return {boolean} true if the chart needs to re-render\n     */\n    handleEvent: function handleEvent(e) {\n      var me = this;\n      var options = me.options || {};\n      var hoverOptions = options.hover;\n      var changed = false;\n      me.lastActive = me.lastActive || []; // Find Active Elements for hover and tooltips\n\n      if (e.type === 'mouseout') {\n        me.active = [];\n      } else {\n        me.active = me.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions);\n      } // Invoke onHover hook\n      // Need to call with native event here to not break backwards compatibility\n\n\n      helpers$1.callback(options.onHover || options.hover.onHover, [e.native, me.active], me);\n\n      if (e.type === 'mouseup' || e.type === 'click') {\n        if (options.onClick) {\n          // Use e.native here for backwards compatibility\n          options.onClick.call(me, e.native, me.active);\n        }\n      } // Remove styling for last active (even if it may still be active)\n\n\n      if (me.lastActive.length) {\n        me.updateHoverStyle(me.lastActive, hoverOptions.mode, false);\n      } // Built in hover styling\n\n\n      if (me.active.length && hoverOptions.mode) {\n        me.updateHoverStyle(me.active, hoverOptions.mode, true);\n      }\n\n      changed = !helpers$1.arrayEquals(me.active, me.lastActive); // Remember Last Actives\n\n      me.lastActive = me.active;\n      return changed;\n    }\n  });\n  /**\n   * NOTE(SB) We actually don't use this container anymore but we need to keep it\n   * for backward compatibility. Though, it can still be useful for plugins that\n   * would need to work on multiple charts?!\n   */\n\n  Chart.instances = {};\n  var core_controller = Chart; // DEPRECATIONS\n\n  /**\n   * Provided for backward compatibility, use Chart instead.\n   * @class Chart.Controller\n   * @deprecated since version 2.6\n   * @todo remove at version 3\n   * @private\n   */\n\n  Chart.Controller = Chart;\n  /**\n   * Provided for backward compatibility, not available anymore.\n   * @namespace Chart\n   * @deprecated since version 2.8\n   * @todo remove at version 3\n   * @private\n   */\n\n  Chart.types = {};\n  /**\n   * Provided for backward compatibility, not available anymore.\n   * @namespace Chart.helpers.configMerge\n   * @deprecated since version 2.8.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers$1.configMerge = mergeConfig;\n  /**\n   * Provided for backward compatibility, not available anymore.\n   * @namespace Chart.helpers.scaleMerge\n   * @deprecated since version 2.8.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers$1.scaleMerge = mergeScaleConfig;\n\n  var core_helpers = function core_helpers() {\n    // -- Basic js utility methods\n    helpers$1.where = function (collection, filterCallback) {\n      if (helpers$1.isArray(collection) && Array.prototype.filter) {\n        return collection.filter(filterCallback);\n      }\n\n      var filtered = [];\n      helpers$1.each(collection, function (item) {\n        if (filterCallback(item)) {\n          filtered.push(item);\n        }\n      });\n      return filtered;\n    };\n\n    helpers$1.findIndex = Array.prototype.findIndex ? function (array, callback, scope) {\n      return array.findIndex(callback, scope);\n    } : function (array, callback, scope) {\n      scope = scope === undefined ? array : scope;\n\n      for (var i = 0, ilen = array.length; i < ilen; ++i) {\n        if (callback.call(scope, array[i], i, array)) {\n          return i;\n        }\n      }\n\n      return -1;\n    };\n\n    helpers$1.findNextWhere = function (arrayToSearch, filterCallback, startIndex) {\n      // Default to start of the array\n      if (helpers$1.isNullOrUndef(startIndex)) {\n        startIndex = -1;\n      }\n\n      for (var i = startIndex + 1; i < arrayToSearch.length; i++) {\n        var currentItem = arrayToSearch[i];\n\n        if (filterCallback(currentItem)) {\n          return currentItem;\n        }\n      }\n    };\n\n    helpers$1.findPreviousWhere = function (arrayToSearch, filterCallback, startIndex) {\n      // Default to end of the array\n      if (helpers$1.isNullOrUndef(startIndex)) {\n        startIndex = arrayToSearch.length;\n      }\n\n      for (var i = startIndex - 1; i >= 0; i--) {\n        var currentItem = arrayToSearch[i];\n\n        if (filterCallback(currentItem)) {\n          return currentItem;\n        }\n      }\n    }; // -- Math methods\n\n\n    helpers$1.isNumber = function (n) {\n      return !isNaN(parseFloat(n)) && isFinite(n);\n    };\n\n    helpers$1.almostEquals = function (x, y, epsilon) {\n      return Math.abs(x - y) < epsilon;\n    };\n\n    helpers$1.almostWhole = function (x, epsilon) {\n      var rounded = Math.round(x);\n      return rounded - epsilon < x && rounded + epsilon > x;\n    };\n\n    helpers$1.max = function (array) {\n      return array.reduce(function (max, value) {\n        if (!isNaN(value)) {\n          return Math.max(max, value);\n        }\n\n        return max;\n      }, Number.NEGATIVE_INFINITY);\n    };\n\n    helpers$1.min = function (array) {\n      return array.reduce(function (min, value) {\n        if (!isNaN(value)) {\n          return Math.min(min, value);\n        }\n\n        return min;\n      }, Number.POSITIVE_INFINITY);\n    };\n\n    helpers$1.sign = Math.sign ? function (x) {\n      return Math.sign(x);\n    } : function (x) {\n      x = +x; // convert to a number\n\n      if (x === 0 || isNaN(x)) {\n        return x;\n      }\n\n      return x > 0 ? 1 : -1;\n    };\n    helpers$1.log10 = Math.log10 ? function (x) {\n      return Math.log10(x);\n    } : function (x) {\n      var exponent = Math.log(x) * Math.LOG10E; // Math.LOG10E = 1 / Math.LN10.\n      // Check for whole powers of 10,\n      // which due to floating point rounding error should be corrected.\n\n      var powerOf10 = Math.round(exponent);\n      var isPowerOf10 = x === Math.pow(10, powerOf10);\n      return isPowerOf10 ? powerOf10 : exponent;\n    };\n\n    helpers$1.toRadians = function (degrees) {\n      return degrees * (Math.PI / 180);\n    };\n\n    helpers$1.toDegrees = function (radians) {\n      return radians * (180 / Math.PI);\n    };\n    /**\n     * Returns the number of decimal places\n     * i.e. the number of digits after the decimal point, of the value of this Number.\n     * @param {number} x - A number.\n     * @returns {number} The number of decimal places.\n     * @private\n     */\n\n\n    helpers$1._decimalPlaces = function (x) {\n      if (!helpers$1.isFinite(x)) {\n        return;\n      }\n\n      var e = 1;\n      var p = 0;\n\n      while (Math.round(x * e) / e !== x) {\n        e *= 10;\n        p++;\n      }\n\n      return p;\n    }; // Gets the angle from vertical upright to the point about a centre.\n\n\n    helpers$1.getAngleFromPoint = function (centrePoint, anglePoint) {\n      var distanceFromXCenter = anglePoint.x - centrePoint.x;\n      var distanceFromYCenter = anglePoint.y - centrePoint.y;\n      var radialDistanceFromCenter = Math.sqrt(distanceFromXCenter * distanceFromXCenter + distanceFromYCenter * distanceFromYCenter);\n      var angle = Math.atan2(distanceFromYCenter, distanceFromXCenter);\n\n      if (angle < -0.5 * Math.PI) {\n        angle += 2.0 * Math.PI; // make sure the returned angle is in the range of (-PI/2, 3PI/2]\n      }\n\n      return {\n        angle: angle,\n        distance: radialDistanceFromCenter\n      };\n    };\n\n    helpers$1.distanceBetweenPoints = function (pt1, pt2) {\n      return Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\n    };\n    /**\n     * Provided for backward compatibility, not available anymore\n     * @function Chart.helpers.aliasPixel\n     * @deprecated since version 2.8.0\n     * @todo remove at version 3\n     */\n\n\n    helpers$1.aliasPixel = function (pixelWidth) {\n      return pixelWidth % 2 === 0 ? 0 : 0.5;\n    };\n    /**\n     * Returns the aligned pixel value to avoid anti-aliasing blur\n     * @param {Chart} chart - The chart instance.\n     * @param {number} pixel - A pixel value.\n     * @param {number} width - The width of the element.\n     * @returns {number} The aligned pixel value.\n     * @private\n     */\n\n\n    helpers$1._alignPixel = function (chart, pixel, width) {\n      var devicePixelRatio = chart.currentDevicePixelRatio;\n      var halfWidth = width / 2;\n      return Math.round((pixel - halfWidth) * devicePixelRatio) / devicePixelRatio + halfWidth;\n    };\n\n    helpers$1.splineCurve = function (firstPoint, middlePoint, afterPoint, t) {\n      // Props to Rob Spencer at scaled innovation for his post on splining between points\n      // http://scaledinnovation.com/analytics/splines/aboutSplines.html\n      // This function must also respect \"skipped\" points\n      var previous = firstPoint.skip ? middlePoint : firstPoint;\n      var current = middlePoint;\n      var next = afterPoint.skip ? middlePoint : afterPoint;\n      var d01 = Math.sqrt(Math.pow(current.x - previous.x, 2) + Math.pow(current.y - previous.y, 2));\n      var d12 = Math.sqrt(Math.pow(next.x - current.x, 2) + Math.pow(next.y - current.y, 2));\n      var s01 = d01 / (d01 + d12);\n      var s12 = d12 / (d01 + d12); // If all points are the same, s01 & s02 will be inf\n\n      s01 = isNaN(s01) ? 0 : s01;\n      s12 = isNaN(s12) ? 0 : s12;\n      var fa = t * s01; // scaling factor for triangle Ta\n\n      var fb = t * s12;\n      return {\n        previous: {\n          x: current.x - fa * (next.x - previous.x),\n          y: current.y - fa * (next.y - previous.y)\n        },\n        next: {\n          x: current.x + fb * (next.x - previous.x),\n          y: current.y + fb * (next.y - previous.y)\n        }\n      };\n    };\n\n    helpers$1.EPSILON = Number.EPSILON || 1e-14;\n\n    helpers$1.splineCurveMonotone = function (points) {\n      // This function calculates Bézier control points in a similar way than |splineCurve|,\n      // but preserves monotonicity of the provided data and ensures no local extremums are added\n      // between the dataset discrete points due to the interpolation.\n      // See : https://en.wikipedia.org/wiki/Monotone_cubic_interpolation\n      var pointsWithTangents = (points || []).map(function (point) {\n        return {\n          model: point._model,\n          deltaK: 0,\n          mK: 0\n        };\n      }); // Calculate slopes (deltaK) and initialize tangents (mK)\n\n      var pointsLen = pointsWithTangents.length;\n      var i, pointBefore, pointCurrent, pointAfter;\n\n      for (i = 0; i < pointsLen; ++i) {\n        pointCurrent = pointsWithTangents[i];\n\n        if (pointCurrent.model.skip) {\n          continue;\n        }\n\n        pointBefore = i > 0 ? pointsWithTangents[i - 1] : null;\n        pointAfter = i < pointsLen - 1 ? pointsWithTangents[i + 1] : null;\n\n        if (pointAfter && !pointAfter.model.skip) {\n          var slopeDeltaX = pointAfter.model.x - pointCurrent.model.x; // In the case of two points that appear at the same x pixel, slopeDeltaX is 0\n\n          pointCurrent.deltaK = slopeDeltaX !== 0 ? (pointAfter.model.y - pointCurrent.model.y) / slopeDeltaX : 0;\n        }\n\n        if (!pointBefore || pointBefore.model.skip) {\n          pointCurrent.mK = pointCurrent.deltaK;\n        } else if (!pointAfter || pointAfter.model.skip) {\n          pointCurrent.mK = pointBefore.deltaK;\n        } else if (this.sign(pointBefore.deltaK) !== this.sign(pointCurrent.deltaK)) {\n          pointCurrent.mK = 0;\n        } else {\n          pointCurrent.mK = (pointBefore.deltaK + pointCurrent.deltaK) / 2;\n        }\n      } // Adjust tangents to ensure monotonic properties\n\n\n      var alphaK, betaK, tauK, squaredMagnitude;\n\n      for (i = 0; i < pointsLen - 1; ++i) {\n        pointCurrent = pointsWithTangents[i];\n        pointAfter = pointsWithTangents[i + 1];\n\n        if (pointCurrent.model.skip || pointAfter.model.skip) {\n          continue;\n        }\n\n        if (helpers$1.almostEquals(pointCurrent.deltaK, 0, this.EPSILON)) {\n          pointCurrent.mK = pointAfter.mK = 0;\n          continue;\n        }\n\n        alphaK = pointCurrent.mK / pointCurrent.deltaK;\n        betaK = pointAfter.mK / pointCurrent.deltaK;\n        squaredMagnitude = Math.pow(alphaK, 2) + Math.pow(betaK, 2);\n\n        if (squaredMagnitude <= 9) {\n          continue;\n        }\n\n        tauK = 3 / Math.sqrt(squaredMagnitude);\n        pointCurrent.mK = alphaK * tauK * pointCurrent.deltaK;\n        pointAfter.mK = betaK * tauK * pointCurrent.deltaK;\n      } // Compute control points\n\n\n      var deltaX;\n\n      for (i = 0; i < pointsLen; ++i) {\n        pointCurrent = pointsWithTangents[i];\n\n        if (pointCurrent.model.skip) {\n          continue;\n        }\n\n        pointBefore = i > 0 ? pointsWithTangents[i - 1] : null;\n        pointAfter = i < pointsLen - 1 ? pointsWithTangents[i + 1] : null;\n\n        if (pointBefore && !pointBefore.model.skip) {\n          deltaX = (pointCurrent.model.x - pointBefore.model.x) / 3;\n          pointCurrent.model.controlPointPreviousX = pointCurrent.model.x - deltaX;\n          pointCurrent.model.controlPointPreviousY = pointCurrent.model.y - deltaX * pointCurrent.mK;\n        }\n\n        if (pointAfter && !pointAfter.model.skip) {\n          deltaX = (pointAfter.model.x - pointCurrent.model.x) / 3;\n          pointCurrent.model.controlPointNextX = pointCurrent.model.x + deltaX;\n          pointCurrent.model.controlPointNextY = pointCurrent.model.y + deltaX * pointCurrent.mK;\n        }\n      }\n    };\n\n    helpers$1.nextItem = function (collection, index, loop) {\n      if (loop) {\n        return index >= collection.length - 1 ? collection[0] : collection[index + 1];\n      }\n\n      return index >= collection.length - 1 ? collection[collection.length - 1] : collection[index + 1];\n    };\n\n    helpers$1.previousItem = function (collection, index, loop) {\n      if (loop) {\n        return index <= 0 ? collection[collection.length - 1] : collection[index - 1];\n      }\n\n      return index <= 0 ? collection[0] : collection[index - 1];\n    }; // Implementation of the nice number algorithm used in determining where axis labels will go\n\n\n    helpers$1.niceNum = function (range, round) {\n      var exponent = Math.floor(helpers$1.log10(range));\n      var fraction = range / Math.pow(10, exponent);\n      var niceFraction;\n\n      if (round) {\n        if (fraction < 1.5) {\n          niceFraction = 1;\n        } else if (fraction < 3) {\n          niceFraction = 2;\n        } else if (fraction < 7) {\n          niceFraction = 5;\n        } else {\n          niceFraction = 10;\n        }\n      } else if (fraction <= 1.0) {\n        niceFraction = 1;\n      } else if (fraction <= 2) {\n        niceFraction = 2;\n      } else if (fraction <= 5) {\n        niceFraction = 5;\n      } else {\n        niceFraction = 10;\n      }\n\n      return niceFraction * Math.pow(10, exponent);\n    }; // Request animation polyfill - https://www.paulirish.com/2011/requestanimationframe-for-smart-animating/\n\n\n    helpers$1.requestAnimFrame = function () {\n      if (typeof window === 'undefined') {\n        return function (callback) {\n          callback();\n        };\n      }\n\n      return window.requestAnimationFrame || window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame || window.oRequestAnimationFrame || window.msRequestAnimationFrame || function (callback) {\n        return window.setTimeout(callback, 1000 / 60);\n      };\n    }(); // -- DOM methods\n\n\n    helpers$1.getRelativePosition = function (evt, chart) {\n      var mouseX, mouseY;\n      var e = evt.originalEvent || evt;\n      var canvas = evt.target || evt.srcElement;\n      var boundingRect = canvas.getBoundingClientRect();\n      var touches = e.touches;\n\n      if (touches && touches.length > 0) {\n        mouseX = touches[0].clientX;\n        mouseY = touches[0].clientY;\n      } else {\n        mouseX = e.clientX;\n        mouseY = e.clientY;\n      } // Scale mouse coordinates into canvas coordinates\n      // by following the pattern laid out by 'jerryj' in the comments of\n      // https://www.html5canvastutorials.com/advanced/html5-canvas-mouse-coordinates/\n\n\n      var paddingLeft = parseFloat(helpers$1.getStyle(canvas, 'padding-left'));\n      var paddingTop = parseFloat(helpers$1.getStyle(canvas, 'padding-top'));\n      var paddingRight = parseFloat(helpers$1.getStyle(canvas, 'padding-right'));\n      var paddingBottom = parseFloat(helpers$1.getStyle(canvas, 'padding-bottom'));\n      var width = boundingRect.right - boundingRect.left - paddingLeft - paddingRight;\n      var height = boundingRect.bottom - boundingRect.top - paddingTop - paddingBottom; // We divide by the current device pixel ratio, because the canvas is scaled up by that amount in each direction. However\n      // the backend model is in unscaled coordinates. Since we are going to deal with our model coordinates, we go back here\n\n      mouseX = Math.round((mouseX - boundingRect.left - paddingLeft) / width * canvas.width / chart.currentDevicePixelRatio);\n      mouseY = Math.round((mouseY - boundingRect.top - paddingTop) / height * canvas.height / chart.currentDevicePixelRatio);\n      return {\n        x: mouseX,\n        y: mouseY\n      };\n    }; // Private helper function to convert max-width/max-height values that may be percentages into a number\n\n\n    function parseMaxStyle(styleValue, node, parentProperty) {\n      var valueInPixels;\n\n      if (typeof styleValue === 'string') {\n        valueInPixels = parseInt(styleValue, 10);\n\n        if (styleValue.indexOf('%') !== -1) {\n          // percentage * size in dimension\n          valueInPixels = valueInPixels / 100 * node.parentNode[parentProperty];\n        }\n      } else {\n        valueInPixels = styleValue;\n      }\n\n      return valueInPixels;\n    }\n    /**\n     * Returns if the given value contains an effective constraint.\n     * @private\n     */\n\n\n    function isConstrainedValue(value) {\n      return value !== undefined && value !== null && value !== 'none';\n    }\n    /**\n     * Returns the max width or height of the given DOM node in a cross-browser compatible fashion\n     * @param {HTMLElement} domNode - the node to check the constraint on\n     * @param {string} maxStyle - the style that defines the maximum for the direction we are using ('max-width' / 'max-height')\n     * @param {string} percentageProperty - property of parent to use when calculating width as a percentage\n     * @see {@link https://www.nathanaeljones.com/blog/2013/reading-max-width-cross-browser}\n     */\n\n\n    function getConstraintDimension(domNode, maxStyle, percentageProperty) {\n      var view = document.defaultView;\n\n      var parentNode = helpers$1._getParentNode(domNode);\n\n      var constrainedNode = view.getComputedStyle(domNode)[maxStyle];\n      var constrainedContainer = view.getComputedStyle(parentNode)[maxStyle];\n      var hasCNode = isConstrainedValue(constrainedNode);\n      var hasCContainer = isConstrainedValue(constrainedContainer);\n      var infinity = Number.POSITIVE_INFINITY;\n\n      if (hasCNode || hasCContainer) {\n        return Math.min(hasCNode ? parseMaxStyle(constrainedNode, domNode, percentageProperty) : infinity, hasCContainer ? parseMaxStyle(constrainedContainer, parentNode, percentageProperty) : infinity);\n      }\n\n      return 'none';\n    } // returns Number or undefined if no constraint\n\n\n    helpers$1.getConstraintWidth = function (domNode) {\n      return getConstraintDimension(domNode, 'max-width', 'clientWidth');\n    }; // returns Number or undefined if no constraint\n\n\n    helpers$1.getConstraintHeight = function (domNode) {\n      return getConstraintDimension(domNode, 'max-height', 'clientHeight');\n    };\n    /**\n     * @private\n    \t */\n\n\n    helpers$1._calculatePadding = function (container, padding, parentDimension) {\n      padding = helpers$1.getStyle(container, padding);\n      return padding.indexOf('%') > -1 ? parentDimension * parseInt(padding, 10) / 100 : parseInt(padding, 10);\n    };\n    /**\n     * @private\n     */\n\n\n    helpers$1._getParentNode = function (domNode) {\n      var parent = domNode.parentNode;\n\n      if (parent && parent.toString() === '[object ShadowRoot]') {\n        parent = parent.host;\n      }\n\n      return parent;\n    };\n\n    helpers$1.getMaximumWidth = function (domNode) {\n      var container = helpers$1._getParentNode(domNode);\n\n      if (!container) {\n        return domNode.clientWidth;\n      }\n\n      var clientWidth = container.clientWidth;\n\n      var paddingLeft = helpers$1._calculatePadding(container, 'padding-left', clientWidth);\n\n      var paddingRight = helpers$1._calculatePadding(container, 'padding-right', clientWidth);\n\n      var w = clientWidth - paddingLeft - paddingRight;\n      var cw = helpers$1.getConstraintWidth(domNode);\n      return isNaN(cw) ? w : Math.min(w, cw);\n    };\n\n    helpers$1.getMaximumHeight = function (domNode) {\n      var container = helpers$1._getParentNode(domNode);\n\n      if (!container) {\n        return domNode.clientHeight;\n      }\n\n      var clientHeight = container.clientHeight;\n\n      var paddingTop = helpers$1._calculatePadding(container, 'padding-top', clientHeight);\n\n      var paddingBottom = helpers$1._calculatePadding(container, 'padding-bottom', clientHeight);\n\n      var h = clientHeight - paddingTop - paddingBottom;\n      var ch = helpers$1.getConstraintHeight(domNode);\n      return isNaN(ch) ? h : Math.min(h, ch);\n    };\n\n    helpers$1.getStyle = function (el, property) {\n      return el.currentStyle ? el.currentStyle[property] : document.defaultView.getComputedStyle(el, null).getPropertyValue(property);\n    };\n\n    helpers$1.retinaScale = function (chart, forceRatio) {\n      var pixelRatio = chart.currentDevicePixelRatio = forceRatio || typeof window !== 'undefined' && window.devicePixelRatio || 1;\n\n      if (pixelRatio === 1) {\n        return;\n      }\n\n      var canvas = chart.canvas;\n      var height = chart.height;\n      var width = chart.width;\n      canvas.height = height * pixelRatio;\n      canvas.width = width * pixelRatio;\n      chart.ctx.scale(pixelRatio, pixelRatio); // If no style has been set on the canvas, the render size is used as display size,\n      // making the chart visually bigger, so let's enforce it to the \"correct\" values.\n      // See https://github.com/chartjs/Chart.js/issues/3575\n\n      if (!canvas.style.height && !canvas.style.width) {\n        canvas.style.height = height + 'px';\n        canvas.style.width = width + 'px';\n      }\n    }; // -- Canvas methods\n\n\n    helpers$1.fontString = function (pixelSize, fontStyle, fontFamily) {\n      return fontStyle + ' ' + pixelSize + 'px ' + fontFamily;\n    };\n\n    helpers$1.longestText = function (ctx, font, arrayOfThings, cache) {\n      cache = cache || {};\n      var data = cache.data = cache.data || {};\n      var gc = cache.garbageCollect = cache.garbageCollect || [];\n\n      if (cache.font !== font) {\n        data = cache.data = {};\n        gc = cache.garbageCollect = [];\n        cache.font = font;\n      }\n\n      ctx.font = font;\n      var longest = 0;\n      helpers$1.each(arrayOfThings, function (thing) {\n        // Undefined strings and arrays should not be measured\n        if (thing !== undefined && thing !== null && helpers$1.isArray(thing) !== true) {\n          longest = helpers$1.measureText(ctx, data, gc, longest, thing);\n        } else if (helpers$1.isArray(thing)) {\n          // if it is an array lets measure each element\n          // to do maybe simplify this function a bit so we can do this more recursively?\n          helpers$1.each(thing, function (nestedThing) {\n            // Undefined strings and arrays should not be measured\n            if (nestedThing !== undefined && nestedThing !== null && !helpers$1.isArray(nestedThing)) {\n              longest = helpers$1.measureText(ctx, data, gc, longest, nestedThing);\n            }\n          });\n        }\n      });\n      var gcLen = gc.length / 2;\n\n      if (gcLen > arrayOfThings.length) {\n        for (var i = 0; i < gcLen; i++) {\n          delete data[gc[i]];\n        }\n\n        gc.splice(0, gcLen);\n      }\n\n      return longest;\n    };\n\n    helpers$1.measureText = function (ctx, data, gc, longest, string) {\n      var textWidth = data[string];\n\n      if (!textWidth) {\n        textWidth = data[string] = ctx.measureText(string).width;\n        gc.push(string);\n      }\n\n      if (textWidth > longest) {\n        longest = textWidth;\n      }\n\n      return longest;\n    };\n\n    helpers$1.numberOfLabelLines = function (arrayOfThings) {\n      var numberOfLines = 1;\n      helpers$1.each(arrayOfThings, function (thing) {\n        if (helpers$1.isArray(thing)) {\n          if (thing.length > numberOfLines) {\n            numberOfLines = thing.length;\n          }\n        }\n      });\n      return numberOfLines;\n    };\n\n    helpers$1.color = !chartjsColor ? function (value) {\n      console.error('Color.js not found!');\n      return value;\n    } : function (value) {\n      /* global CanvasGradient */\n      if (value instanceof CanvasGradient) {\n        value = core_defaults.global.defaultColor;\n      }\n\n      return chartjsColor(value);\n    };\n\n    helpers$1.getHoverColor = function (colorValue) {\n      /* global CanvasPattern */\n      return colorValue instanceof CanvasPattern || colorValue instanceof CanvasGradient ? colorValue : helpers$1.color(colorValue).saturate(0.5).darken(0.1).rgbString();\n    };\n  };\n\n  function abstract() {\n    throw new Error('This method is not implemented: either no adapter can ' + 'be found or an incomplete integration was provided.');\n  }\n  /**\n   * Date adapter (current used by the time scale)\n   * @namespace Chart._adapters._date\n   * @memberof Chart._adapters\n   * @private\n   */\n\n  /**\n   * Currently supported unit string values.\n   * @typedef {('millisecond'|'second'|'minute'|'hour'|'day'|'week'|'month'|'quarter'|'year')}\n   * @memberof Chart._adapters._date\n   * @name Unit\n   */\n\n  /**\n   * @class\n   */\n\n\n  function DateAdapter(options) {\n    this.options = options || {};\n  }\n\n  helpers$1.extend(DateAdapter.prototype,\n  /** @lends DateAdapter */\n  {\n    /**\n     * Returns a map of time formats for the supported formatting units defined\n     * in Unit as well as 'datetime' representing a detailed date/time string.\n     * @returns {{string: string}}\n     */\n    formats: abstract,\n\n    /**\n     * Parses the given `value` and return the associated timestamp.\n     * @param {any} value - the value to parse (usually comes from the data)\n     * @param {string} [format] - the expected data format\n     * @returns {(number|null)}\n     * @function\n     */\n    parse: abstract,\n\n    /**\n     * Returns the formatted date in the specified `format` for a given `timestamp`.\n     * @param {number} timestamp - the timestamp to format\n     * @param {string} format - the date/time token\n     * @return {string}\n     * @function\n     */\n    format: abstract,\n\n    /**\n     * Adds the specified `amount` of `unit` to the given `timestamp`.\n     * @param {number} timestamp - the input timestamp\n     * @param {number} amount - the amount to add\n     * @param {Unit} unit - the unit as string\n     * @return {number}\n     * @function\n     */\n    add: abstract,\n\n    /**\n     * Returns the number of `unit` between the given timestamps.\n     * @param {number} max - the input timestamp (reference)\n     * @param {number} min - the timestamp to substract\n     * @param {Unit} unit - the unit as string\n     * @return {number}\n     * @function\n     */\n    diff: abstract,\n\n    /**\n     * Returns start of `unit` for the given `timestamp`.\n     * @param {number} timestamp - the input timestamp\n     * @param {Unit} unit - the unit as string\n     * @param {number} [weekday] - the ISO day of the week with 1 being Monday\n     * and 7 being Sunday (only needed if param *unit* is `isoWeek`).\n     * @function\n     */\n    startOf: abstract,\n\n    /**\n     * Returns end of `unit` for the given `timestamp`.\n     * @param {number} timestamp - the input timestamp\n     * @param {Unit} unit - the unit as string\n     * @function\n     */\n    endOf: abstract,\n    // DEPRECATIONS\n\n    /**\n     * Provided for backward compatibility for scale.getValueForPixel(),\n     * this method should be overridden only by the moment adapter.\n     * @deprecated since version 2.8.0\n     * @todo remove at version 3\n     * @private\n     */\n    _create: function _create(value) {\n      return value;\n    }\n  });\n\n  DateAdapter.override = function (members) {\n    helpers$1.extend(DateAdapter.prototype, members);\n  };\n\n  var _date = DateAdapter;\n  var core_adapters = {\n    _date: _date\n  };\n  /**\n   * Namespace to hold static tick generation functions\n   * @namespace Chart.Ticks\n   */\n\n  var core_ticks = {\n    /**\n     * Namespace to hold formatters for different types of ticks\n     * @namespace Chart.Ticks.formatters\n     */\n    formatters: {\n      /**\n       * Formatter for value labels\n       * @method Chart.Ticks.formatters.values\n       * @param value the value to display\n       * @return {string|string[]} the label to display\n       */\n      values: function values(value) {\n        return helpers$1.isArray(value) ? value : '' + value;\n      },\n\n      /**\n       * Formatter for linear numeric ticks\n       * @method Chart.Ticks.formatters.linear\n       * @param tickValue {number} the value to be formatted\n       * @param index {number} the position of the tickValue parameter in the ticks array\n       * @param ticks {number[]} the list of ticks being converted\n       * @return {string} string representation of the tickValue parameter\n       */\n      linear: function linear(tickValue, index, ticks) {\n        // If we have lots of ticks, don't use the ones\n        var delta = ticks.length > 3 ? ticks[2] - ticks[1] : ticks[1] - ticks[0]; // If we have a number like 2.5 as the delta, figure out how many decimal places we need\n\n        if (Math.abs(delta) > 1) {\n          if (tickValue !== Math.floor(tickValue)) {\n            // not an integer\n            delta = tickValue - Math.floor(tickValue);\n          }\n        }\n\n        var logDelta = helpers$1.log10(Math.abs(delta));\n        var tickString = '';\n\n        if (tickValue !== 0) {\n          var maxTick = Math.max(Math.abs(ticks[0]), Math.abs(ticks[ticks.length - 1]));\n\n          if (maxTick < 1e-4) {\n            // all ticks are small numbers; use scientific notation\n            var logTick = helpers$1.log10(Math.abs(tickValue));\n            tickString = tickValue.toExponential(Math.floor(logTick) - Math.floor(logDelta));\n          } else {\n            var numDecimal = -1 * Math.floor(logDelta);\n            numDecimal = Math.max(Math.min(numDecimal, 20), 0); // toFixed has a max of 20 decimal places\n\n            tickString = tickValue.toFixed(numDecimal);\n          }\n        } else {\n          tickString = '0'; // never show decimal places for 0\n        }\n\n        return tickString;\n      },\n      logarithmic: function logarithmic(tickValue, index, ticks) {\n        var remain = tickValue / Math.pow(10, Math.floor(helpers$1.log10(tickValue)));\n\n        if (tickValue === 0) {\n          return '0';\n        } else if (remain === 1 || remain === 2 || remain === 5 || index === 0 || index === ticks.length - 1) {\n          return tickValue.toExponential();\n        }\n\n        return '';\n      }\n    }\n  };\n  var valueOrDefault$9 = helpers$1.valueOrDefault;\n  var valueAtIndexOrDefault = helpers$1.valueAtIndexOrDefault;\n\n  core_defaults._set('scale', {\n    display: true,\n    position: 'left',\n    offset: false,\n    // grid line settings\n    gridLines: {\n      display: true,\n      color: 'rgba(0, 0, 0, 0.1)',\n      lineWidth: 1,\n      drawBorder: true,\n      drawOnChartArea: true,\n      drawTicks: true,\n      tickMarkLength: 10,\n      zeroLineWidth: 1,\n      zeroLineColor: 'rgba(0,0,0,0.25)',\n      zeroLineBorderDash: [],\n      zeroLineBorderDashOffset: 0.0,\n      offsetGridLines: false,\n      borderDash: [],\n      borderDashOffset: 0.0\n    },\n    // scale label\n    scaleLabel: {\n      // display property\n      display: false,\n      // actual label\n      labelString: '',\n      // top/bottom padding\n      padding: {\n        top: 4,\n        bottom: 4\n      }\n    },\n    // label settings\n    ticks: {\n      beginAtZero: false,\n      minRotation: 0,\n      maxRotation: 50,\n      mirror: false,\n      padding: 0,\n      reverse: false,\n      display: true,\n      autoSkip: true,\n      autoSkipPadding: 0,\n      labelOffset: 0,\n      // We pass through arrays to be rendered as multiline labels, we convert Others to strings here.\n      callback: core_ticks.formatters.values,\n      minor: {},\n      major: {}\n    }\n  });\n\n  function labelsFromTicks(ticks) {\n    var labels = [];\n    var i, ilen;\n\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      labels.push(ticks[i].label);\n    }\n\n    return labels;\n  }\n\n  function getPixelForGridLine(scale, index, offsetGridLines) {\n    var lineValue = scale.getPixelForTick(index);\n\n    if (offsetGridLines) {\n      if (scale.getTicks().length === 1) {\n        lineValue -= scale.isHorizontal() ? Math.max(lineValue - scale.left, scale.right - lineValue) : Math.max(lineValue - scale.top, scale.bottom - lineValue);\n      } else if (index === 0) {\n        lineValue -= (scale.getPixelForTick(1) - lineValue) / 2;\n      } else {\n        lineValue -= (lineValue - scale.getPixelForTick(index - 1)) / 2;\n      }\n    }\n\n    return lineValue;\n  }\n\n  function computeTextSize(context, tick, font) {\n    return helpers$1.isArray(tick) ? helpers$1.longestText(context, font, tick) : context.measureText(tick).width;\n  }\n\n  var core_scale = core_element.extend({\n    /**\n     * Get the padding needed for the scale\n     * @method getPadding\n     * @private\n     * @returns {Padding} the necessary padding\n     */\n    getPadding: function getPadding() {\n      var me = this;\n      return {\n        left: me.paddingLeft || 0,\n        top: me.paddingTop || 0,\n        right: me.paddingRight || 0,\n        bottom: me.paddingBottom || 0\n      };\n    },\n\n    /**\n     * Returns the scale tick objects ({label, major})\n     * @since 2.7\n     */\n    getTicks: function getTicks() {\n      return this._ticks;\n    },\n    // These methods are ordered by lifecyle. Utilities then follow.\n    // Any function defined here is inherited by all scale types.\n    // Any function can be extended by the scale type\n    mergeTicksOptions: function mergeTicksOptions() {\n      var ticks = this.options.ticks;\n\n      if (ticks.minor === false) {\n        ticks.minor = {\n          display: false\n        };\n      }\n\n      if (ticks.major === false) {\n        ticks.major = {\n          display: false\n        };\n      }\n\n      for (var key in ticks) {\n        if (key !== 'major' && key !== 'minor') {\n          if (typeof ticks.minor[key] === 'undefined') {\n            ticks.minor[key] = ticks[key];\n          }\n\n          if (typeof ticks.major[key] === 'undefined') {\n            ticks.major[key] = ticks[key];\n          }\n        }\n      }\n    },\n    beforeUpdate: function beforeUpdate() {\n      helpers$1.callback(this.options.beforeUpdate, [this]);\n    },\n    update: function update(maxWidth, maxHeight, margins) {\n      var me = this;\n      var i, ilen, labels, label, ticks, tick; // Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\n\n      me.beforeUpdate(); // Absorb the master measurements\n\n      me.maxWidth = maxWidth;\n      me.maxHeight = maxHeight;\n      me.margins = helpers$1.extend({\n        left: 0,\n        right: 0,\n        top: 0,\n        bottom: 0\n      }, margins);\n      me._maxLabelLines = 0;\n      me.longestLabelWidth = 0;\n      me.longestTextCache = me.longestTextCache || {}; // Dimensions\n\n      me.beforeSetDimensions();\n      me.setDimensions();\n      me.afterSetDimensions(); // Data min/max\n\n      me.beforeDataLimits();\n      me.determineDataLimits();\n      me.afterDataLimits(); // Ticks - `this.ticks` is now DEPRECATED!\n      // Internal ticks are now stored as objects in the PRIVATE `this._ticks` member\n      // and must not be accessed directly from outside this class. `this.ticks` being\n      // around for long time and not marked as private, we can't change its structure\n      // without unexpected breaking changes. If you need to access the scale ticks,\n      // use scale.getTicks() instead.\n\n      me.beforeBuildTicks(); // New implementations should return an array of objects but for BACKWARD COMPAT,\n      // we still support no return (`this.ticks` internally set by calling this method).\n\n      ticks = me.buildTicks() || []; // Allow modification of ticks in callback.\n\n      ticks = me.afterBuildTicks(ticks) || ticks;\n      me.beforeTickToLabelConversion(); // New implementations should return the formatted tick labels but for BACKWARD\n      // COMPAT, we still support no return (`this.ticks` internally changed by calling\n      // this method and supposed to contain only string values).\n\n      labels = me.convertTicksToLabels(ticks) || me.ticks;\n      me.afterTickToLabelConversion();\n      me.ticks = labels; // BACKWARD COMPATIBILITY\n      // IMPORTANT: from this point, we consider that `this.ticks` will NEVER change!\n      // BACKWARD COMPAT: synchronize `_ticks` with labels (so potentially `this.ticks`)\n\n      for (i = 0, ilen = labels.length; i < ilen; ++i) {\n        label = labels[i];\n        tick = ticks[i];\n\n        if (!tick) {\n          ticks.push(tick = {\n            label: label,\n            major: false\n          });\n        } else {\n          tick.label = label;\n        }\n      }\n\n      me._ticks = ticks; // Tick Rotation\n\n      me.beforeCalculateTickRotation();\n      me.calculateTickRotation();\n      me.afterCalculateTickRotation(); // Fit\n\n      me.beforeFit();\n      me.fit();\n      me.afterFit(); //\n\n      me.afterUpdate();\n      return me.minSize;\n    },\n    afterUpdate: function afterUpdate() {\n      helpers$1.callback(this.options.afterUpdate, [this]);\n    },\n    //\n    beforeSetDimensions: function beforeSetDimensions() {\n      helpers$1.callback(this.options.beforeSetDimensions, [this]);\n    },\n    setDimensions: function setDimensions() {\n      var me = this; // Set the unconstrained dimension before label rotation\n\n      if (me.isHorizontal()) {\n        // Reset position before calculating rotation\n        me.width = me.maxWidth;\n        me.left = 0;\n        me.right = me.width;\n      } else {\n        me.height = me.maxHeight; // Reset position before calculating rotation\n\n        me.top = 0;\n        me.bottom = me.height;\n      } // Reset padding\n\n\n      me.paddingLeft = 0;\n      me.paddingTop = 0;\n      me.paddingRight = 0;\n      me.paddingBottom = 0;\n    },\n    afterSetDimensions: function afterSetDimensions() {\n      helpers$1.callback(this.options.afterSetDimensions, [this]);\n    },\n    // Data limits\n    beforeDataLimits: function beforeDataLimits() {\n      helpers$1.callback(this.options.beforeDataLimits, [this]);\n    },\n    determineDataLimits: helpers$1.noop,\n    afterDataLimits: function afterDataLimits() {\n      helpers$1.callback(this.options.afterDataLimits, [this]);\n    },\n    //\n    beforeBuildTicks: function beforeBuildTicks() {\n      helpers$1.callback(this.options.beforeBuildTicks, [this]);\n    },\n    buildTicks: helpers$1.noop,\n    afterBuildTicks: function afterBuildTicks(ticks) {\n      var me = this; // ticks is empty for old axis implementations here\n\n      if (helpers$1.isArray(ticks) && ticks.length) {\n        return helpers$1.callback(me.options.afterBuildTicks, [me, ticks]);\n      } // Support old implementations (that modified `this.ticks` directly in buildTicks)\n\n\n      me.ticks = helpers$1.callback(me.options.afterBuildTicks, [me, me.ticks]) || me.ticks;\n      return ticks;\n    },\n    beforeTickToLabelConversion: function beforeTickToLabelConversion() {\n      helpers$1.callback(this.options.beforeTickToLabelConversion, [this]);\n    },\n    convertTicksToLabels: function convertTicksToLabels() {\n      var me = this; // Convert ticks to strings\n\n      var tickOpts = me.options.ticks;\n      me.ticks = me.ticks.map(tickOpts.userCallback || tickOpts.callback, this);\n    },\n    afterTickToLabelConversion: function afterTickToLabelConversion() {\n      helpers$1.callback(this.options.afterTickToLabelConversion, [this]);\n    },\n    //\n    beforeCalculateTickRotation: function beforeCalculateTickRotation() {\n      helpers$1.callback(this.options.beforeCalculateTickRotation, [this]);\n    },\n    calculateTickRotation: function calculateTickRotation() {\n      var me = this;\n      var context = me.ctx;\n      var tickOpts = me.options.ticks;\n      var labels = labelsFromTicks(me._ticks); // Get the width of each grid by calculating the difference\n      // between x offsets between 0 and 1.\n\n      var tickFont = helpers$1.options._parseFont(tickOpts);\n\n      context.font = tickFont.string;\n      var labelRotation = tickOpts.minRotation || 0;\n\n      if (labels.length && me.options.display && me.isHorizontal()) {\n        var originalLabelWidth = helpers$1.longestText(context, tickFont.string, labels, me.longestTextCache);\n        var labelWidth = originalLabelWidth;\n        var cosRotation, sinRotation; // Allow 3 pixels x2 padding either side for label readability\n\n        var tickWidth = me.getPixelForTick(1) - me.getPixelForTick(0) - 6; // Max label rotation can be set or default to 90 - also act as a loop counter\n\n        while (labelWidth > tickWidth && labelRotation < tickOpts.maxRotation) {\n          var angleRadians = helpers$1.toRadians(labelRotation);\n          cosRotation = Math.cos(angleRadians);\n          sinRotation = Math.sin(angleRadians);\n\n          if (sinRotation * originalLabelWidth > me.maxHeight) {\n            // go back one step\n            labelRotation--;\n            break;\n          }\n\n          labelRotation++;\n          labelWidth = cosRotation * originalLabelWidth;\n        }\n      }\n\n      me.labelRotation = labelRotation;\n    },\n    afterCalculateTickRotation: function afterCalculateTickRotation() {\n      helpers$1.callback(this.options.afterCalculateTickRotation, [this]);\n    },\n    //\n    beforeFit: function beforeFit() {\n      helpers$1.callback(this.options.beforeFit, [this]);\n    },\n    fit: function fit() {\n      var me = this; // Reset\n\n      var minSize = me.minSize = {\n        width: 0,\n        height: 0\n      };\n      var labels = labelsFromTicks(me._ticks);\n      var opts = me.options;\n      var tickOpts = opts.ticks;\n      var scaleLabelOpts = opts.scaleLabel;\n      var gridLineOpts = opts.gridLines;\n\n      var display = me._isVisible();\n\n      var position = opts.position;\n      var isHorizontal = me.isHorizontal();\n      var parseFont = helpers$1.options._parseFont;\n      var tickFont = parseFont(tickOpts);\n      var tickMarkLength = opts.gridLines.tickMarkLength; // Width\n\n      if (isHorizontal) {\n        // subtract the margins to line up with the chartArea if we are a full width scale\n        minSize.width = me.isFullWidth() ? me.maxWidth - me.margins.left - me.margins.right : me.maxWidth;\n      } else {\n        minSize.width = display && gridLineOpts.drawTicks ? tickMarkLength : 0;\n      } // height\n\n\n      if (isHorizontal) {\n        minSize.height = display && gridLineOpts.drawTicks ? tickMarkLength : 0;\n      } else {\n        minSize.height = me.maxHeight; // fill all the height\n      } // Are we showing a title for the scale?\n\n\n      if (scaleLabelOpts.display && display) {\n        var scaleLabelFont = parseFont(scaleLabelOpts);\n        var scaleLabelPadding = helpers$1.options.toPadding(scaleLabelOpts.padding);\n        var deltaHeight = scaleLabelFont.lineHeight + scaleLabelPadding.height;\n\n        if (isHorizontal) {\n          minSize.height += deltaHeight;\n        } else {\n          minSize.width += deltaHeight;\n        }\n      } // Don't bother fitting the ticks if we are not showing the labels\n\n\n      if (tickOpts.display && display) {\n        var largestTextWidth = helpers$1.longestText(me.ctx, tickFont.string, labels, me.longestTextCache);\n        var tallestLabelHeightInLines = helpers$1.numberOfLabelLines(labels);\n        var lineSpace = tickFont.size * 0.5;\n        var tickPadding = me.options.ticks.padding; // Store max number of lines and widest label for _autoSkip\n\n        me._maxLabelLines = tallestLabelHeightInLines;\n        me.longestLabelWidth = largestTextWidth;\n\n        if (isHorizontal) {\n          var angleRadians = helpers$1.toRadians(me.labelRotation);\n          var cosRotation = Math.cos(angleRadians);\n          var sinRotation = Math.sin(angleRadians); // TODO - improve this calculation\n\n          var labelHeight = sinRotation * largestTextWidth + tickFont.lineHeight * tallestLabelHeightInLines + lineSpace; // padding\n\n          minSize.height = Math.min(me.maxHeight, minSize.height + labelHeight + tickPadding);\n          me.ctx.font = tickFont.string;\n          var firstLabelWidth = computeTextSize(me.ctx, labels[0], tickFont.string);\n          var lastLabelWidth = computeTextSize(me.ctx, labels[labels.length - 1], tickFont.string);\n          var offsetLeft = me.getPixelForTick(0) - me.left;\n          var offsetRight = me.right - me.getPixelForTick(labels.length - 1);\n          var paddingLeft, paddingRight; // Ensure that our ticks are always inside the canvas. When rotated, ticks are right aligned\n          // which means that the right padding is dominated by the font height\n\n          if (me.labelRotation !== 0) {\n            paddingLeft = position === 'bottom' ? cosRotation * firstLabelWidth : cosRotation * lineSpace;\n            paddingRight = position === 'bottom' ? cosRotation * lineSpace : cosRotation * lastLabelWidth;\n          } else {\n            paddingLeft = firstLabelWidth / 2;\n            paddingRight = lastLabelWidth / 2;\n          }\n\n          me.paddingLeft = Math.max(paddingLeft - offsetLeft, 0) + 3; // add 3 px to move away from canvas edges\n\n          me.paddingRight = Math.max(paddingRight - offsetRight, 0) + 3;\n        } else {\n          // A vertical axis is more constrained by the width. Labels are the\n          // dominant factor here, so get that length first and account for padding\n          if (tickOpts.mirror) {\n            largestTextWidth = 0;\n          } else {\n            // use lineSpace for consistency with horizontal axis\n            // tickPadding is not implemented for horizontal\n            largestTextWidth += tickPadding + lineSpace;\n          }\n\n          minSize.width = Math.min(me.maxWidth, minSize.width + largestTextWidth);\n          me.paddingTop = tickFont.size / 2;\n          me.paddingBottom = tickFont.size / 2;\n        }\n      }\n\n      me.handleMargins();\n      me.width = minSize.width;\n      me.height = minSize.height;\n    },\n\n    /**\n     * Handle margins and padding interactions\n     * @private\n     */\n    handleMargins: function handleMargins() {\n      var me = this;\n\n      if (me.margins) {\n        me.paddingLeft = Math.max(me.paddingLeft - me.margins.left, 0);\n        me.paddingTop = Math.max(me.paddingTop - me.margins.top, 0);\n        me.paddingRight = Math.max(me.paddingRight - me.margins.right, 0);\n        me.paddingBottom = Math.max(me.paddingBottom - me.margins.bottom, 0);\n      }\n    },\n    afterFit: function afterFit() {\n      helpers$1.callback(this.options.afterFit, [this]);\n    },\n    // Shared Methods\n    isHorizontal: function isHorizontal() {\n      return this.options.position === 'top' || this.options.position === 'bottom';\n    },\n    isFullWidth: function isFullWidth() {\n      return this.options.fullWidth;\n    },\n    // Get the correct value. NaN bad inputs, If the value type is object get the x or y based on whether we are horizontal or not\n    getRightValue: function getRightValue(rawValue) {\n      // Null and undefined values first\n      if (helpers$1.isNullOrUndef(rawValue)) {\n        return NaN;\n      } // isNaN(object) returns true, so make sure NaN is checking for a number; Discard Infinite values\n\n\n      if ((typeof rawValue === 'number' || rawValue instanceof Number) && !isFinite(rawValue)) {\n        return NaN;\n      } // If it is in fact an object, dive in one more level\n\n\n      if (rawValue) {\n        if (this.isHorizontal()) {\n          if (rawValue.x !== undefined) {\n            return this.getRightValue(rawValue.x);\n          }\n        } else if (rawValue.y !== undefined) {\n          return this.getRightValue(rawValue.y);\n        }\n      } // Value is good, return it\n\n\n      return rawValue;\n    },\n\n    /**\n     * Used to get the value to display in the tooltip for the data at the given index\n     * @param index\n     * @param datasetIndex\n     */\n    getLabelForIndex: helpers$1.noop,\n\n    /**\n     * Returns the location of the given data point. Value can either be an index or a numerical value\n     * The coordinate (0, 0) is at the upper-left corner of the canvas\n     * @param value\n     * @param index\n     * @param datasetIndex\n     */\n    getPixelForValue: helpers$1.noop,\n\n    /**\n     * Used to get the data value from a given pixel. This is the inverse of getPixelForValue\n     * The coordinate (0, 0) is at the upper-left corner of the canvas\n     * @param pixel\n     */\n    getValueForPixel: helpers$1.noop,\n\n    /**\n     * Returns the location of the tick at the given index\n     * The coordinate (0, 0) is at the upper-left corner of the canvas\n     */\n    getPixelForTick: function getPixelForTick(index) {\n      var me = this;\n      var offset = me.options.offset;\n\n      if (me.isHorizontal()) {\n        var innerWidth = me.width - (me.paddingLeft + me.paddingRight);\n        var tickWidth = innerWidth / Math.max(me._ticks.length - (offset ? 0 : 1), 1);\n        var pixel = tickWidth * index + me.paddingLeft;\n\n        if (offset) {\n          pixel += tickWidth / 2;\n        }\n\n        var finalVal = me.left + pixel;\n        finalVal += me.isFullWidth() ? me.margins.left : 0;\n        return finalVal;\n      }\n\n      var innerHeight = me.height - (me.paddingTop + me.paddingBottom);\n      return me.top + index * (innerHeight / (me._ticks.length - 1));\n    },\n\n    /**\n     * Utility for getting the pixel location of a percentage of scale\n     * The coordinate (0, 0) is at the upper-left corner of the canvas\n     */\n    getPixelForDecimal: function getPixelForDecimal(decimal) {\n      var me = this;\n\n      if (me.isHorizontal()) {\n        var innerWidth = me.width - (me.paddingLeft + me.paddingRight);\n        var valueOffset = innerWidth * decimal + me.paddingLeft;\n        var finalVal = me.left + valueOffset;\n        finalVal += me.isFullWidth() ? me.margins.left : 0;\n        return finalVal;\n      }\n\n      return me.top + decimal * me.height;\n    },\n\n    /**\n     * Returns the pixel for the minimum chart value\n     * The coordinate (0, 0) is at the upper-left corner of the canvas\n     */\n    getBasePixel: function getBasePixel() {\n      return this.getPixelForValue(this.getBaseValue());\n    },\n    getBaseValue: function getBaseValue() {\n      var me = this;\n      var min = me.min;\n      var max = me.max;\n      return me.beginAtZero ? 0 : min < 0 && max < 0 ? max : min > 0 && max > 0 ? min : 0;\n    },\n\n    /**\n     * Returns a subset of ticks to be plotted to avoid overlapping labels.\n     * @private\n     */\n    _autoSkip: function _autoSkip(ticks) {\n      var me = this;\n      var isHorizontal = me.isHorizontal();\n      var optionTicks = me.options.ticks.minor;\n      var tickCount = ticks.length;\n      var skipRatio = false;\n      var maxTicks = optionTicks.maxTicksLimit; // Total space needed to display all ticks. First and last ticks are\n      // drawn as their center at end of axis, so tickCount-1\n\n      var ticksLength = me._tickSize() * (tickCount - 1); // Axis length\n\n      var axisLength = isHorizontal ? me.width - (me.paddingLeft + me.paddingRight) : me.height - (me.paddingTop + me.PaddingBottom);\n      var result = [];\n      var i, tick;\n\n      if (ticksLength > axisLength) {\n        skipRatio = 1 + Math.floor(ticksLength / axisLength);\n      } // if they defined a max number of optionTicks,\n      // increase skipRatio until that number is met\n\n\n      if (tickCount > maxTicks) {\n        skipRatio = Math.max(skipRatio, 1 + Math.floor(tickCount / maxTicks));\n      }\n\n      for (i = 0; i < tickCount; i++) {\n        tick = ticks[i];\n\n        if (skipRatio > 1 && i % skipRatio > 0) {\n          // leave tick in place but make sure it's not displayed (#4635)\n          delete tick.label;\n        }\n\n        result.push(tick);\n      }\n\n      return result;\n    },\n\n    /**\n     * @private\n     */\n    _tickSize: function _tickSize() {\n      var me = this;\n      var isHorizontal = me.isHorizontal();\n      var optionTicks = me.options.ticks.minor; // Calculate space needed by label in axis direction.\n\n      var rot = helpers$1.toRadians(me.labelRotation);\n      var cos = Math.abs(Math.cos(rot));\n      var sin = Math.abs(Math.sin(rot));\n      var padding = optionTicks.autoSkipPadding || 0;\n      var w = me.longestLabelWidth + padding || 0;\n\n      var tickFont = helpers$1.options._parseFont(optionTicks);\n\n      var h = me._maxLabelLines * tickFont.lineHeight + padding || 0; // Calculate space needed for 1 tick in axis direction.\n\n      return isHorizontal ? h * cos > w * sin ? w / cos : h / sin : h * sin < w * cos ? h / cos : w / sin;\n    },\n\n    /**\n     * @private\n     */\n    _isVisible: function _isVisible() {\n      var me = this;\n      var chart = me.chart;\n      var display = me.options.display;\n      var i, ilen, meta;\n\n      if (display !== 'auto') {\n        return !!display;\n      } // When 'auto', the scale is visible if at least one associated dataset is visible.\n\n\n      for (i = 0, ilen = chart.data.datasets.length; i < ilen; ++i) {\n        if (chart.isDatasetVisible(i)) {\n          meta = chart.getDatasetMeta(i);\n\n          if (meta.xAxisID === me.id || meta.yAxisID === me.id) {\n            return true;\n          }\n        }\n      }\n\n      return false;\n    },\n\n    /**\n     * Actually draw the scale on the canvas\n     * @param {object} chartArea - the area of the chart to draw full grid lines on\n     */\n    draw: function draw(chartArea) {\n      var me = this;\n      var options = me.options;\n\n      if (!me._isVisible()) {\n        return;\n      }\n\n      var chart = me.chart;\n      var context = me.ctx;\n      var globalDefaults = core_defaults.global;\n      var defaultFontColor = globalDefaults.defaultFontColor;\n      var optionTicks = options.ticks.minor;\n      var optionMajorTicks = options.ticks.major || optionTicks;\n      var gridLines = options.gridLines;\n      var scaleLabel = options.scaleLabel;\n      var position = options.position;\n      var isRotated = me.labelRotation !== 0;\n      var isMirrored = optionTicks.mirror;\n      var isHorizontal = me.isHorizontal();\n      var parseFont = helpers$1.options._parseFont;\n      var ticks = optionTicks.display && optionTicks.autoSkip ? me._autoSkip(me.getTicks()) : me.getTicks();\n      var tickFontColor = valueOrDefault$9(optionTicks.fontColor, defaultFontColor);\n      var tickFont = parseFont(optionTicks);\n      var lineHeight = tickFont.lineHeight;\n      var majorTickFontColor = valueOrDefault$9(optionMajorTicks.fontColor, defaultFontColor);\n      var majorTickFont = parseFont(optionMajorTicks);\n      var tickPadding = optionTicks.padding;\n      var labelOffset = optionTicks.labelOffset;\n      var tl = gridLines.drawTicks ? gridLines.tickMarkLength : 0;\n      var scaleLabelFontColor = valueOrDefault$9(scaleLabel.fontColor, defaultFontColor);\n      var scaleLabelFont = parseFont(scaleLabel);\n      var scaleLabelPadding = helpers$1.options.toPadding(scaleLabel.padding);\n      var labelRotationRadians = helpers$1.toRadians(me.labelRotation);\n      var itemsToDraw = [];\n      var axisWidth = gridLines.drawBorder ? valueAtIndexOrDefault(gridLines.lineWidth, 0, 0) : 0;\n      var alignPixel = helpers$1._alignPixel;\n      var borderValue, tickStart, tickEnd;\n\n      if (position === 'top') {\n        borderValue = alignPixel(chart, me.bottom, axisWidth);\n        tickStart = me.bottom - tl;\n        tickEnd = borderValue - axisWidth / 2;\n      } else if (position === 'bottom') {\n        borderValue = alignPixel(chart, me.top, axisWidth);\n        tickStart = borderValue + axisWidth / 2;\n        tickEnd = me.top + tl;\n      } else if (position === 'left') {\n        borderValue = alignPixel(chart, me.right, axisWidth);\n        tickStart = me.right - tl;\n        tickEnd = borderValue - axisWidth / 2;\n      } else {\n        borderValue = alignPixel(chart, me.left, axisWidth);\n        tickStart = borderValue + axisWidth / 2;\n        tickEnd = me.left + tl;\n      }\n\n      var epsilon = 0.0000001; // 0.0000001 is margin in pixels for Accumulated error.\n\n      helpers$1.each(ticks, function (tick, index) {\n        // autoskipper skipped this tick (#4635)\n        if (helpers$1.isNullOrUndef(tick.label)) {\n          return;\n        }\n\n        var label = tick.label;\n        var lineWidth, lineColor, borderDash, borderDashOffset;\n\n        if (index === me.zeroLineIndex && options.offset === gridLines.offsetGridLines) {\n          // Draw the first index specially\n          lineWidth = gridLines.zeroLineWidth;\n          lineColor = gridLines.zeroLineColor;\n          borderDash = gridLines.zeroLineBorderDash || [];\n          borderDashOffset = gridLines.zeroLineBorderDashOffset || 0.0;\n        } else {\n          lineWidth = valueAtIndexOrDefault(gridLines.lineWidth, index);\n          lineColor = valueAtIndexOrDefault(gridLines.color, index);\n          borderDash = gridLines.borderDash || [];\n          borderDashOffset = gridLines.borderDashOffset || 0.0;\n        } // Common properties\n\n\n        var tx1, ty1, tx2, ty2, x1, y1, x2, y2, labelX, labelY, textOffset, textAlign;\n        var labelCount = helpers$1.isArray(label) ? label.length : 1;\n        var lineValue = getPixelForGridLine(me, index, gridLines.offsetGridLines);\n\n        if (isHorizontal) {\n          var labelYOffset = tl + tickPadding;\n\n          if (lineValue < me.left - epsilon) {\n            lineColor = 'rgba(0,0,0,0)';\n          }\n\n          tx1 = tx2 = x1 = x2 = alignPixel(chart, lineValue, lineWidth);\n          ty1 = tickStart;\n          ty2 = tickEnd;\n          labelX = me.getPixelForTick(index) + labelOffset; // x values for optionTicks (need to consider offsetLabel option)\n\n          if (position === 'top') {\n            y1 = alignPixel(chart, chartArea.top, axisWidth) + axisWidth / 2;\n            y2 = chartArea.bottom;\n            textOffset = ((!isRotated ? 0.5 : 1) - labelCount) * lineHeight;\n            textAlign = !isRotated ? 'center' : 'left';\n            labelY = me.bottom - labelYOffset;\n          } else {\n            y1 = chartArea.top;\n            y2 = alignPixel(chart, chartArea.bottom, axisWidth) - axisWidth / 2;\n            textOffset = (!isRotated ? 0.5 : 0) * lineHeight;\n            textAlign = !isRotated ? 'center' : 'right';\n            labelY = me.top + labelYOffset;\n          }\n        } else {\n          var labelXOffset = (isMirrored ? 0 : tl) + tickPadding;\n\n          if (lineValue < me.top - epsilon) {\n            lineColor = 'rgba(0,0,0,0)';\n          }\n\n          tx1 = tickStart;\n          tx2 = tickEnd;\n          ty1 = ty2 = y1 = y2 = alignPixel(chart, lineValue, lineWidth);\n          labelY = me.getPixelForTick(index) + labelOffset;\n          textOffset = (1 - labelCount) * lineHeight / 2;\n\n          if (position === 'left') {\n            x1 = alignPixel(chart, chartArea.left, axisWidth) + axisWidth / 2;\n            x2 = chartArea.right;\n            textAlign = isMirrored ? 'left' : 'right';\n            labelX = me.right - labelXOffset;\n          } else {\n            x1 = chartArea.left;\n            x2 = alignPixel(chart, chartArea.right, axisWidth) - axisWidth / 2;\n            textAlign = isMirrored ? 'right' : 'left';\n            labelX = me.left + labelXOffset;\n          }\n        }\n\n        itemsToDraw.push({\n          tx1: tx1,\n          ty1: ty1,\n          tx2: tx2,\n          ty2: ty2,\n          x1: x1,\n          y1: y1,\n          x2: x2,\n          y2: y2,\n          labelX: labelX,\n          labelY: labelY,\n          glWidth: lineWidth,\n          glColor: lineColor,\n          glBorderDash: borderDash,\n          glBorderDashOffset: borderDashOffset,\n          rotation: -1 * labelRotationRadians,\n          label: label,\n          major: tick.major,\n          textOffset: textOffset,\n          textAlign: textAlign\n        });\n      }); // Draw all of the tick labels, tick marks, and grid lines at the correct places\n\n      helpers$1.each(itemsToDraw, function (itemToDraw) {\n        var glWidth = itemToDraw.glWidth;\n        var glColor = itemToDraw.glColor;\n\n        if (gridLines.display && glWidth && glColor) {\n          context.save();\n          context.lineWidth = glWidth;\n          context.strokeStyle = glColor;\n\n          if (context.setLineDash) {\n            context.setLineDash(itemToDraw.glBorderDash);\n            context.lineDashOffset = itemToDraw.glBorderDashOffset;\n          }\n\n          context.beginPath();\n\n          if (gridLines.drawTicks) {\n            context.moveTo(itemToDraw.tx1, itemToDraw.ty1);\n            context.lineTo(itemToDraw.tx2, itemToDraw.ty2);\n          }\n\n          if (gridLines.drawOnChartArea) {\n            context.moveTo(itemToDraw.x1, itemToDraw.y1);\n            context.lineTo(itemToDraw.x2, itemToDraw.y2);\n          }\n\n          context.stroke();\n          context.restore();\n        }\n\n        if (optionTicks.display) {\n          // Make sure we draw text in the correct color and font\n          context.save();\n          context.translate(itemToDraw.labelX, itemToDraw.labelY);\n          context.rotate(itemToDraw.rotation);\n          context.font = itemToDraw.major ? majorTickFont.string : tickFont.string;\n          context.fillStyle = itemToDraw.major ? majorTickFontColor : tickFontColor;\n          context.textBaseline = 'middle';\n          context.textAlign = itemToDraw.textAlign;\n          var label = itemToDraw.label;\n          var y = itemToDraw.textOffset;\n\n          if (helpers$1.isArray(label)) {\n            for (var i = 0; i < label.length; ++i) {\n              // We just make sure the multiline element is a string here..\n              context.fillText('' + label[i], 0, y);\n              y += lineHeight;\n            }\n          } else {\n            context.fillText(label, 0, y);\n          }\n\n          context.restore();\n        }\n      });\n\n      if (scaleLabel.display) {\n        // Draw the scale label\n        var scaleLabelX;\n        var scaleLabelY;\n        var rotation = 0;\n        var halfLineHeight = scaleLabelFont.lineHeight / 2;\n\n        if (isHorizontal) {\n          scaleLabelX = me.left + (me.right - me.left) / 2; // midpoint of the width\n\n          scaleLabelY = position === 'bottom' ? me.bottom - halfLineHeight - scaleLabelPadding.bottom : me.top + halfLineHeight + scaleLabelPadding.top;\n        } else {\n          var isLeft = position === 'left';\n          scaleLabelX = isLeft ? me.left + halfLineHeight + scaleLabelPadding.top : me.right - halfLineHeight - scaleLabelPadding.top;\n          scaleLabelY = me.top + (me.bottom - me.top) / 2;\n          rotation = isLeft ? -0.5 * Math.PI : 0.5 * Math.PI;\n        }\n\n        context.save();\n        context.translate(scaleLabelX, scaleLabelY);\n        context.rotate(rotation);\n        context.textAlign = 'center';\n        context.textBaseline = 'middle';\n        context.fillStyle = scaleLabelFontColor; // render in correct colour\n\n        context.font = scaleLabelFont.string;\n        context.fillText(scaleLabel.labelString, 0, 0);\n        context.restore();\n      }\n\n      if (axisWidth) {\n        // Draw the line at the edge of the axis\n        var firstLineWidth = axisWidth;\n        var lastLineWidth = valueAtIndexOrDefault(gridLines.lineWidth, ticks.length - 1, 0);\n        var x1, x2, y1, y2;\n\n        if (isHorizontal) {\n          x1 = alignPixel(chart, me.left, firstLineWidth) - firstLineWidth / 2;\n          x2 = alignPixel(chart, me.right, lastLineWidth) + lastLineWidth / 2;\n          y1 = y2 = borderValue;\n        } else {\n          y1 = alignPixel(chart, me.top, firstLineWidth) - firstLineWidth / 2;\n          y2 = alignPixel(chart, me.bottom, lastLineWidth) + lastLineWidth / 2;\n          x1 = x2 = borderValue;\n        }\n\n        context.lineWidth = axisWidth;\n        context.strokeStyle = valueAtIndexOrDefault(gridLines.color, 0);\n        context.beginPath();\n        context.moveTo(x1, y1);\n        context.lineTo(x2, y2);\n        context.stroke();\n      }\n    }\n  });\n  var defaultConfig = {\n    position: 'bottom'\n  };\n  var scale_category = core_scale.extend({\n    /**\n    * Internal function to get the correct labels. If data.xLabels or data.yLabels are defined, use those\n    * else fall back to data.labels\n    * @private\n    */\n    getLabels: function getLabels() {\n      var data = this.chart.data;\n      return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels;\n    },\n    determineDataLimits: function determineDataLimits() {\n      var me = this;\n      var labels = me.getLabels();\n      me.minIndex = 0;\n      me.maxIndex = labels.length - 1;\n      var findIndex;\n\n      if (me.options.ticks.min !== undefined) {\n        // user specified min value\n        findIndex = labels.indexOf(me.options.ticks.min);\n        me.minIndex = findIndex !== -1 ? findIndex : me.minIndex;\n      }\n\n      if (me.options.ticks.max !== undefined) {\n        // user specified max value\n        findIndex = labels.indexOf(me.options.ticks.max);\n        me.maxIndex = findIndex !== -1 ? findIndex : me.maxIndex;\n      }\n\n      me.min = labels[me.minIndex];\n      me.max = labels[me.maxIndex];\n    },\n    buildTicks: function buildTicks() {\n      var me = this;\n      var labels = me.getLabels(); // If we are viewing some subset of labels, slice the original array\n\n      me.ticks = me.minIndex === 0 && me.maxIndex === labels.length - 1 ? labels : labels.slice(me.minIndex, me.maxIndex + 1);\n    },\n    getLabelForIndex: function getLabelForIndex(index, datasetIndex) {\n      var me = this;\n      var chart = me.chart;\n\n      if (chart.getDatasetMeta(datasetIndex).controller._getValueScaleId() === me.id) {\n        return me.getRightValue(chart.data.datasets[datasetIndex].data[index]);\n      }\n\n      return me.ticks[index - me.minIndex];\n    },\n    // Used to get data value locations.  Value can either be an index or a numerical value\n    getPixelForValue: function getPixelForValue(value, index) {\n      var me = this;\n      var offset = me.options.offset; // 1 is added because we need the length but we have the indexes\n\n      var offsetAmt = Math.max(me.maxIndex + 1 - me.minIndex - (offset ? 0 : 1), 1); // If value is a data object, then index is the index in the data array,\n      // not the index of the scale. We need to change that.\n\n      var valueCategory;\n\n      if (value !== undefined && value !== null) {\n        valueCategory = me.isHorizontal() ? value.x : value.y;\n      }\n\n      if (valueCategory !== undefined || value !== undefined && isNaN(index)) {\n        var labels = me.getLabels();\n        value = valueCategory || value;\n        var idx = labels.indexOf(value);\n        index = idx !== -1 ? idx : index;\n      }\n\n      if (me.isHorizontal()) {\n        var valueWidth = me.width / offsetAmt;\n        var widthOffset = valueWidth * (index - me.minIndex);\n\n        if (offset) {\n          widthOffset += valueWidth / 2;\n        }\n\n        return me.left + widthOffset;\n      }\n\n      var valueHeight = me.height / offsetAmt;\n      var heightOffset = valueHeight * (index - me.minIndex);\n\n      if (offset) {\n        heightOffset += valueHeight / 2;\n      }\n\n      return me.top + heightOffset;\n    },\n    getPixelForTick: function getPixelForTick(index) {\n      return this.getPixelForValue(this.ticks[index], index + this.minIndex, null);\n    },\n    getValueForPixel: function getValueForPixel(pixel) {\n      var me = this;\n      var offset = me.options.offset;\n      var value;\n      var offsetAmt = Math.max(me._ticks.length - (offset ? 0 : 1), 1);\n      var horz = me.isHorizontal();\n      var valueDimension = (horz ? me.width : me.height) / offsetAmt;\n      pixel -= horz ? me.left : me.top;\n\n      if (offset) {\n        pixel -= valueDimension / 2;\n      }\n\n      if (pixel <= 0) {\n        value = 0;\n      } else {\n        value = Math.round(pixel / valueDimension);\n      }\n\n      return value + me.minIndex;\n    },\n    getBasePixel: function getBasePixel() {\n      return this.bottom;\n    }\n  }); // INTERNAL: static default options, registered in src/index.js\n\n  var _defaults = defaultConfig;\n  scale_category._defaults = _defaults;\n  var noop = helpers$1.noop;\n  var isNullOrUndef = helpers$1.isNullOrUndef;\n  /**\n   * Generate a set of linear ticks\n   * @param generationOptions the options used to generate the ticks\n   * @param dataRange the range of the data\n   * @returns {number[]} array of tick values\n   */\n\n  function generateTicks(generationOptions, dataRange) {\n    var ticks = []; // To get a \"nice\" value for the tick spacing, we will use the appropriately named\n    // \"nice number\" algorithm. See https://stackoverflow.com/questions/8506881/nice-label-algorithm-for-charts-with-minimum-ticks\n    // for details.\n\n    var MIN_SPACING = 1e-14;\n    var stepSize = generationOptions.stepSize;\n    var unit = stepSize || 1;\n    var maxNumSpaces = generationOptions.maxTicks - 1;\n    var min = generationOptions.min;\n    var max = generationOptions.max;\n    var precision = generationOptions.precision;\n    var rmin = dataRange.min;\n    var rmax = dataRange.max;\n    var spacing = helpers$1.niceNum((rmax - rmin) / maxNumSpaces / unit) * unit;\n    var factor, niceMin, niceMax, numSpaces; // Beyond MIN_SPACING floating point numbers being to lose precision\n    // such that we can't do the math necessary to generate ticks\n\n    if (spacing < MIN_SPACING && isNullOrUndef(min) && isNullOrUndef(max)) {\n      return [rmin, rmax];\n    }\n\n    numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n\n    if (numSpaces > maxNumSpaces) {\n      // If the calculated num of spaces exceeds maxNumSpaces, recalculate it\n      spacing = helpers$1.niceNum(numSpaces * spacing / maxNumSpaces / unit) * unit;\n    }\n\n    if (stepSize || isNullOrUndef(precision)) {\n      // If a precision is not specified, calculate factor based on spacing\n      factor = Math.pow(10, helpers$1._decimalPlaces(spacing));\n    } else {\n      // If the user specified a precision, round to that number of decimal places\n      factor = Math.pow(10, precision);\n      spacing = Math.ceil(spacing * factor) / factor;\n    }\n\n    niceMin = Math.floor(rmin / spacing) * spacing;\n    niceMax = Math.ceil(rmax / spacing) * spacing; // If min, max and stepSize is set and they make an evenly spaced scale use it.\n\n    if (stepSize) {\n      // If very close to our whole number, use it.\n      if (!isNullOrUndef(min) && helpers$1.almostWhole(min / spacing, spacing / 1000)) {\n        niceMin = min;\n      }\n\n      if (!isNullOrUndef(max) && helpers$1.almostWhole(max / spacing, spacing / 1000)) {\n        niceMax = max;\n      }\n    }\n\n    numSpaces = (niceMax - niceMin) / spacing; // If very close to our rounded value, use it.\n\n    if (helpers$1.almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n      numSpaces = Math.round(numSpaces);\n    } else {\n      numSpaces = Math.ceil(numSpaces);\n    }\n\n    niceMin = Math.round(niceMin * factor) / factor;\n    niceMax = Math.round(niceMax * factor) / factor;\n    ticks.push(isNullOrUndef(min) ? niceMin : min);\n\n    for (var j = 1; j < numSpaces; ++j) {\n      ticks.push(Math.round((niceMin + j * spacing) * factor) / factor);\n    }\n\n    ticks.push(isNullOrUndef(max) ? niceMax : max);\n    return ticks;\n  }\n\n  var scale_linearbase = core_scale.extend({\n    getRightValue: function getRightValue(value) {\n      if (typeof value === 'string') {\n        return +value;\n      }\n\n      return core_scale.prototype.getRightValue.call(this, value);\n    },\n    handleTickRangeOptions: function handleTickRangeOptions() {\n      var me = this;\n      var opts = me.options;\n      var tickOpts = opts.ticks; // If we are forcing it to begin at 0, but 0 will already be rendered on the chart,\n      // do nothing since that would make the chart weird. If the user really wants a weird chart\n      // axis, they can manually override it\n\n      if (tickOpts.beginAtZero) {\n        var minSign = helpers$1.sign(me.min);\n        var maxSign = helpers$1.sign(me.max);\n\n        if (minSign < 0 && maxSign < 0) {\n          // move the top up to 0\n          me.max = 0;\n        } else if (minSign > 0 && maxSign > 0) {\n          // move the bottom down to 0\n          me.min = 0;\n        }\n      }\n\n      var setMin = tickOpts.min !== undefined || tickOpts.suggestedMin !== undefined;\n      var setMax = tickOpts.max !== undefined || tickOpts.suggestedMax !== undefined;\n\n      if (tickOpts.min !== undefined) {\n        me.min = tickOpts.min;\n      } else if (tickOpts.suggestedMin !== undefined) {\n        if (me.min === null) {\n          me.min = tickOpts.suggestedMin;\n        } else {\n          me.min = Math.min(me.min, tickOpts.suggestedMin);\n        }\n      }\n\n      if (tickOpts.max !== undefined) {\n        me.max = tickOpts.max;\n      } else if (tickOpts.suggestedMax !== undefined) {\n        if (me.max === null) {\n          me.max = tickOpts.suggestedMax;\n        } else {\n          me.max = Math.max(me.max, tickOpts.suggestedMax);\n        }\n      }\n\n      if (setMin !== setMax) {\n        // We set the min or the max but not both.\n        // So ensure that our range is good\n        // Inverted or 0 length range can happen when\n        // ticks.min is set, and no datasets are visible\n        if (me.min >= me.max) {\n          if (setMin) {\n            me.max = me.min + 1;\n          } else {\n            me.min = me.max - 1;\n          }\n        }\n      }\n\n      if (me.min === me.max) {\n        me.max++;\n\n        if (!tickOpts.beginAtZero) {\n          me.min--;\n        }\n      }\n    },\n    getTickLimit: function getTickLimit() {\n      var me = this;\n      var tickOpts = me.options.ticks;\n      var stepSize = tickOpts.stepSize;\n      var maxTicksLimit = tickOpts.maxTicksLimit;\n      var maxTicks;\n\n      if (stepSize) {\n        maxTicks = Math.ceil(me.max / stepSize) - Math.floor(me.min / stepSize) + 1;\n      } else {\n        maxTicks = me._computeTickLimit();\n        maxTicksLimit = maxTicksLimit || 11;\n      }\n\n      if (maxTicksLimit) {\n        maxTicks = Math.min(maxTicksLimit, maxTicks);\n      }\n\n      return maxTicks;\n    },\n    _computeTickLimit: function _computeTickLimit() {\n      return Number.POSITIVE_INFINITY;\n    },\n    handleDirectionalChanges: noop,\n    buildTicks: function buildTicks() {\n      var me = this;\n      var opts = me.options;\n      var tickOpts = opts.ticks; // Figure out what the max number of ticks we can support it is based on the size of\n      // the axis area. For now, we say that the minimum tick spacing in pixels must be 40\n      // We also limit the maximum number of ticks to 11 which gives a nice 10 squares on\n      // the graph. Make sure we always have at least 2 ticks\n\n      var maxTicks = me.getTickLimit();\n      maxTicks = Math.max(2, maxTicks);\n      var numericGeneratorOptions = {\n        maxTicks: maxTicks,\n        min: tickOpts.min,\n        max: tickOpts.max,\n        precision: tickOpts.precision,\n        stepSize: helpers$1.valueOrDefault(tickOpts.fixedStepSize, tickOpts.stepSize)\n      };\n      var ticks = me.ticks = generateTicks(numericGeneratorOptions, me);\n      me.handleDirectionalChanges(); // At this point, we need to update our max and min given the tick values since we have expanded the\n      // range of the scale\n\n      me.max = helpers$1.max(ticks);\n      me.min = helpers$1.min(ticks);\n\n      if (tickOpts.reverse) {\n        ticks.reverse();\n        me.start = me.max;\n        me.end = me.min;\n      } else {\n        me.start = me.min;\n        me.end = me.max;\n      }\n    },\n    convertTicksToLabels: function convertTicksToLabels() {\n      var me = this;\n      me.ticksAsNumbers = me.ticks.slice();\n      me.zeroLineIndex = me.ticks.indexOf(0);\n      core_scale.prototype.convertTicksToLabels.call(me);\n    }\n  });\n  var defaultConfig$1 = {\n    position: 'left',\n    ticks: {\n      callback: core_ticks.formatters.linear\n    }\n  };\n  var scale_linear = scale_linearbase.extend({\n    determineDataLimits: function determineDataLimits() {\n      var me = this;\n      var opts = me.options;\n      var chart = me.chart;\n      var data = chart.data;\n      var datasets = data.datasets;\n      var isHorizontal = me.isHorizontal();\n      var DEFAULT_MIN = 0;\n      var DEFAULT_MAX = 1;\n\n      function IDMatches(meta) {\n        return isHorizontal ? meta.xAxisID === me.id : meta.yAxisID === me.id;\n      } // First Calculate the range\n\n\n      me.min = null;\n      me.max = null;\n      var hasStacks = opts.stacked;\n\n      if (hasStacks === undefined) {\n        helpers$1.each(datasets, function (dataset, datasetIndex) {\n          if (hasStacks) {\n            return;\n          }\n\n          var meta = chart.getDatasetMeta(datasetIndex);\n\n          if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta) && meta.stack !== undefined) {\n            hasStacks = true;\n          }\n        });\n      }\n\n      if (opts.stacked || hasStacks) {\n        var valuesPerStack = {};\n        helpers$1.each(datasets, function (dataset, datasetIndex) {\n          var meta = chart.getDatasetMeta(datasetIndex);\n          var key = [meta.type, // we have a separate stack for stack=undefined datasets when the opts.stacked is undefined\n          opts.stacked === undefined && meta.stack === undefined ? datasetIndex : '', meta.stack].join('.');\n\n          if (valuesPerStack[key] === undefined) {\n            valuesPerStack[key] = {\n              positiveValues: [],\n              negativeValues: []\n            };\n          } // Store these per type\n\n\n          var positiveValues = valuesPerStack[key].positiveValues;\n          var negativeValues = valuesPerStack[key].negativeValues;\n\n          if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\n            helpers$1.each(dataset.data, function (rawValue, index) {\n              var value = +me.getRightValue(rawValue);\n\n              if (isNaN(value) || meta.data[index].hidden) {\n                return;\n              }\n\n              positiveValues[index] = positiveValues[index] || 0;\n              negativeValues[index] = negativeValues[index] || 0;\n\n              if (opts.relativePoints) {\n                positiveValues[index] = 100;\n              } else if (value < 0) {\n                negativeValues[index] += value;\n              } else {\n                positiveValues[index] += value;\n              }\n            });\n          }\n        });\n        helpers$1.each(valuesPerStack, function (valuesForType) {\n          var values = valuesForType.positiveValues.concat(valuesForType.negativeValues);\n          var minVal = helpers$1.min(values);\n          var maxVal = helpers$1.max(values);\n          me.min = me.min === null ? minVal : Math.min(me.min, minVal);\n          me.max = me.max === null ? maxVal : Math.max(me.max, maxVal);\n        });\n      } else {\n        helpers$1.each(datasets, function (dataset, datasetIndex) {\n          var meta = chart.getDatasetMeta(datasetIndex);\n\n          if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\n            helpers$1.each(dataset.data, function (rawValue, index) {\n              var value = +me.getRightValue(rawValue);\n\n              if (isNaN(value) || meta.data[index].hidden) {\n                return;\n              }\n\n              if (me.min === null) {\n                me.min = value;\n              } else if (value < me.min) {\n                me.min = value;\n              }\n\n              if (me.max === null) {\n                me.max = value;\n              } else if (value > me.max) {\n                me.max = value;\n              }\n            });\n          }\n        });\n      }\n\n      me.min = isFinite(me.min) && !isNaN(me.min) ? me.min : DEFAULT_MIN;\n      me.max = isFinite(me.max) && !isNaN(me.max) ? me.max : DEFAULT_MAX; // Common base implementation to handle ticks.min, ticks.max, ticks.beginAtZero\n\n      this.handleTickRangeOptions();\n    },\n    // Returns the maximum number of ticks based on the scale dimension\n    _computeTickLimit: function _computeTickLimit() {\n      var me = this;\n      var tickFont;\n\n      if (me.isHorizontal()) {\n        return Math.ceil(me.width / 40);\n      }\n\n      tickFont = helpers$1.options._parseFont(me.options.ticks);\n      return Math.ceil(me.height / tickFont.lineHeight);\n    },\n    // Called after the ticks are built. We need\n    handleDirectionalChanges: function handleDirectionalChanges() {\n      if (!this.isHorizontal()) {\n        // We are in a vertical orientation. The top value is the highest. So reverse the array\n        this.ticks.reverse();\n      }\n    },\n    getLabelForIndex: function getLabelForIndex(index, datasetIndex) {\n      return +this.getRightValue(this.chart.data.datasets[datasetIndex].data[index]);\n    },\n    // Utils\n    getPixelForValue: function getPixelForValue(value) {\n      // This must be called after fit has been run so that\n      // this.left, this.top, this.right, and this.bottom have been defined\n      var me = this;\n      var start = me.start;\n      var rightValue = +me.getRightValue(value);\n      var pixel;\n      var range = me.end - start;\n\n      if (me.isHorizontal()) {\n        pixel = me.left + me.width / range * (rightValue - start);\n      } else {\n        pixel = me.bottom - me.height / range * (rightValue - start);\n      }\n\n      return pixel;\n    },\n    getValueForPixel: function getValueForPixel(pixel) {\n      var me = this;\n      var isHorizontal = me.isHorizontal();\n      var innerDimension = isHorizontal ? me.width : me.height;\n      var offset = (isHorizontal ? pixel - me.left : me.bottom - pixel) / innerDimension;\n      return me.start + (me.end - me.start) * offset;\n    },\n    getPixelForTick: function getPixelForTick(index) {\n      return this.getPixelForValue(this.ticksAsNumbers[index]);\n    }\n  }); // INTERNAL: static default options, registered in src/index.js\n\n  var _defaults$1 = defaultConfig$1;\n  scale_linear._defaults = _defaults$1;\n  var valueOrDefault$a = helpers$1.valueOrDefault;\n  /**\n   * Generate a set of logarithmic ticks\n   * @param generationOptions the options used to generate the ticks\n   * @param dataRange the range of the data\n   * @returns {number[]} array of tick values\n   */\n\n  function generateTicks$1(generationOptions, dataRange) {\n    var ticks = [];\n    var tickVal = valueOrDefault$a(generationOptions.min, Math.pow(10, Math.floor(helpers$1.log10(dataRange.min))));\n    var endExp = Math.floor(helpers$1.log10(dataRange.max));\n    var endSignificand = Math.ceil(dataRange.max / Math.pow(10, endExp));\n    var exp, significand;\n\n    if (tickVal === 0) {\n      exp = Math.floor(helpers$1.log10(dataRange.minNotZero));\n      significand = Math.floor(dataRange.minNotZero / Math.pow(10, exp));\n      ticks.push(tickVal);\n      tickVal = significand * Math.pow(10, exp);\n    } else {\n      exp = Math.floor(helpers$1.log10(tickVal));\n      significand = Math.floor(tickVal / Math.pow(10, exp));\n    }\n\n    var precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n\n    do {\n      ticks.push(tickVal);\n      ++significand;\n\n      if (significand === 10) {\n        significand = 1;\n        ++exp;\n        precision = exp >= 0 ? 1 : precision;\n      }\n\n      tickVal = Math.round(significand * Math.pow(10, exp) * precision) / precision;\n    } while (exp < endExp || exp === endExp && significand < endSignificand);\n\n    var lastTick = valueOrDefault$a(generationOptions.max, tickVal);\n    ticks.push(lastTick);\n    return ticks;\n  }\n\n  var defaultConfig$2 = {\n    position: 'left',\n    // label settings\n    ticks: {\n      callback: core_ticks.formatters.logarithmic\n    }\n  }; // TODO(v3): change this to positiveOrDefault\n\n  function nonNegativeOrDefault(value, defaultValue) {\n    return helpers$1.isFinite(value) && value >= 0 ? value : defaultValue;\n  }\n\n  var scale_logarithmic = core_scale.extend({\n    determineDataLimits: function determineDataLimits() {\n      var me = this;\n      var opts = me.options;\n      var chart = me.chart;\n      var data = chart.data;\n      var datasets = data.datasets;\n      var isHorizontal = me.isHorizontal();\n\n      function IDMatches(meta) {\n        return isHorizontal ? meta.xAxisID === me.id : meta.yAxisID === me.id;\n      } // Calculate Range\n\n\n      me.min = null;\n      me.max = null;\n      me.minNotZero = null;\n      var hasStacks = opts.stacked;\n\n      if (hasStacks === undefined) {\n        helpers$1.each(datasets, function (dataset, datasetIndex) {\n          if (hasStacks) {\n            return;\n          }\n\n          var meta = chart.getDatasetMeta(datasetIndex);\n\n          if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta) && meta.stack !== undefined) {\n            hasStacks = true;\n          }\n        });\n      }\n\n      if (opts.stacked || hasStacks) {\n        var valuesPerStack = {};\n        helpers$1.each(datasets, function (dataset, datasetIndex) {\n          var meta = chart.getDatasetMeta(datasetIndex);\n          var key = [meta.type, // we have a separate stack for stack=undefined datasets when the opts.stacked is undefined\n          opts.stacked === undefined && meta.stack === undefined ? datasetIndex : '', meta.stack].join('.');\n\n          if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\n            if (valuesPerStack[key] === undefined) {\n              valuesPerStack[key] = [];\n            }\n\n            helpers$1.each(dataset.data, function (rawValue, index) {\n              var values = valuesPerStack[key];\n              var value = +me.getRightValue(rawValue); // invalid, hidden and negative values are ignored\n\n              if (isNaN(value) || meta.data[index].hidden || value < 0) {\n                return;\n              }\n\n              values[index] = values[index] || 0;\n              values[index] += value;\n            });\n          }\n        });\n        helpers$1.each(valuesPerStack, function (valuesForType) {\n          if (valuesForType.length > 0) {\n            var minVal = helpers$1.min(valuesForType);\n            var maxVal = helpers$1.max(valuesForType);\n            me.min = me.min === null ? minVal : Math.min(me.min, minVal);\n            me.max = me.max === null ? maxVal : Math.max(me.max, maxVal);\n          }\n        });\n      } else {\n        helpers$1.each(datasets, function (dataset, datasetIndex) {\n          var meta = chart.getDatasetMeta(datasetIndex);\n\n          if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\n            helpers$1.each(dataset.data, function (rawValue, index) {\n              var value = +me.getRightValue(rawValue); // invalid, hidden and negative values are ignored\n\n              if (isNaN(value) || meta.data[index].hidden || value < 0) {\n                return;\n              }\n\n              if (me.min === null) {\n                me.min = value;\n              } else if (value < me.min) {\n                me.min = value;\n              }\n\n              if (me.max === null) {\n                me.max = value;\n              } else if (value > me.max) {\n                me.max = value;\n              }\n\n              if (value !== 0 && (me.minNotZero === null || value < me.minNotZero)) {\n                me.minNotZero = value;\n              }\n            });\n          }\n        });\n      } // Common base implementation to handle ticks.min, ticks.max\n\n\n      this.handleTickRangeOptions();\n    },\n    handleTickRangeOptions: function handleTickRangeOptions() {\n      var me = this;\n      var tickOpts = me.options.ticks;\n      var DEFAULT_MIN = 1;\n      var DEFAULT_MAX = 10;\n      me.min = nonNegativeOrDefault(tickOpts.min, me.min);\n      me.max = nonNegativeOrDefault(tickOpts.max, me.max);\n\n      if (me.min === me.max) {\n        if (me.min !== 0 && me.min !== null) {\n          me.min = Math.pow(10, Math.floor(helpers$1.log10(me.min)) - 1);\n          me.max = Math.pow(10, Math.floor(helpers$1.log10(me.max)) + 1);\n        } else {\n          me.min = DEFAULT_MIN;\n          me.max = DEFAULT_MAX;\n        }\n      }\n\n      if (me.min === null) {\n        me.min = Math.pow(10, Math.floor(helpers$1.log10(me.max)) - 1);\n      }\n\n      if (me.max === null) {\n        me.max = me.min !== 0 ? Math.pow(10, Math.floor(helpers$1.log10(me.min)) + 1) : DEFAULT_MAX;\n      }\n\n      if (me.minNotZero === null) {\n        if (me.min > 0) {\n          me.minNotZero = me.min;\n        } else if (me.max < 1) {\n          me.minNotZero = Math.pow(10, Math.floor(helpers$1.log10(me.max)));\n        } else {\n          me.minNotZero = DEFAULT_MIN;\n        }\n      }\n    },\n    buildTicks: function buildTicks() {\n      var me = this;\n      var tickOpts = me.options.ticks;\n      var reverse = !me.isHorizontal();\n      var generationOptions = {\n        min: nonNegativeOrDefault(tickOpts.min),\n        max: nonNegativeOrDefault(tickOpts.max)\n      };\n      var ticks = me.ticks = generateTicks$1(generationOptions, me); // At this point, we need to update our max and min given the tick values since we have expanded the\n      // range of the scale\n\n      me.max = helpers$1.max(ticks);\n      me.min = helpers$1.min(ticks);\n\n      if (tickOpts.reverse) {\n        reverse = !reverse;\n        me.start = me.max;\n        me.end = me.min;\n      } else {\n        me.start = me.min;\n        me.end = me.max;\n      }\n\n      if (reverse) {\n        ticks.reverse();\n      }\n    },\n    convertTicksToLabels: function convertTicksToLabels() {\n      this.tickValues = this.ticks.slice();\n      core_scale.prototype.convertTicksToLabels.call(this);\n    },\n    // Get the correct tooltip label\n    getLabelForIndex: function getLabelForIndex(index, datasetIndex) {\n      return +this.getRightValue(this.chart.data.datasets[datasetIndex].data[index]);\n    },\n    getPixelForTick: function getPixelForTick(index) {\n      return this.getPixelForValue(this.tickValues[index]);\n    },\n\n    /**\n     * Returns the value of the first tick.\n     * @param {number} value - The minimum not zero value.\n     * @return {number} The first tick value.\n     * @private\n     */\n    _getFirstTickValue: function _getFirstTickValue(value) {\n      var exp = Math.floor(helpers$1.log10(value));\n      var significand = Math.floor(value / Math.pow(10, exp));\n      return significand * Math.pow(10, exp);\n    },\n    getPixelForValue: function getPixelForValue(value) {\n      var me = this;\n      var tickOpts = me.options.ticks;\n      var reverse = tickOpts.reverse;\n      var log10 = helpers$1.log10;\n\n      var firstTickValue = me._getFirstTickValue(me.minNotZero);\n\n      var offset = 0;\n      var innerDimension, pixel, start, end, sign;\n      value = +me.getRightValue(value);\n\n      if (reverse) {\n        start = me.end;\n        end = me.start;\n        sign = -1;\n      } else {\n        start = me.start;\n        end = me.end;\n        sign = 1;\n      }\n\n      if (me.isHorizontal()) {\n        innerDimension = me.width;\n        pixel = reverse ? me.right : me.left;\n      } else {\n        innerDimension = me.height;\n        sign *= -1; // invert, since the upper-left corner of the canvas is at pixel (0, 0)\n\n        pixel = reverse ? me.top : me.bottom;\n      }\n\n      if (value !== start) {\n        if (start === 0) {\n          // include zero tick\n          offset = valueOrDefault$a(tickOpts.fontSize, core_defaults.global.defaultFontSize);\n          innerDimension -= offset;\n          start = firstTickValue;\n        }\n\n        if (value !== 0) {\n          offset += innerDimension / (log10(end) - log10(start)) * (log10(value) - log10(start));\n        }\n\n        pixel += sign * offset;\n      }\n\n      return pixel;\n    },\n    getValueForPixel: function getValueForPixel(pixel) {\n      var me = this;\n      var tickOpts = me.options.ticks;\n      var reverse = tickOpts.reverse;\n      var log10 = helpers$1.log10;\n\n      var firstTickValue = me._getFirstTickValue(me.minNotZero);\n\n      var innerDimension, start, end, value;\n\n      if (reverse) {\n        start = me.end;\n        end = me.start;\n      } else {\n        start = me.start;\n        end = me.end;\n      }\n\n      if (me.isHorizontal()) {\n        innerDimension = me.width;\n        value = reverse ? me.right - pixel : pixel - me.left;\n      } else {\n        innerDimension = me.height;\n        value = reverse ? pixel - me.top : me.bottom - pixel;\n      }\n\n      if (value !== start) {\n        if (start === 0) {\n          // include zero tick\n          var offset = valueOrDefault$a(tickOpts.fontSize, core_defaults.global.defaultFontSize);\n          value -= offset;\n          innerDimension -= offset;\n          start = firstTickValue;\n        }\n\n        value *= log10(end) - log10(start);\n        value /= innerDimension;\n        value = Math.pow(10, log10(start) + value);\n      }\n\n      return value;\n    }\n  }); // INTERNAL: static default options, registered in src/index.js\n\n  var _defaults$2 = defaultConfig$2;\n  scale_logarithmic._defaults = _defaults$2;\n  var valueOrDefault$b = helpers$1.valueOrDefault;\n  var valueAtIndexOrDefault$1 = helpers$1.valueAtIndexOrDefault;\n  var resolve$7 = helpers$1.options.resolve;\n  var defaultConfig$3 = {\n    display: true,\n    // Boolean - Whether to animate scaling the chart from the centre\n    animate: true,\n    position: 'chartArea',\n    angleLines: {\n      display: true,\n      color: 'rgba(0, 0, 0, 0.1)',\n      lineWidth: 1,\n      borderDash: [],\n      borderDashOffset: 0.0\n    },\n    gridLines: {\n      circular: false\n    },\n    // label settings\n    ticks: {\n      // Boolean - Show a backdrop to the scale label\n      showLabelBackdrop: true,\n      // String - The colour of the label backdrop\n      backdropColor: 'rgba(255,255,255,0.75)',\n      // Number - The backdrop padding above & below the label in pixels\n      backdropPaddingY: 2,\n      // Number - The backdrop padding to the side of the label in pixels\n      backdropPaddingX: 2,\n      callback: core_ticks.formatters.linear\n    },\n    pointLabels: {\n      // Boolean - if true, show point labels\n      display: true,\n      // Number - Point label font size in pixels\n      fontSize: 10,\n      // Function - Used to convert point labels\n      callback: function callback(label) {\n        return label;\n      }\n    }\n  };\n\n  function getValueCount(scale) {\n    var opts = scale.options;\n    return opts.angleLines.display || opts.pointLabels.display ? scale.chart.data.labels.length : 0;\n  }\n\n  function getTickBackdropHeight(opts) {\n    var tickOpts = opts.ticks;\n\n    if (tickOpts.display && opts.display) {\n      return valueOrDefault$b(tickOpts.fontSize, core_defaults.global.defaultFontSize) + tickOpts.backdropPaddingY * 2;\n    }\n\n    return 0;\n  }\n\n  function measureLabelSize(ctx, lineHeight, label) {\n    if (helpers$1.isArray(label)) {\n      return {\n        w: helpers$1.longestText(ctx, ctx.font, label),\n        h: label.length * lineHeight\n      };\n    }\n\n    return {\n      w: ctx.measureText(label).width,\n      h: lineHeight\n    };\n  }\n\n  function determineLimits(angle, pos, size, min, max) {\n    if (angle === min || angle === max) {\n      return {\n        start: pos - size / 2,\n        end: pos + size / 2\n      };\n    } else if (angle < min || angle > max) {\n      return {\n        start: pos - size,\n        end: pos\n      };\n    }\n\n    return {\n      start: pos,\n      end: pos + size\n    };\n  }\n  /**\n   * Helper function to fit a radial linear scale with point labels\n   */\n\n\n  function fitWithPointLabels(scale) {\n    // Right, this is really confusing and there is a lot of maths going on here\n    // The gist of the problem is here: https://gist.github.com/nnnick/696cc9c55f4b0beb8fe9\n    //\n    // Reaction: https://dl.dropboxusercontent.com/u/34601363/toomuchscience.gif\n    //\n    // Solution:\n    //\n    // We assume the radius of the polygon is half the size of the canvas at first\n    // at each index we check if the text overlaps.\n    //\n    // Where it does, we store that angle and that index.\n    //\n    // After finding the largest index and angle we calculate how much we need to remove\n    // from the shape radius to move the point inwards by that x.\n    //\n    // We average the left and right distances to get the maximum shape radius that can fit in the box\n    // along with labels.\n    //\n    // Once we have that, we can find the centre point for the chart, by taking the x text protrusion\n    // on each side, removing that from the size, halving it and adding the left x protrusion width.\n    //\n    // This will mean we have a shape fitted to the canvas, as large as it can be with the labels\n    // and position it in the most space efficient manner\n    //\n    // https://dl.dropboxusercontent.com/u/34601363/yeahscience.gif\n    var plFont = helpers$1.options._parseFont(scale.options.pointLabels); // Get maximum radius of the polygon. Either half the height (minus the text width) or half the width.\n    // Use this to calculate the offset + change. - Make sure L/R protrusion is at least 0 to stop issues with centre points\n\n\n    var furthestLimits = {\n      l: 0,\n      r: scale.width,\n      t: 0,\n      b: scale.height - scale.paddingTop\n    };\n    var furthestAngles = {};\n    var i, textSize, pointPosition;\n    scale.ctx.font = plFont.string;\n    scale._pointLabelSizes = [];\n    var valueCount = getValueCount(scale);\n\n    for (i = 0; i < valueCount; i++) {\n      pointPosition = scale.getPointPosition(i, scale.drawingArea + 5);\n      textSize = measureLabelSize(scale.ctx, plFont.lineHeight, scale.pointLabels[i] || '');\n      scale._pointLabelSizes[i] = textSize; // Add quarter circle to make degree 0 mean top of circle\n\n      var angleRadians = scale.getIndexAngle(i);\n      var angle = helpers$1.toDegrees(angleRadians) % 360;\n      var hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n      var vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n\n      if (hLimits.start < furthestLimits.l) {\n        furthestLimits.l = hLimits.start;\n        furthestAngles.l = angleRadians;\n      }\n\n      if (hLimits.end > furthestLimits.r) {\n        furthestLimits.r = hLimits.end;\n        furthestAngles.r = angleRadians;\n      }\n\n      if (vLimits.start < furthestLimits.t) {\n        furthestLimits.t = vLimits.start;\n        furthestAngles.t = angleRadians;\n      }\n\n      if (vLimits.end > furthestLimits.b) {\n        furthestLimits.b = vLimits.end;\n        furthestAngles.b = angleRadians;\n      }\n    }\n\n    scale.setReductions(scale.drawingArea, furthestLimits, furthestAngles);\n  }\n\n  function getTextAlignForAngle(angle) {\n    if (angle === 0 || angle === 180) {\n      return 'center';\n    } else if (angle < 180) {\n      return 'left';\n    }\n\n    return 'right';\n  }\n\n  function fillText(ctx, text, position, lineHeight) {\n    var y = position.y + lineHeight / 2;\n    var i, ilen;\n\n    if (helpers$1.isArray(text)) {\n      for (i = 0, ilen = text.length; i < ilen; ++i) {\n        ctx.fillText(text[i], position.x, y);\n        y += lineHeight;\n      }\n    } else {\n      ctx.fillText(text, position.x, y);\n    }\n  }\n\n  function adjustPointPositionForLabelHeight(angle, textSize, position) {\n    if (angle === 90 || angle === 270) {\n      position.y -= textSize.h / 2;\n    } else if (angle > 270 || angle < 90) {\n      position.y -= textSize.h;\n    }\n  }\n\n  function drawPointLabels(scale) {\n    var ctx = scale.ctx;\n    var opts = scale.options;\n    var angleLineOpts = opts.angleLines;\n    var gridLineOpts = opts.gridLines;\n    var pointLabelOpts = opts.pointLabels;\n    var lineWidth = valueOrDefault$b(angleLineOpts.lineWidth, gridLineOpts.lineWidth);\n    var lineColor = valueOrDefault$b(angleLineOpts.color, gridLineOpts.color);\n    var tickBackdropHeight = getTickBackdropHeight(opts);\n    ctx.save();\n    ctx.lineWidth = lineWidth;\n    ctx.strokeStyle = lineColor;\n\n    if (ctx.setLineDash) {\n      ctx.setLineDash(resolve$7([angleLineOpts.borderDash, gridLineOpts.borderDash, []]));\n      ctx.lineDashOffset = resolve$7([angleLineOpts.borderDashOffset, gridLineOpts.borderDashOffset, 0.0]);\n    }\n\n    var outerDistance = scale.getDistanceFromCenterForValue(opts.ticks.reverse ? scale.min : scale.max); // Point Label Font\n\n    var plFont = helpers$1.options._parseFont(pointLabelOpts);\n\n    ctx.font = plFont.string;\n    ctx.textBaseline = 'middle';\n\n    for (var i = getValueCount(scale) - 1; i >= 0; i--) {\n      if (angleLineOpts.display && lineWidth && lineColor) {\n        var outerPosition = scale.getPointPosition(i, outerDistance);\n        ctx.beginPath();\n        ctx.moveTo(scale.xCenter, scale.yCenter);\n        ctx.lineTo(outerPosition.x, outerPosition.y);\n        ctx.stroke();\n      }\n\n      if (pointLabelOpts.display) {\n        // Extra pixels out for some label spacing\n        var extra = i === 0 ? tickBackdropHeight / 2 : 0;\n        var pointLabelPosition = scale.getPointPosition(i, outerDistance + extra + 5); // Keep this in loop since we may support array properties here\n\n        var pointLabelFontColor = valueAtIndexOrDefault$1(pointLabelOpts.fontColor, i, core_defaults.global.defaultFontColor);\n        ctx.fillStyle = pointLabelFontColor;\n        var angleRadians = scale.getIndexAngle(i);\n        var angle = helpers$1.toDegrees(angleRadians);\n        ctx.textAlign = getTextAlignForAngle(angle);\n        adjustPointPositionForLabelHeight(angle, scale._pointLabelSizes[i], pointLabelPosition);\n        fillText(ctx, scale.pointLabels[i] || '', pointLabelPosition, plFont.lineHeight);\n      }\n    }\n\n    ctx.restore();\n  }\n\n  function drawRadiusLine(scale, gridLineOpts, radius, index) {\n    var ctx = scale.ctx;\n    var circular = gridLineOpts.circular;\n    var valueCount = getValueCount(scale);\n    var lineColor = valueAtIndexOrDefault$1(gridLineOpts.color, index - 1);\n    var lineWidth = valueAtIndexOrDefault$1(gridLineOpts.lineWidth, index - 1);\n    var pointPosition;\n\n    if (!circular && !valueCount || !lineColor || !lineWidth) {\n      return;\n    }\n\n    ctx.save();\n    ctx.strokeStyle = lineColor;\n    ctx.lineWidth = lineWidth;\n\n    if (ctx.setLineDash) {\n      ctx.setLineDash(gridLineOpts.borderDash || []);\n      ctx.lineDashOffset = gridLineOpts.borderDashOffset || 0.0;\n    }\n\n    ctx.beginPath();\n\n    if (circular) {\n      // Draw circular arcs between the points\n      ctx.arc(scale.xCenter, scale.yCenter, radius, 0, Math.PI * 2);\n    } else {\n      // Draw straight lines connecting each index\n      pointPosition = scale.getPointPosition(0, radius);\n      ctx.moveTo(pointPosition.x, pointPosition.y);\n\n      for (var i = 1; i < valueCount; i++) {\n        pointPosition = scale.getPointPosition(i, radius);\n        ctx.lineTo(pointPosition.x, pointPosition.y);\n      }\n    }\n\n    ctx.closePath();\n    ctx.stroke();\n    ctx.restore();\n  }\n\n  function numberOrZero(param) {\n    return helpers$1.isNumber(param) ? param : 0;\n  }\n\n  var scale_radialLinear = scale_linearbase.extend({\n    setDimensions: function setDimensions() {\n      var me = this; // Set the unconstrained dimension before label rotation\n\n      me.width = me.maxWidth;\n      me.height = me.maxHeight;\n      me.paddingTop = getTickBackdropHeight(me.options) / 2;\n      me.xCenter = Math.floor(me.width / 2);\n      me.yCenter = Math.floor((me.height - me.paddingTop) / 2);\n      me.drawingArea = Math.min(me.height - me.paddingTop, me.width) / 2;\n    },\n    determineDataLimits: function determineDataLimits() {\n      var me = this;\n      var chart = me.chart;\n      var min = Number.POSITIVE_INFINITY;\n      var max = Number.NEGATIVE_INFINITY;\n      helpers$1.each(chart.data.datasets, function (dataset, datasetIndex) {\n        if (chart.isDatasetVisible(datasetIndex)) {\n          var meta = chart.getDatasetMeta(datasetIndex);\n          helpers$1.each(dataset.data, function (rawValue, index) {\n            var value = +me.getRightValue(rawValue);\n\n            if (isNaN(value) || meta.data[index].hidden) {\n              return;\n            }\n\n            min = Math.min(value, min);\n            max = Math.max(value, max);\n          });\n        }\n      });\n      me.min = min === Number.POSITIVE_INFINITY ? 0 : min;\n      me.max = max === Number.NEGATIVE_INFINITY ? 0 : max; // Common base implementation to handle ticks.min, ticks.max, ticks.beginAtZero\n\n      me.handleTickRangeOptions();\n    },\n    // Returns the maximum number of ticks based on the scale dimension\n    _computeTickLimit: function _computeTickLimit() {\n      return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n    },\n    convertTicksToLabels: function convertTicksToLabels() {\n      var me = this;\n      scale_linearbase.prototype.convertTicksToLabels.call(me); // Point labels\n\n      me.pointLabels = me.chart.data.labels.map(me.options.pointLabels.callback, me);\n    },\n    getLabelForIndex: function getLabelForIndex(index, datasetIndex) {\n      return +this.getRightValue(this.chart.data.datasets[datasetIndex].data[index]);\n    },\n    fit: function fit() {\n      var me = this;\n      var opts = me.options;\n\n      if (opts.display && opts.pointLabels.display) {\n        fitWithPointLabels(me);\n      } else {\n        me.setCenterPoint(0, 0, 0, 0);\n      }\n    },\n\n    /**\n     * Set radius reductions and determine new radius and center point\n     * @private\n     */\n    setReductions: function setReductions(largestPossibleRadius, furthestLimits, furthestAngles) {\n      var me = this;\n      var radiusReductionLeft = furthestLimits.l / Math.sin(furthestAngles.l);\n      var radiusReductionRight = Math.max(furthestLimits.r - me.width, 0) / Math.sin(furthestAngles.r);\n      var radiusReductionTop = -furthestLimits.t / Math.cos(furthestAngles.t);\n      var radiusReductionBottom = -Math.max(furthestLimits.b - (me.height - me.paddingTop), 0) / Math.cos(furthestAngles.b);\n      radiusReductionLeft = numberOrZero(radiusReductionLeft);\n      radiusReductionRight = numberOrZero(radiusReductionRight);\n      radiusReductionTop = numberOrZero(radiusReductionTop);\n      radiusReductionBottom = numberOrZero(radiusReductionBottom);\n      me.drawingArea = Math.min(Math.floor(largestPossibleRadius - (radiusReductionLeft + radiusReductionRight) / 2), Math.floor(largestPossibleRadius - (radiusReductionTop + radiusReductionBottom) / 2));\n      me.setCenterPoint(radiusReductionLeft, radiusReductionRight, radiusReductionTop, radiusReductionBottom);\n    },\n    setCenterPoint: function setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n      var me = this;\n      var maxRight = me.width - rightMovement - me.drawingArea;\n      var maxLeft = leftMovement + me.drawingArea;\n      var maxTop = topMovement + me.drawingArea;\n      var maxBottom = me.height - me.paddingTop - bottomMovement - me.drawingArea;\n      me.xCenter = Math.floor((maxLeft + maxRight) / 2 + me.left);\n      me.yCenter = Math.floor((maxTop + maxBottom) / 2 + me.top + me.paddingTop);\n    },\n    getIndexAngle: function getIndexAngle(index) {\n      var angleMultiplier = Math.PI * 2 / getValueCount(this);\n      var startAngle = this.chart.options && this.chart.options.startAngle ? this.chart.options.startAngle : 0;\n      var startAngleRadians = startAngle * Math.PI * 2 / 360; // Start from the top instead of right, so remove a quarter of the circle\n\n      return index * angleMultiplier + startAngleRadians;\n    },\n    getDistanceFromCenterForValue: function getDistanceFromCenterForValue(value) {\n      var me = this;\n\n      if (value === null) {\n        return 0; // null always in center\n      } // Take into account half font size + the yPadding of the top value\n\n\n      var scalingFactor = me.drawingArea / (me.max - me.min);\n\n      if (me.options.ticks.reverse) {\n        return (me.max - value) * scalingFactor;\n      }\n\n      return (value - me.min) * scalingFactor;\n    },\n    getPointPosition: function getPointPosition(index, distanceFromCenter) {\n      var me = this;\n      var thisAngle = me.getIndexAngle(index) - Math.PI / 2;\n      return {\n        x: Math.cos(thisAngle) * distanceFromCenter + me.xCenter,\n        y: Math.sin(thisAngle) * distanceFromCenter + me.yCenter\n      };\n    },\n    getPointPositionForValue: function getPointPositionForValue(index, value) {\n      return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n    },\n    getBasePosition: function getBasePosition() {\n      var me = this;\n      var min = me.min;\n      var max = me.max;\n      return me.getPointPositionForValue(0, me.beginAtZero ? 0 : min < 0 && max < 0 ? max : min > 0 && max > 0 ? min : 0);\n    },\n    draw: function draw() {\n      var me = this;\n      var opts = me.options;\n      var gridLineOpts = opts.gridLines;\n      var tickOpts = opts.ticks;\n\n      if (opts.display) {\n        var ctx = me.ctx;\n        var startAngle = this.getIndexAngle(0);\n\n        var tickFont = helpers$1.options._parseFont(tickOpts);\n\n        if (opts.angleLines.display || opts.pointLabels.display) {\n          drawPointLabels(me);\n        }\n\n        helpers$1.each(me.ticks, function (label, index) {\n          // Don't draw a centre value (if it is minimum)\n          if (index > 0 || tickOpts.reverse) {\n            var yCenterOffset = me.getDistanceFromCenterForValue(me.ticksAsNumbers[index]); // Draw circular lines around the scale\n\n            if (gridLineOpts.display && index !== 0) {\n              drawRadiusLine(me, gridLineOpts, yCenterOffset, index);\n            }\n\n            if (tickOpts.display) {\n              var tickFontColor = valueOrDefault$b(tickOpts.fontColor, core_defaults.global.defaultFontColor);\n              ctx.font = tickFont.string;\n              ctx.save();\n              ctx.translate(me.xCenter, me.yCenter);\n              ctx.rotate(startAngle);\n\n              if (tickOpts.showLabelBackdrop) {\n                var labelWidth = ctx.measureText(label).width;\n                ctx.fillStyle = tickOpts.backdropColor;\n                ctx.fillRect(-labelWidth / 2 - tickOpts.backdropPaddingX, -yCenterOffset - tickFont.size / 2 - tickOpts.backdropPaddingY, labelWidth + tickOpts.backdropPaddingX * 2, tickFont.size + tickOpts.backdropPaddingY * 2);\n              }\n\n              ctx.textAlign = 'center';\n              ctx.textBaseline = 'middle';\n              ctx.fillStyle = tickFontColor;\n              ctx.fillText(label, 0, -yCenterOffset);\n              ctx.restore();\n            }\n          }\n        });\n      }\n    }\n  }); // INTERNAL: static default options, registered in src/index.js\n\n  var _defaults$3 = defaultConfig$3;\n  scale_radialLinear._defaults = _defaults$3;\n  var valueOrDefault$c = helpers$1.valueOrDefault; // Integer constants are from the ES6 spec.\n\n  var MIN_INTEGER = Number.MIN_SAFE_INTEGER || -9007199254740991;\n  var MAX_INTEGER = Number.MAX_SAFE_INTEGER || 9007199254740991;\n  var INTERVALS = {\n    millisecond: {\n      common: true,\n      size: 1,\n      steps: [1, 2, 5, 10, 20, 50, 100, 250, 500]\n    },\n    second: {\n      common: true,\n      size: 1000,\n      steps: [1, 2, 5, 10, 15, 30]\n    },\n    minute: {\n      common: true,\n      size: 60000,\n      steps: [1, 2, 5, 10, 15, 30]\n    },\n    hour: {\n      common: true,\n      size: 3600000,\n      steps: [1, 2, 3, 6, 12]\n    },\n    day: {\n      common: true,\n      size: 86400000,\n      steps: [1, 2, 5]\n    },\n    week: {\n      common: false,\n      size: 604800000,\n      steps: [1, 2, 3, 4]\n    },\n    month: {\n      common: true,\n      size: 2.628e9,\n      steps: [1, 2, 3]\n    },\n    quarter: {\n      common: false,\n      size: 7.884e9,\n      steps: [1, 2, 3, 4]\n    },\n    year: {\n      common: true,\n      size: 3.154e10\n    }\n  };\n  var UNITS = Object.keys(INTERVALS);\n\n  function sorter(a, b) {\n    return a - b;\n  }\n\n  function arrayUnique(items) {\n    var hash = {};\n    var out = [];\n    var i, ilen, item;\n\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      item = items[i];\n\n      if (!hash[item]) {\n        hash[item] = true;\n        out.push(item);\n      }\n    }\n\n    return out;\n  }\n  /**\n   * Returns an array of {time, pos} objects used to interpolate a specific `time` or position\n   * (`pos`) on the scale, by searching entries before and after the requested value. `pos` is\n   * a decimal between 0 and 1: 0 being the start of the scale (left or top) and 1 the other\n   * extremity (left + width or top + height). Note that it would be more optimized to directly\n   * store pre-computed pixels, but the scale dimensions are not guaranteed at the time we need\n   * to create the lookup table. The table ALWAYS contains at least two items: min and max.\n   *\n   * @param {number[]} timestamps - timestamps sorted from lowest to highest.\n   * @param {string} distribution - If 'linear', timestamps will be spread linearly along the min\n   * and max range, so basically, the table will contains only two items: {min, 0} and {max, 1}.\n   * If 'series', timestamps will be positioned at the same distance from each other. In this\n   * case, only timestamps that break the time linearity are registered, meaning that in the\n   * best case, all timestamps are linear, the table contains only min and max.\n   */\n\n\n  function buildLookupTable(timestamps, min, max, distribution) {\n    if (distribution === 'linear' || !timestamps.length) {\n      return [{\n        time: min,\n        pos: 0\n      }, {\n        time: max,\n        pos: 1\n      }];\n    }\n\n    var table = [];\n    var items = [min];\n    var i, ilen, prev, curr, next;\n\n    for (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n      curr = timestamps[i];\n\n      if (curr > min && curr < max) {\n        items.push(curr);\n      }\n    }\n\n    items.push(max);\n\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      next = items[i + 1];\n      prev = items[i - 1];\n      curr = items[i]; // only add points that breaks the scale linearity\n\n      if (prev === undefined || next === undefined || Math.round((next + prev) / 2) !== curr) {\n        table.push({\n          time: curr,\n          pos: i / (ilen - 1)\n        });\n      }\n    }\n\n    return table;\n  } // @see adapted from https://www.anujgakhar.com/2014/03/01/binary-search-in-javascript/\n\n\n  function lookup(table, key, value) {\n    var lo = 0;\n    var hi = table.length - 1;\n    var mid, i0, i1;\n\n    while (lo >= 0 && lo <= hi) {\n      mid = lo + hi >> 1;\n      i0 = table[mid - 1] || null;\n      i1 = table[mid];\n\n      if (!i0) {\n        // given value is outside table (before first item)\n        return {\n          lo: null,\n          hi: i1\n        };\n      } else if (i1[key] < value) {\n        lo = mid + 1;\n      } else if (i0[key] > value) {\n        hi = mid - 1;\n      } else {\n        return {\n          lo: i0,\n          hi: i1\n        };\n      }\n    } // given value is outside table (after last item)\n\n\n    return {\n      lo: i1,\n      hi: null\n    };\n  }\n  /**\n   * Linearly interpolates the given source `value` using the table items `skey` values and\n   * returns the associated `tkey` value. For example, interpolate(table, 'time', 42, 'pos')\n   * returns the position for a timestamp equal to 42. If value is out of bounds, values at\n   * index [0, 1] or [n - 1, n] are used for the interpolation.\n   */\n\n\n  function interpolate$1(table, skey, sval, tkey) {\n    var range = lookup(table, skey, sval); // Note: the lookup table ALWAYS contains at least 2 items (min and max)\n\n    var prev = !range.lo ? table[0] : !range.hi ? table[table.length - 2] : range.lo;\n    var next = !range.lo ? table[1] : !range.hi ? table[table.length - 1] : range.hi;\n    var span = next[skey] - prev[skey];\n    var ratio = span ? (sval - prev[skey]) / span : 0;\n    var offset = (next[tkey] - prev[tkey]) * ratio;\n    return prev[tkey] + offset;\n  }\n\n  function toTimestamp(scale, input) {\n    var adapter = scale._adapter;\n    var options = scale.options.time;\n    var parser = options.parser;\n    var format = parser || options.format;\n    var value = input;\n\n    if (typeof parser === 'function') {\n      value = parser(value);\n    } // Only parse if its not a timestamp already\n\n\n    if (!helpers$1.isFinite(value)) {\n      value = typeof format === 'string' ? adapter.parse(value, format) : adapter.parse(value);\n    }\n\n    if (value !== null) {\n      return +value;\n    } // Labels are in an incompatible format and no `parser` has been provided.\n    // The user might still use the deprecated `format` option for parsing.\n\n\n    if (!parser && typeof format === 'function') {\n      value = format(input); // `format` could return something else than a timestamp, if so, parse it\n\n      if (!helpers$1.isFinite(value)) {\n        value = adapter.parse(value);\n      }\n    }\n\n    return value;\n  }\n\n  function parse(scale, input) {\n    if (helpers$1.isNullOrUndef(input)) {\n      return null;\n    }\n\n    var options = scale.options.time;\n    var value = toTimestamp(scale, scale.getRightValue(input));\n\n    if (value === null) {\n      return value;\n    }\n\n    if (options.round) {\n      value = +scale._adapter.startOf(value, options.round);\n    }\n\n    return value;\n  }\n  /**\n   * Returns the number of unit to skip to be able to display up to `capacity` number of ticks\n   * in `unit` for the given `min` / `max` range and respecting the interval steps constraints.\n   */\n\n\n  function determineStepSize(min, max, unit, capacity) {\n    var range = max - min;\n    var interval = INTERVALS[unit];\n    var milliseconds = interval.size;\n    var steps = interval.steps;\n    var i, ilen, factor;\n\n    if (!steps) {\n      return Math.ceil(range / (capacity * milliseconds));\n    }\n\n    for (i = 0, ilen = steps.length; i < ilen; ++i) {\n      factor = steps[i];\n\n      if (Math.ceil(range / (milliseconds * factor)) <= capacity) {\n        break;\n      }\n    }\n\n    return factor;\n  }\n  /**\n   * Figures out what unit results in an appropriate number of auto-generated ticks\n   */\n\n\n  function determineUnitForAutoTicks(minUnit, min, max, capacity) {\n    var ilen = UNITS.length;\n    var i, interval, factor;\n\n    for (i = UNITS.indexOf(minUnit); i < ilen - 1; ++i) {\n      interval = INTERVALS[UNITS[i]];\n      factor = interval.steps ? interval.steps[interval.steps.length - 1] : MAX_INTEGER;\n\n      if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n        return UNITS[i];\n      }\n    }\n\n    return UNITS[ilen - 1];\n  }\n  /**\n   * Figures out what unit to format a set of ticks with\n   */\n\n\n  function determineUnitForFormatting(scale, ticks, minUnit, min, max) {\n    var ilen = UNITS.length;\n    var i, unit;\n\n    for (i = ilen - 1; i >= UNITS.indexOf(minUnit); i--) {\n      unit = UNITS[i];\n\n      if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= ticks.length) {\n        return unit;\n      }\n    }\n\n    return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n  }\n\n  function determineMajorUnit(unit) {\n    for (var i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i) {\n      if (INTERVALS[UNITS[i]].common) {\n        return UNITS[i];\n      }\n    }\n  }\n  /**\n   * Generates a maximum of `capacity` timestamps between min and max, rounded to the\n   * `minor` unit, aligned on the `major` unit and using the given scale time `options`.\n   * Important: this method can return ticks outside the min and max range, it's the\n   * responsibility of the calling code to clamp values if needed.\n   */\n\n\n  function generate(scale, min, max, capacity) {\n    var adapter = scale._adapter;\n    var options = scale.options;\n    var timeOpts = options.time;\n    var minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, capacity);\n    var major = determineMajorUnit(minor);\n    var stepSize = valueOrDefault$c(timeOpts.stepSize, timeOpts.unitStepSize);\n    var weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n    var majorTicksEnabled = options.ticks.major.enabled;\n    var interval = INTERVALS[minor];\n    var first = min;\n    var last = max;\n    var ticks = [];\n    var time;\n\n    if (!stepSize) {\n      stepSize = determineStepSize(min, max, minor, capacity);\n    } // For 'week' unit, handle the first day of week option\n\n\n    if (weekday) {\n      first = +adapter.startOf(first, 'isoWeek', weekday);\n      last = +adapter.startOf(last, 'isoWeek', weekday);\n    } // Align first/last ticks on unit\n\n\n    first = +adapter.startOf(first, weekday ? 'day' : minor);\n    last = +adapter.startOf(last, weekday ? 'day' : minor); // Make sure that the last tick include max\n\n    if (last < max) {\n      last = +adapter.add(last, 1, minor);\n    }\n\n    time = first;\n\n    if (majorTicksEnabled && major && !weekday && !timeOpts.round) {\n      // Align the first tick on the previous `minor` unit aligned on the `major` unit:\n      // we first aligned time on the previous `major` unit then add the number of full\n      // stepSize there is between first and the previous major time.\n      time = +adapter.startOf(time, major);\n      time = +adapter.add(time, ~~((first - time) / (interval.size * stepSize)) * stepSize, minor);\n    }\n\n    for (; time < last; time = +adapter.add(time, stepSize, minor)) {\n      ticks.push(+time);\n    }\n\n    ticks.push(+time);\n    return ticks;\n  }\n  /**\n   * Returns the start and end offsets from edges in the form of {start, end}\n   * where each value is a relative width to the scale and ranges between 0 and 1.\n   * They add extra margins on the both sides by scaling down the original scale.\n   * Offsets are added when the `offset` option is true.\n   */\n\n\n  function computeOffsets(table, ticks, min, max, options) {\n    var start = 0;\n    var end = 0;\n    var first, last;\n\n    if (options.offset && ticks.length) {\n      if (!options.time.min) {\n        first = interpolate$1(table, 'time', ticks[0], 'pos');\n\n        if (ticks.length === 1) {\n          start = 1 - first;\n        } else {\n          start = (interpolate$1(table, 'time', ticks[1], 'pos') - first) / 2;\n        }\n      }\n\n      if (!options.time.max) {\n        last = interpolate$1(table, 'time', ticks[ticks.length - 1], 'pos');\n\n        if (ticks.length === 1) {\n          end = last;\n        } else {\n          end = (last - interpolate$1(table, 'time', ticks[ticks.length - 2], 'pos')) / 2;\n        }\n      }\n    }\n\n    return {\n      start: start,\n      end: end\n    };\n  }\n\n  function ticksFromTimestamps(scale, values, majorUnit) {\n    var ticks = [];\n    var i, ilen, value, major;\n\n    for (i = 0, ilen = values.length; i < ilen; ++i) {\n      value = values[i];\n      major = majorUnit ? value === +scale._adapter.startOf(value, majorUnit) : false;\n      ticks.push({\n        value: value,\n        major: major\n      });\n    }\n\n    return ticks;\n  }\n\n  var defaultConfig$4 = {\n    position: 'bottom',\n\n    /**\n     * Data distribution along the scale:\n     * - 'linear': data are spread according to their time (distances can vary),\n     * - 'series': data are spread at the same distance from each other.\n     * @see https://github.com/chartjs/Chart.js/pull/4507\n     * @since 2.7.0\n     */\n    distribution: 'linear',\n\n    /**\n     * Scale boundary strategy (bypassed by min/max time options)\n     * - `data`: make sure data are fully visible, ticks outside are removed\n     * - `ticks`: make sure ticks are fully visible, data outside are truncated\n     * @see https://github.com/chartjs/Chart.js/pull/4556\n     * @since 2.7.0\n     */\n    bounds: 'data',\n    adapters: {},\n    time: {\n      parser: false,\n      // false == a pattern string from https://momentjs.com/docs/#/parsing/string-format/ or a custom callback that converts its argument to a moment\n      format: false,\n      // DEPRECATED false == date objects, moment object, callback or a pattern string from https://momentjs.com/docs/#/parsing/string-format/\n      unit: false,\n      // false == automatic or override with week, month, year, etc.\n      round: false,\n      // none, or override with week, month, year, etc.\n      displayFormat: false,\n      // DEPRECATED\n      isoWeekday: false,\n      // override week start day - see https://momentjs.com/docs/#/get-set/iso-weekday/\n      minUnit: 'millisecond',\n      displayFormats: {}\n    },\n    ticks: {\n      autoSkip: false,\n\n      /**\n       * Ticks generation input values:\n       * - 'auto': generates \"optimal\" ticks based on scale size and time options.\n       * - 'data': generates ticks from data (including labels from data {t|x|y} objects).\n       * - 'labels': generates ticks from user given `data.labels` values ONLY.\n       * @see https://github.com/chartjs/Chart.js/pull/4507\n       * @since 2.7.0\n       */\n      source: 'auto',\n      major: {\n        enabled: false\n      }\n    }\n  };\n  var scale_time = core_scale.extend({\n    initialize: function initialize() {\n      this.mergeTicksOptions();\n      core_scale.prototype.initialize.call(this);\n    },\n    update: function update() {\n      var me = this;\n      var options = me.options;\n      var time = options.time || (options.time = {});\n      var adapter = me._adapter = new core_adapters._date(options.adapters.date); // DEPRECATIONS: output a message only one time per update\n\n      if (time.format) {\n        console.warn('options.time.format is deprecated and replaced by options.time.parser.');\n      } // Backward compatibility: before introducing adapter, `displayFormats` was\n      // supposed to contain *all* unit/string pairs but this can't be resolved\n      // when loading the scale (adapters are loaded afterward), so let's populate\n      // missing formats on update\n\n\n      helpers$1.mergeIf(time.displayFormats, adapter.formats());\n      return core_scale.prototype.update.apply(me, arguments);\n    },\n\n    /**\n     * Allows data to be referenced via 't' attribute\n     */\n    getRightValue: function getRightValue(rawValue) {\n      if (rawValue && rawValue.t !== undefined) {\n        rawValue = rawValue.t;\n      }\n\n      return core_scale.prototype.getRightValue.call(this, rawValue);\n    },\n    determineDataLimits: function determineDataLimits() {\n      var me = this;\n      var chart = me.chart;\n      var adapter = me._adapter;\n      var timeOpts = me.options.time;\n      var unit = timeOpts.unit || 'day';\n      var min = MAX_INTEGER;\n      var max = MIN_INTEGER;\n      var timestamps = [];\n      var datasets = [];\n      var labels = [];\n      var i, j, ilen, jlen, data, timestamp;\n      var dataLabels = chart.data.labels || []; // Convert labels to timestamps\n\n      for (i = 0, ilen = dataLabels.length; i < ilen; ++i) {\n        labels.push(parse(me, dataLabels[i]));\n      } // Convert data to timestamps\n\n\n      for (i = 0, ilen = (chart.data.datasets || []).length; i < ilen; ++i) {\n        if (chart.isDatasetVisible(i)) {\n          data = chart.data.datasets[i].data; // Let's consider that all data have the same format.\n\n          if (helpers$1.isObject(data[0])) {\n            datasets[i] = [];\n\n            for (j = 0, jlen = data.length; j < jlen; ++j) {\n              timestamp = parse(me, data[j]);\n              timestamps.push(timestamp);\n              datasets[i][j] = timestamp;\n            }\n          } else {\n            for (j = 0, jlen = labels.length; j < jlen; ++j) {\n              timestamps.push(labels[j]);\n            }\n\n            datasets[i] = labels.slice(0);\n          }\n        } else {\n          datasets[i] = [];\n        }\n      }\n\n      if (labels.length) {\n        // Sort labels **after** data have been converted\n        labels = arrayUnique(labels).sort(sorter);\n        min = Math.min(min, labels[0]);\n        max = Math.max(max, labels[labels.length - 1]);\n      }\n\n      if (timestamps.length) {\n        timestamps = arrayUnique(timestamps).sort(sorter);\n        min = Math.min(min, timestamps[0]);\n        max = Math.max(max, timestamps[timestamps.length - 1]);\n      }\n\n      min = parse(me, timeOpts.min) || min;\n      max = parse(me, timeOpts.max) || max; // In case there is no valid min/max, set limits based on unit time option\n\n      min = min === MAX_INTEGER ? +adapter.startOf(Date.now(), unit) : min;\n      max = max === MIN_INTEGER ? +adapter.endOf(Date.now(), unit) + 1 : max; // Make sure that max is strictly higher than min (required by the lookup table)\n\n      me.min = Math.min(min, max);\n      me.max = Math.max(min + 1, max); // PRIVATE\n\n      me._horizontal = me.isHorizontal();\n      me._table = [];\n      me._timestamps = {\n        data: timestamps,\n        datasets: datasets,\n        labels: labels\n      };\n    },\n    buildTicks: function buildTicks() {\n      var me = this;\n      var min = me.min;\n      var max = me.max;\n      var options = me.options;\n      var timeOpts = options.time;\n      var timestamps = [];\n      var ticks = [];\n      var i, ilen, timestamp;\n\n      switch (options.ticks.source) {\n        case 'data':\n          timestamps = me._timestamps.data;\n          break;\n\n        case 'labels':\n          timestamps = me._timestamps.labels;\n          break;\n\n        case 'auto':\n        default:\n          timestamps = generate(me, min, max, me.getLabelCapacity(min), options);\n      }\n\n      if (options.bounds === 'ticks' && timestamps.length) {\n        min = timestamps[0];\n        max = timestamps[timestamps.length - 1];\n      } // Enforce limits with user min/max options\n\n\n      min = parse(me, timeOpts.min) || min;\n      max = parse(me, timeOpts.max) || max; // Remove ticks outside the min/max range\n\n      for (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n        timestamp = timestamps[i];\n\n        if (timestamp >= min && timestamp <= max) {\n          ticks.push(timestamp);\n        }\n      }\n\n      me.min = min;\n      me.max = max; // PRIVATE\n\n      me._unit = timeOpts.unit || determineUnitForFormatting(me, ticks, timeOpts.minUnit, me.min, me.max);\n      me._majorUnit = determineMajorUnit(me._unit);\n      me._table = buildLookupTable(me._timestamps.data, min, max, options.distribution);\n      me._offsets = computeOffsets(me._table, ticks, min, max, options);\n\n      if (options.ticks.reverse) {\n        ticks.reverse();\n      }\n\n      return ticksFromTimestamps(me, ticks, me._majorUnit);\n    },\n    getLabelForIndex: function getLabelForIndex(index, datasetIndex) {\n      var me = this;\n      var adapter = me._adapter;\n      var data = me.chart.data;\n      var timeOpts = me.options.time;\n      var label = data.labels && index < data.labels.length ? data.labels[index] : '';\n      var value = data.datasets[datasetIndex].data[index];\n\n      if (helpers$1.isObject(value)) {\n        label = me.getRightValue(value);\n      }\n\n      if (timeOpts.tooltipFormat) {\n        return adapter.format(toTimestamp(me, label), timeOpts.tooltipFormat);\n      }\n\n      if (typeof label === 'string') {\n        return label;\n      }\n\n      return adapter.format(toTimestamp(me, label), timeOpts.displayFormats.datetime);\n    },\n\n    /**\n     * Function to format an individual tick mark\n     * @private\n     */\n    tickFormatFunction: function tickFormatFunction(time, index, ticks, format) {\n      var me = this;\n      var adapter = me._adapter;\n      var options = me.options;\n      var formats = options.time.displayFormats;\n      var minorFormat = formats[me._unit];\n      var majorUnit = me._majorUnit;\n      var majorFormat = formats[majorUnit];\n      var majorTime = +adapter.startOf(time, majorUnit);\n      var majorTickOpts = options.ticks.major;\n      var major = majorTickOpts.enabled && majorUnit && majorFormat && time === majorTime;\n      var label = adapter.format(time, format ? format : major ? majorFormat : minorFormat);\n      var tickOpts = major ? majorTickOpts : options.ticks.minor;\n      var formatter = valueOrDefault$c(tickOpts.callback, tickOpts.userCallback);\n      return formatter ? formatter(label, index, ticks) : label;\n    },\n    convertTicksToLabels: function convertTicksToLabels(ticks) {\n      var labels = [];\n      var i, ilen;\n\n      for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n        labels.push(this.tickFormatFunction(ticks[i].value, i, ticks));\n      }\n\n      return labels;\n    },\n\n    /**\n     * @private\n     */\n    getPixelForOffset: function getPixelForOffset(time) {\n      var me = this;\n      var isReverse = me.options.ticks.reverse;\n      var size = me._horizontal ? me.width : me.height;\n      var start = me._horizontal ? isReverse ? me.right : me.left : isReverse ? me.bottom : me.top;\n      var pos = interpolate$1(me._table, 'time', time, 'pos');\n      var offset = size * (me._offsets.start + pos) / (me._offsets.start + 1 + me._offsets.end);\n      return isReverse ? start - offset : start + offset;\n    },\n    getPixelForValue: function getPixelForValue(value, index, datasetIndex) {\n      var me = this;\n      var time = null;\n\n      if (index !== undefined && datasetIndex !== undefined) {\n        time = me._timestamps.datasets[datasetIndex][index];\n      }\n\n      if (time === null) {\n        time = parse(me, value);\n      }\n\n      if (time !== null) {\n        return me.getPixelForOffset(time);\n      }\n    },\n    getPixelForTick: function getPixelForTick(index) {\n      var ticks = this.getTicks();\n      return index >= 0 && index < ticks.length ? this.getPixelForOffset(ticks[index].value) : null;\n    },\n    getValueForPixel: function getValueForPixel(pixel) {\n      var me = this;\n      var size = me._horizontal ? me.width : me.height;\n      var start = me._horizontal ? me.left : me.top;\n      var pos = (size ? (pixel - start) / size : 0) * (me._offsets.start + 1 + me._offsets.start) - me._offsets.end;\n      var time = interpolate$1(me._table, 'pos', pos, 'time'); // DEPRECATION, we should return time directly\n\n      return me._adapter._create(time);\n    },\n\n    /**\n     * Crude approximation of what the label width might be\n     * @private\n     */\n    getLabelWidth: function getLabelWidth(label) {\n      var me = this;\n      var ticksOpts = me.options.ticks;\n      var tickLabelWidth = me.ctx.measureText(label).width;\n      var angle = helpers$1.toRadians(ticksOpts.maxRotation);\n      var cosRotation = Math.cos(angle);\n      var sinRotation = Math.sin(angle);\n      var tickFontSize = valueOrDefault$c(ticksOpts.fontSize, core_defaults.global.defaultFontSize);\n      return tickLabelWidth * cosRotation + tickFontSize * sinRotation;\n    },\n\n    /**\n     * @private\n     */\n    getLabelCapacity: function getLabelCapacity(exampleTime) {\n      var me = this; // pick the longest format (milliseconds) for guestimation\n\n      var format = me.options.time.displayFormats.millisecond;\n      var exampleLabel = me.tickFormatFunction(exampleTime, 0, [], format);\n      var tickLabelWidth = me.getLabelWidth(exampleLabel);\n      var innerWidth = me.isHorizontal() ? me.width : me.height;\n      var capacity = Math.floor(innerWidth / tickLabelWidth);\n      return capacity > 0 ? capacity : 1;\n    }\n  }); // INTERNAL: static default options, registered in src/index.js\n\n  var _defaults$4 = defaultConfig$4;\n  scale_time._defaults = _defaults$4;\n  var scales = {\n    category: scale_category,\n    linear: scale_linear,\n    logarithmic: scale_logarithmic,\n    radialLinear: scale_radialLinear,\n    time: scale_time\n  };\n  var FORMATS = {\n    datetime: 'MMM D, YYYY, h:mm:ss a',\n    millisecond: 'h:mm:ss.SSS a',\n    second: 'h:mm:ss a',\n    minute: 'h:mm a',\n    hour: 'hA',\n    day: 'MMM D',\n    week: 'll',\n    month: 'MMM YYYY',\n    quarter: '[Q]Q - YYYY',\n    year: 'YYYY'\n  };\n\n  core_adapters._date.override(typeof moment === 'function' ? {\n    _id: 'moment',\n    // DEBUG ONLY\n    formats: function formats() {\n      return FORMATS;\n    },\n    parse: function parse(value, format) {\n      if (typeof value === 'string' && typeof format === 'string') {\n        value = moment(value, format);\n      } else if (!(value instanceof moment)) {\n        value = moment(value);\n      }\n\n      return value.isValid() ? value.valueOf() : null;\n    },\n    format: function format(time, _format) {\n      return moment(time).format(_format);\n    },\n    add: function add(time, amount, unit) {\n      return moment(time).add(amount, unit).valueOf();\n    },\n    diff: function diff(max, min, unit) {\n      return moment.duration(moment(max).diff(moment(min))).as(unit);\n    },\n    startOf: function startOf(time, unit, weekday) {\n      time = moment(time);\n\n      if (unit === 'isoWeek') {\n        return time.isoWeekday(weekday).valueOf();\n      }\n\n      return time.startOf(unit).valueOf();\n    },\n    endOf: function endOf(time, unit) {\n      return moment(time).endOf(unit).valueOf();\n    },\n    // DEPRECATIONS\n\n    /**\n     * Provided for backward compatibility with scale.getValueForPixel().\n     * @deprecated since version 2.8.0\n     * @todo remove at version 3\n     * @private\n     */\n    _create: function _create(time) {\n      return moment(time);\n    }\n  } : {});\n\n  core_defaults._set('global', {\n    plugins: {\n      filler: {\n        propagate: true\n      }\n    }\n  });\n\n  var mappers = {\n    dataset: function dataset(source) {\n      var index = source.fill;\n      var chart = source.chart;\n      var meta = chart.getDatasetMeta(index);\n      var visible = meta && chart.isDatasetVisible(index);\n      var points = visible && meta.dataset._children || [];\n      var length = points.length || 0;\n      return !length ? null : function (point, i) {\n        return i < length && points[i]._view || null;\n      };\n    },\n    boundary: function boundary(source) {\n      var boundary = source.boundary;\n      var x = boundary ? boundary.x : null;\n      var y = boundary ? boundary.y : null;\n      return function (point) {\n        return {\n          x: x === null ? point.x : x,\n          y: y === null ? point.y : y\n        };\n      };\n    }\n  }; // @todo if (fill[0] === '#')\n\n  function decodeFill(el, index, count) {\n    var model = el._model || {};\n    var fill = model.fill;\n    var target;\n\n    if (fill === undefined) {\n      fill = !!model.backgroundColor;\n    }\n\n    if (fill === false || fill === null) {\n      return false;\n    }\n\n    if (fill === true) {\n      return 'origin';\n    }\n\n    target = parseFloat(fill, 10);\n\n    if (isFinite(target) && Math.floor(target) === target) {\n      if (fill[0] === '-' || fill[0] === '+') {\n        target = index + target;\n      }\n\n      if (target === index || target < 0 || target >= count) {\n        return false;\n      }\n\n      return target;\n    }\n\n    switch (fill) {\n      // compatibility\n      case 'bottom':\n        return 'start';\n\n      case 'top':\n        return 'end';\n\n      case 'zero':\n        return 'origin';\n      // supported boundaries\n\n      case 'origin':\n      case 'start':\n      case 'end':\n        return fill;\n      // invalid fill values\n\n      default:\n        return false;\n    }\n  }\n\n  function computeBoundary(source) {\n    var model = source.el._model || {};\n    var scale = source.el._scale || {};\n    var fill = source.fill;\n    var target = null;\n    var horizontal;\n\n    if (isFinite(fill)) {\n      return null;\n    } // Backward compatibility: until v3, we still need to support boundary values set on\n    // the model (scaleTop, scaleBottom and scaleZero) because some external plugins and\n    // controllers might still use it (e.g. the Smith chart).\n\n\n    if (fill === 'start') {\n      target = model.scaleBottom === undefined ? scale.bottom : model.scaleBottom;\n    } else if (fill === 'end') {\n      target = model.scaleTop === undefined ? scale.top : model.scaleTop;\n    } else if (model.scaleZero !== undefined) {\n      target = model.scaleZero;\n    } else if (scale.getBasePosition) {\n      target = scale.getBasePosition();\n    } else if (scale.getBasePixel) {\n      target = scale.getBasePixel();\n    }\n\n    if (target !== undefined && target !== null) {\n      if (target.x !== undefined && target.y !== undefined) {\n        return target;\n      }\n\n      if (helpers$1.isFinite(target)) {\n        horizontal = scale.isHorizontal();\n        return {\n          x: horizontal ? target : null,\n          y: horizontal ? null : target\n        };\n      }\n    }\n\n    return null;\n  }\n\n  function resolveTarget(sources, index, propagate) {\n    var source = sources[index];\n    var fill = source.fill;\n    var visited = [index];\n    var target;\n\n    if (!propagate) {\n      return fill;\n    }\n\n    while (fill !== false && visited.indexOf(fill) === -1) {\n      if (!isFinite(fill)) {\n        return fill;\n      }\n\n      target = sources[fill];\n\n      if (!target) {\n        return false;\n      }\n\n      if (target.visible) {\n        return fill;\n      }\n\n      visited.push(fill);\n      fill = target.fill;\n    }\n\n    return false;\n  }\n\n  function createMapper(source) {\n    var fill = source.fill;\n    var type = 'dataset';\n\n    if (fill === false) {\n      return null;\n    }\n\n    if (!isFinite(fill)) {\n      type = 'boundary';\n    }\n\n    return mappers[type](source);\n  }\n\n  function isDrawable(point) {\n    return point && !point.skip;\n  }\n\n  function drawArea(ctx, curve0, curve1, len0, len1) {\n    var i;\n\n    if (!len0 || !len1) {\n      return;\n    } // building first area curve (normal)\n\n\n    ctx.moveTo(curve0[0].x, curve0[0].y);\n\n    for (i = 1; i < len0; ++i) {\n      helpers$1.canvas.lineTo(ctx, curve0[i - 1], curve0[i]);\n    } // joining the two area curves\n\n\n    ctx.lineTo(curve1[len1 - 1].x, curve1[len1 - 1].y); // building opposite area curve (reverse)\n\n    for (i = len1 - 1; i > 0; --i) {\n      helpers$1.canvas.lineTo(ctx, curve1[i], curve1[i - 1], true);\n    }\n  }\n\n  function doFill(ctx, points, mapper, view, color, loop) {\n    var count = points.length;\n    var span = view.spanGaps;\n    var curve0 = [];\n    var curve1 = [];\n    var len0 = 0;\n    var len1 = 0;\n    var i, ilen, index, p0, p1, d0, d1;\n    ctx.beginPath();\n\n    for (i = 0, ilen = count + !!loop; i < ilen; ++i) {\n      index = i % count;\n      p0 = points[index]._view;\n      p1 = mapper(p0, index, view);\n      d0 = isDrawable(p0);\n      d1 = isDrawable(p1);\n\n      if (d0 && d1) {\n        len0 = curve0.push(p0);\n        len1 = curve1.push(p1);\n      } else if (len0 && len1) {\n        if (!span) {\n          drawArea(ctx, curve0, curve1, len0, len1);\n          len0 = len1 = 0;\n          curve0 = [];\n          curve1 = [];\n        } else {\n          if (d0) {\n            curve0.push(p0);\n          }\n\n          if (d1) {\n            curve1.push(p1);\n          }\n        }\n      }\n    }\n\n    drawArea(ctx, curve0, curve1, len0, len1);\n    ctx.closePath();\n    ctx.fillStyle = color;\n    ctx.fill();\n  }\n\n  var plugin_filler = {\n    id: 'filler',\n    afterDatasetsUpdate: function afterDatasetsUpdate(chart, options) {\n      var count = (chart.data.datasets || []).length;\n      var propagate = options.propagate;\n      var sources = [];\n      var meta, i, el, source;\n\n      for (i = 0; i < count; ++i) {\n        meta = chart.getDatasetMeta(i);\n        el = meta.dataset;\n        source = null;\n\n        if (el && el._model && el instanceof elements.Line) {\n          source = {\n            visible: chart.isDatasetVisible(i),\n            fill: decodeFill(el, i, count),\n            chart: chart,\n            el: el\n          };\n        }\n\n        meta.$filler = source;\n        sources.push(source);\n      }\n\n      for (i = 0; i < count; ++i) {\n        source = sources[i];\n\n        if (!source) {\n          continue;\n        }\n\n        source.fill = resolveTarget(sources, i, propagate);\n        source.boundary = computeBoundary(source);\n        source.mapper = createMapper(source);\n      }\n    },\n    beforeDatasetDraw: function beforeDatasetDraw(chart, args) {\n      var meta = args.meta.$filler;\n\n      if (!meta) {\n        return;\n      }\n\n      var ctx = chart.ctx;\n      var el = meta.el;\n      var view = el._view;\n      var points = el._children || [];\n      var mapper = meta.mapper;\n      var color = view.backgroundColor || core_defaults.global.defaultColor;\n\n      if (mapper && color && points.length) {\n        helpers$1.canvas.clipArea(ctx, chart.chartArea);\n        doFill(ctx, points, mapper, view, color, el._loop);\n        helpers$1.canvas.unclipArea(ctx);\n      }\n    }\n  };\n  var noop$1 = helpers$1.noop;\n  var valueOrDefault$d = helpers$1.valueOrDefault;\n\n  core_defaults._set('global', {\n    legend: {\n      display: true,\n      position: 'top',\n      fullWidth: true,\n      reverse: false,\n      weight: 1000,\n      // a callback that will handle\n      onClick: function onClick(e, legendItem) {\n        var index = legendItem.datasetIndex;\n        var ci = this.chart;\n        var meta = ci.getDatasetMeta(index); // See controller.isDatasetVisible comment\n\n        meta.hidden = meta.hidden === null ? !ci.data.datasets[index].hidden : null; // We hid a dataset ... rerender the chart\n\n        ci.update();\n      },\n      onHover: null,\n      onLeave: null,\n      labels: {\n        boxWidth: 40,\n        padding: 10,\n        // Generates labels shown in the legend\n        // Valid properties to return:\n        // text : text to display\n        // fillStyle : fill of coloured box\n        // strokeStyle: stroke of coloured box\n        // hidden : if this legend item refers to a hidden item\n        // lineCap : cap style for line\n        // lineDash\n        // lineDashOffset :\n        // lineJoin :\n        // lineWidth :\n        generateLabels: function generateLabels(chart) {\n          var data = chart.data;\n          return helpers$1.isArray(data.datasets) ? data.datasets.map(function (dataset, i) {\n            return {\n              text: dataset.label,\n              fillStyle: !helpers$1.isArray(dataset.backgroundColor) ? dataset.backgroundColor : dataset.backgroundColor[0],\n              hidden: !chart.isDatasetVisible(i),\n              lineCap: dataset.borderCapStyle,\n              lineDash: dataset.borderDash,\n              lineDashOffset: dataset.borderDashOffset,\n              lineJoin: dataset.borderJoinStyle,\n              lineWidth: dataset.borderWidth,\n              strokeStyle: dataset.borderColor,\n              pointStyle: dataset.pointStyle,\n              // Below is extra data used for toggling the datasets\n              datasetIndex: i\n            };\n          }, this) : [];\n        }\n      }\n    },\n    legendCallback: function legendCallback(chart) {\n      var text = [];\n      text.push('<ul class=\"' + chart.id + '-legend\">');\n\n      for (var i = 0; i < chart.data.datasets.length; i++) {\n        text.push('<li><span style=\"background-color:' + chart.data.datasets[i].backgroundColor + '\"></span>');\n\n        if (chart.data.datasets[i].label) {\n          text.push(chart.data.datasets[i].label);\n        }\n\n        text.push('</li>');\n      }\n\n      text.push('</ul>');\n      return text.join('');\n    }\n  });\n  /**\n   * Helper function to get the box width based on the usePointStyle option\n   * @param {object} labelopts - the label options on the legend\n   * @param {number} fontSize - the label font size\n   * @return {number} width of the color box area\n   */\n\n\n  function getBoxWidth(labelOpts, fontSize) {\n    return labelOpts.usePointStyle && labelOpts.boxWidth > fontSize ? fontSize : labelOpts.boxWidth;\n  }\n  /**\n   * IMPORTANT: this class is exposed publicly as Chart.Legend, backward compatibility required!\n   */\n\n\n  var Legend = core_element.extend({\n    initialize: function initialize(config) {\n      helpers$1.extend(this, config); // Contains hit boxes for each dataset (in dataset order)\n\n      this.legendHitBoxes = [];\n      /**\n      \t * @private\n      \t */\n\n      this._hoveredItem = null; // Are we in doughnut mode which has a different data type\n\n      this.doughnutMode = false;\n    },\n    // These methods are ordered by lifecycle. Utilities then follow.\n    // Any function defined here is inherited by all legend types.\n    // Any function can be extended by the legend type\n    beforeUpdate: noop$1,\n    update: function update(maxWidth, maxHeight, margins) {\n      var me = this; // Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\n\n      me.beforeUpdate(); // Absorb the master measurements\n\n      me.maxWidth = maxWidth;\n      me.maxHeight = maxHeight;\n      me.margins = margins; // Dimensions\n\n      me.beforeSetDimensions();\n      me.setDimensions();\n      me.afterSetDimensions(); // Labels\n\n      me.beforeBuildLabels();\n      me.buildLabels();\n      me.afterBuildLabels(); // Fit\n\n      me.beforeFit();\n      me.fit();\n      me.afterFit(); //\n\n      me.afterUpdate();\n      return me.minSize;\n    },\n    afterUpdate: noop$1,\n    //\n    beforeSetDimensions: noop$1,\n    setDimensions: function setDimensions() {\n      var me = this; // Set the unconstrained dimension before label rotation\n\n      if (me.isHorizontal()) {\n        // Reset position before calculating rotation\n        me.width = me.maxWidth;\n        me.left = 0;\n        me.right = me.width;\n      } else {\n        me.height = me.maxHeight; // Reset position before calculating rotation\n\n        me.top = 0;\n        me.bottom = me.height;\n      } // Reset padding\n\n\n      me.paddingLeft = 0;\n      me.paddingTop = 0;\n      me.paddingRight = 0;\n      me.paddingBottom = 0; // Reset minSize\n\n      me.minSize = {\n        width: 0,\n        height: 0\n      };\n    },\n    afterSetDimensions: noop$1,\n    //\n    beforeBuildLabels: noop$1,\n    buildLabels: function buildLabels() {\n      var me = this;\n      var labelOpts = me.options.labels || {};\n      var legendItems = helpers$1.callback(labelOpts.generateLabels, [me.chart], me) || [];\n\n      if (labelOpts.filter) {\n        legendItems = legendItems.filter(function (item) {\n          return labelOpts.filter(item, me.chart.data);\n        });\n      }\n\n      if (me.options.reverse) {\n        legendItems.reverse();\n      }\n\n      me.legendItems = legendItems;\n    },\n    afterBuildLabels: noop$1,\n    //\n    beforeFit: noop$1,\n    fit: function fit() {\n      var me = this;\n      var opts = me.options;\n      var labelOpts = opts.labels;\n      var display = opts.display;\n      var ctx = me.ctx;\n\n      var labelFont = helpers$1.options._parseFont(labelOpts);\n\n      var fontSize = labelFont.size; // Reset hit boxes\n\n      var hitboxes = me.legendHitBoxes = [];\n      var minSize = me.minSize;\n      var isHorizontal = me.isHorizontal();\n\n      if (isHorizontal) {\n        minSize.width = me.maxWidth; // fill all the width\n\n        minSize.height = display ? 10 : 0;\n      } else {\n        minSize.width = display ? 10 : 0;\n        minSize.height = me.maxHeight; // fill all the height\n      } // Increase sizes here\n\n\n      if (display) {\n        ctx.font = labelFont.string;\n\n        if (isHorizontal) {\n          // Labels\n          // Width of each line of legend boxes. Labels wrap onto multiple lines when there are too many to fit on one\n          var lineWidths = me.lineWidths = [0];\n          var totalHeight = 0;\n          ctx.textAlign = 'left';\n          ctx.textBaseline = 'top';\n          helpers$1.each(me.legendItems, function (legendItem, i) {\n            var boxWidth = getBoxWidth(labelOpts, fontSize);\n            var width = boxWidth + fontSize / 2 + ctx.measureText(legendItem.text).width;\n\n            if (i === 0 || lineWidths[lineWidths.length - 1] + width + labelOpts.padding > minSize.width) {\n              totalHeight += fontSize + labelOpts.padding;\n              lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = labelOpts.padding;\n            } // Store the hitbox width and height here. Final position will be updated in `draw`\n\n\n            hitboxes[i] = {\n              left: 0,\n              top: 0,\n              width: width,\n              height: fontSize\n            };\n            lineWidths[lineWidths.length - 1] += width + labelOpts.padding;\n          });\n          minSize.height += totalHeight;\n        } else {\n          var vPadding = labelOpts.padding;\n          var columnWidths = me.columnWidths = [];\n          var totalWidth = labelOpts.padding;\n          var currentColWidth = 0;\n          var currentColHeight = 0;\n          var itemHeight = fontSize + vPadding;\n          helpers$1.each(me.legendItems, function (legendItem, i) {\n            var boxWidth = getBoxWidth(labelOpts, fontSize);\n            var itemWidth = boxWidth + fontSize / 2 + ctx.measureText(legendItem.text).width; // If too tall, go to new column\n\n            if (i > 0 && currentColHeight + itemHeight > minSize.height - vPadding) {\n              totalWidth += currentColWidth + labelOpts.padding;\n              columnWidths.push(currentColWidth); // previous column width\n\n              currentColWidth = 0;\n              currentColHeight = 0;\n            } // Get max width\n\n\n            currentColWidth = Math.max(currentColWidth, itemWidth);\n            currentColHeight += itemHeight; // Store the hitbox width and height here. Final position will be updated in `draw`\n\n            hitboxes[i] = {\n              left: 0,\n              top: 0,\n              width: itemWidth,\n              height: fontSize\n            };\n          });\n          totalWidth += currentColWidth;\n          columnWidths.push(currentColWidth);\n          minSize.width += totalWidth;\n        }\n      }\n\n      me.width = minSize.width;\n      me.height = minSize.height;\n    },\n    afterFit: noop$1,\n    // Shared Methods\n    isHorizontal: function isHorizontal() {\n      return this.options.position === 'top' || this.options.position === 'bottom';\n    },\n    // Actually draw the legend on the canvas\n    draw: function draw() {\n      var me = this;\n      var opts = me.options;\n      var labelOpts = opts.labels;\n      var globalDefaults = core_defaults.global;\n      var defaultColor = globalDefaults.defaultColor;\n      var lineDefault = globalDefaults.elements.line;\n      var legendWidth = me.width;\n      var lineWidths = me.lineWidths;\n\n      if (opts.display) {\n        var ctx = me.ctx;\n        var fontColor = valueOrDefault$d(labelOpts.fontColor, globalDefaults.defaultFontColor);\n\n        var labelFont = helpers$1.options._parseFont(labelOpts);\n\n        var fontSize = labelFont.size;\n        var cursor; // Canvas setup\n\n        ctx.textAlign = 'left';\n        ctx.textBaseline = 'middle';\n        ctx.lineWidth = 0.5;\n        ctx.strokeStyle = fontColor; // for strikethrough effect\n\n        ctx.fillStyle = fontColor; // render in correct colour\n\n        ctx.font = labelFont.string;\n        var boxWidth = getBoxWidth(labelOpts, fontSize);\n        var hitboxes = me.legendHitBoxes; // current position\n\n        var drawLegendBox = function drawLegendBox(x, y, legendItem) {\n          if (isNaN(boxWidth) || boxWidth <= 0) {\n            return;\n          } // Set the ctx for the box\n\n\n          ctx.save();\n          var lineWidth = valueOrDefault$d(legendItem.lineWidth, lineDefault.borderWidth);\n          ctx.fillStyle = valueOrDefault$d(legendItem.fillStyle, defaultColor);\n          ctx.lineCap = valueOrDefault$d(legendItem.lineCap, lineDefault.borderCapStyle);\n          ctx.lineDashOffset = valueOrDefault$d(legendItem.lineDashOffset, lineDefault.borderDashOffset);\n          ctx.lineJoin = valueOrDefault$d(legendItem.lineJoin, lineDefault.borderJoinStyle);\n          ctx.lineWidth = lineWidth;\n          ctx.strokeStyle = valueOrDefault$d(legendItem.strokeStyle, defaultColor);\n\n          if (ctx.setLineDash) {\n            // IE 9 and 10 do not support line dash\n            ctx.setLineDash(valueOrDefault$d(legendItem.lineDash, lineDefault.borderDash));\n          }\n\n          if (opts.labels && opts.labels.usePointStyle) {\n            // Recalculate x and y for drawPoint() because its expecting\n            // x and y to be center of figure (instead of top left)\n            var radius = boxWidth * Math.SQRT2 / 2;\n            var centerX = x + boxWidth / 2;\n            var centerY = y + fontSize / 2; // Draw pointStyle as legend symbol\n\n            helpers$1.canvas.drawPoint(ctx, legendItem.pointStyle, radius, centerX, centerY);\n          } else {\n            // Draw box as legend symbol\n            if (lineWidth !== 0) {\n              ctx.strokeRect(x, y, boxWidth, fontSize);\n            }\n\n            ctx.fillRect(x, y, boxWidth, fontSize);\n          }\n\n          ctx.restore();\n        };\n\n        var fillText = function fillText(x, y, legendItem, textWidth) {\n          var halfFontSize = fontSize / 2;\n          var xLeft = boxWidth + halfFontSize + x;\n          var yMiddle = y + halfFontSize;\n          ctx.fillText(legendItem.text, xLeft, yMiddle);\n\n          if (legendItem.hidden) {\n            // Strikethrough the text if hidden\n            ctx.beginPath();\n            ctx.lineWidth = 2;\n            ctx.moveTo(xLeft, yMiddle);\n            ctx.lineTo(xLeft + textWidth, yMiddle);\n            ctx.stroke();\n          }\n        }; // Horizontal\n\n\n        var isHorizontal = me.isHorizontal();\n\n        if (isHorizontal) {\n          cursor = {\n            x: me.left + (legendWidth - lineWidths[0]) / 2 + labelOpts.padding,\n            y: me.top + labelOpts.padding,\n            line: 0\n          };\n        } else {\n          cursor = {\n            x: me.left + labelOpts.padding,\n            y: me.top + labelOpts.padding,\n            line: 0\n          };\n        }\n\n        var itemHeight = fontSize + labelOpts.padding;\n        helpers$1.each(me.legendItems, function (legendItem, i) {\n          var textWidth = ctx.measureText(legendItem.text).width;\n          var width = boxWidth + fontSize / 2 + textWidth;\n          var x = cursor.x;\n          var y = cursor.y; // Use (me.left + me.minSize.width) and (me.top + me.minSize.height)\n          // instead of me.right and me.bottom because me.width and me.height\n          // may have been changed since me.minSize was calculated\n\n          if (isHorizontal) {\n            if (i > 0 && x + width + labelOpts.padding > me.left + me.minSize.width) {\n              y = cursor.y += itemHeight;\n              cursor.line++;\n              x = cursor.x = me.left + (legendWidth - lineWidths[cursor.line]) / 2 + labelOpts.padding;\n            }\n          } else if (i > 0 && y + itemHeight > me.top + me.minSize.height) {\n            x = cursor.x = x + me.columnWidths[cursor.line] + labelOpts.padding;\n            y = cursor.y = me.top + labelOpts.padding;\n            cursor.line++;\n          }\n\n          drawLegendBox(x, y, legendItem);\n          hitboxes[i].left = x;\n          hitboxes[i].top = y; // Fill the actual label\n\n          fillText(x, y, legendItem, textWidth);\n\n          if (isHorizontal) {\n            cursor.x += width + labelOpts.padding;\n          } else {\n            cursor.y += itemHeight;\n          }\n        });\n      }\n    },\n\n    /**\n     * @private\n     */\n    _getLegendItemAt: function _getLegendItemAt(x, y) {\n      var me = this;\n      var i, hitBox, lh;\n\n      if (x >= me.left && x <= me.right && y >= me.top && y <= me.bottom) {\n        // See if we are touching one of the dataset boxes\n        lh = me.legendHitBoxes;\n\n        for (i = 0; i < lh.length; ++i) {\n          hitBox = lh[i];\n\n          if (x >= hitBox.left && x <= hitBox.left + hitBox.width && y >= hitBox.top && y <= hitBox.top + hitBox.height) {\n            // Touching an element\n            return me.legendItems[i];\n          }\n        }\n      }\n\n      return null;\n    },\n\n    /**\n     * Handle an event\n     * @private\n     * @param {IEvent} event - The event to handle\n     */\n    handleEvent: function handleEvent(e) {\n      var me = this;\n      var opts = me.options;\n      var type = e.type === 'mouseup' ? 'click' : e.type;\n      var hoveredItem;\n\n      if (type === 'mousemove') {\n        if (!opts.onHover && !opts.onLeave) {\n          return;\n        }\n      } else if (type === 'click') {\n        if (!opts.onClick) {\n          return;\n        }\n      } else {\n        return;\n      } // Chart event already has relative position in it\n\n\n      hoveredItem = me._getLegendItemAt(e.x, e.y);\n\n      if (type === 'click') {\n        if (hoveredItem && opts.onClick) {\n          // use e.native for backwards compatibility\n          opts.onClick.call(me, e.native, hoveredItem);\n        }\n      } else {\n        if (opts.onLeave && hoveredItem !== me._hoveredItem) {\n          if (me._hoveredItem) {\n            opts.onLeave.call(me, e.native, me._hoveredItem);\n          }\n\n          me._hoveredItem = hoveredItem;\n        }\n\n        if (opts.onHover && hoveredItem) {\n          // use e.native for backwards compatibility\n          opts.onHover.call(me, e.native, hoveredItem);\n        }\n      }\n    }\n  });\n\n  function createNewLegendAndAttach(chart, legendOpts) {\n    var legend = new Legend({\n      ctx: chart.ctx,\n      options: legendOpts,\n      chart: chart\n    });\n    core_layouts.configure(chart, legend, legendOpts);\n    core_layouts.addBox(chart, legend);\n    chart.legend = legend;\n  }\n\n  var plugin_legend = {\n    id: 'legend',\n\n    /**\n     * Backward compatibility: since 2.1.5, the legend is registered as a plugin, making\n     * Chart.Legend obsolete. To avoid a breaking change, we export the Legend as part of\n     * the plugin, which one will be re-exposed in the chart.js file.\n     * https://github.com/chartjs/Chart.js/pull/2640\n     * @private\n     */\n    _element: Legend,\n    beforeInit: function beforeInit(chart) {\n      var legendOpts = chart.options.legend;\n\n      if (legendOpts) {\n        createNewLegendAndAttach(chart, legendOpts);\n      }\n    },\n    beforeUpdate: function beforeUpdate(chart) {\n      var legendOpts = chart.options.legend;\n      var legend = chart.legend;\n\n      if (legendOpts) {\n        helpers$1.mergeIf(legendOpts, core_defaults.global.legend);\n\n        if (legend) {\n          core_layouts.configure(chart, legend, legendOpts);\n          legend.options = legendOpts;\n        } else {\n          createNewLegendAndAttach(chart, legendOpts);\n        }\n      } else if (legend) {\n        core_layouts.removeBox(chart, legend);\n        delete chart.legend;\n      }\n    },\n    afterEvent: function afterEvent(chart, e) {\n      var legend = chart.legend;\n\n      if (legend) {\n        legend.handleEvent(e);\n      }\n    }\n  };\n  var noop$2 = helpers$1.noop;\n\n  core_defaults._set('global', {\n    title: {\n      display: false,\n      fontStyle: 'bold',\n      fullWidth: true,\n      padding: 10,\n      position: 'top',\n      text: '',\n      weight: 2000 // by default greater than legend (1000) to be above\n\n    }\n  });\n  /**\n   * IMPORTANT: this class is exposed publicly as Chart.Legend, backward compatibility required!\n   */\n\n\n  var Title = core_element.extend({\n    initialize: function initialize(config) {\n      var me = this;\n      helpers$1.extend(me, config); // Contains hit boxes for each dataset (in dataset order)\n\n      me.legendHitBoxes = [];\n    },\n    // These methods are ordered by lifecycle. Utilities then follow.\n    beforeUpdate: noop$2,\n    update: function update(maxWidth, maxHeight, margins) {\n      var me = this; // Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\n\n      me.beforeUpdate(); // Absorb the master measurements\n\n      me.maxWidth = maxWidth;\n      me.maxHeight = maxHeight;\n      me.margins = margins; // Dimensions\n\n      me.beforeSetDimensions();\n      me.setDimensions();\n      me.afterSetDimensions(); // Labels\n\n      me.beforeBuildLabels();\n      me.buildLabels();\n      me.afterBuildLabels(); // Fit\n\n      me.beforeFit();\n      me.fit();\n      me.afterFit(); //\n\n      me.afterUpdate();\n      return me.minSize;\n    },\n    afterUpdate: noop$2,\n    //\n    beforeSetDimensions: noop$2,\n    setDimensions: function setDimensions() {\n      var me = this; // Set the unconstrained dimension before label rotation\n\n      if (me.isHorizontal()) {\n        // Reset position before calculating rotation\n        me.width = me.maxWidth;\n        me.left = 0;\n        me.right = me.width;\n      } else {\n        me.height = me.maxHeight; // Reset position before calculating rotation\n\n        me.top = 0;\n        me.bottom = me.height;\n      } // Reset padding\n\n\n      me.paddingLeft = 0;\n      me.paddingTop = 0;\n      me.paddingRight = 0;\n      me.paddingBottom = 0; // Reset minSize\n\n      me.minSize = {\n        width: 0,\n        height: 0\n      };\n    },\n    afterSetDimensions: noop$2,\n    //\n    beforeBuildLabels: noop$2,\n    buildLabels: noop$2,\n    afterBuildLabels: noop$2,\n    //\n    beforeFit: noop$2,\n    fit: function fit() {\n      var me = this;\n      var opts = me.options;\n      var display = opts.display;\n      var minSize = me.minSize;\n      var lineCount = helpers$1.isArray(opts.text) ? opts.text.length : 1;\n\n      var fontOpts = helpers$1.options._parseFont(opts);\n\n      var textSize = display ? lineCount * fontOpts.lineHeight + opts.padding * 2 : 0;\n\n      if (me.isHorizontal()) {\n        minSize.width = me.maxWidth; // fill all the width\n\n        minSize.height = textSize;\n      } else {\n        minSize.width = textSize;\n        minSize.height = me.maxHeight; // fill all the height\n      }\n\n      me.width = minSize.width;\n      me.height = minSize.height;\n    },\n    afterFit: noop$2,\n    // Shared Methods\n    isHorizontal: function isHorizontal() {\n      var pos = this.options.position;\n      return pos === 'top' || pos === 'bottom';\n    },\n    // Actually draw the title block on the canvas\n    draw: function draw() {\n      var me = this;\n      var ctx = me.ctx;\n      var opts = me.options;\n\n      if (opts.display) {\n        var fontOpts = helpers$1.options._parseFont(opts);\n\n        var lineHeight = fontOpts.lineHeight;\n        var offset = lineHeight / 2 + opts.padding;\n        var rotation = 0;\n        var top = me.top;\n        var left = me.left;\n        var bottom = me.bottom;\n        var right = me.right;\n        var maxWidth, titleX, titleY;\n        ctx.fillStyle = helpers$1.valueOrDefault(opts.fontColor, core_defaults.global.defaultFontColor); // render in correct colour\n\n        ctx.font = fontOpts.string; // Horizontal\n\n        if (me.isHorizontal()) {\n          titleX = left + (right - left) / 2; // midpoint of the width\n\n          titleY = top + offset;\n          maxWidth = right - left;\n        } else {\n          titleX = opts.position === 'left' ? left + offset : right - offset;\n          titleY = top + (bottom - top) / 2;\n          maxWidth = bottom - top;\n          rotation = Math.PI * (opts.position === 'left' ? -0.5 : 0.5);\n        }\n\n        ctx.save();\n        ctx.translate(titleX, titleY);\n        ctx.rotate(rotation);\n        ctx.textAlign = 'center';\n        ctx.textBaseline = 'middle';\n        var text = opts.text;\n\n        if (helpers$1.isArray(text)) {\n          var y = 0;\n\n          for (var i = 0; i < text.length; ++i) {\n            ctx.fillText(text[i], 0, y, maxWidth);\n            y += lineHeight;\n          }\n        } else {\n          ctx.fillText(text, 0, 0, maxWidth);\n        }\n\n        ctx.restore();\n      }\n    }\n  });\n\n  function createNewTitleBlockAndAttach(chart, titleOpts) {\n    var title = new Title({\n      ctx: chart.ctx,\n      options: titleOpts,\n      chart: chart\n    });\n    core_layouts.configure(chart, title, titleOpts);\n    core_layouts.addBox(chart, title);\n    chart.titleBlock = title;\n  }\n\n  var plugin_title = {\n    id: 'title',\n\n    /**\n     * Backward compatibility: since 2.1.5, the title is registered as a plugin, making\n     * Chart.Title obsolete. To avoid a breaking change, we export the Title as part of\n     * the plugin, which one will be re-exposed in the chart.js file.\n     * https://github.com/chartjs/Chart.js/pull/2640\n     * @private\n     */\n    _element: Title,\n    beforeInit: function beforeInit(chart) {\n      var titleOpts = chart.options.title;\n\n      if (titleOpts) {\n        createNewTitleBlockAndAttach(chart, titleOpts);\n      }\n    },\n    beforeUpdate: function beforeUpdate(chart) {\n      var titleOpts = chart.options.title;\n      var titleBlock = chart.titleBlock;\n\n      if (titleOpts) {\n        helpers$1.mergeIf(titleOpts, core_defaults.global.title);\n\n        if (titleBlock) {\n          core_layouts.configure(chart, titleBlock, titleOpts);\n          titleBlock.options = titleOpts;\n        } else {\n          createNewTitleBlockAndAttach(chart, titleOpts);\n        }\n      } else if (titleBlock) {\n        core_layouts.removeBox(chart, titleBlock);\n        delete chart.titleBlock;\n      }\n    }\n  };\n  var plugins = {};\n  var filler = plugin_filler;\n  var legend = plugin_legend;\n  var title = plugin_title;\n  plugins.filler = filler;\n  plugins.legend = legend;\n  plugins.title = title;\n  /**\n   * @namespace Chart\n   */\n\n  core_controller.helpers = helpers$1; // @todo dispatch these helpers into appropriated helpers/helpers.* file and write unit tests!\n\n  core_helpers(core_controller);\n  core_controller._adapters = core_adapters;\n  core_controller.Animation = core_animation;\n  core_controller.animationService = core_animations;\n  core_controller.controllers = controllers;\n  core_controller.DatasetController = core_datasetController;\n  core_controller.defaults = core_defaults;\n  core_controller.Element = core_element;\n  core_controller.elements = elements;\n  core_controller.Interaction = core_interaction;\n  core_controller.layouts = core_layouts;\n  core_controller.platform = platform;\n  core_controller.plugins = core_plugins;\n  core_controller.Scale = core_scale;\n  core_controller.scaleService = core_scaleService;\n  core_controller.Ticks = core_ticks;\n  core_controller.Tooltip = core_tooltip; // Register built-in scales\n\n  core_controller.helpers.each(scales, function (scale, type) {\n    core_controller.scaleService.registerScaleType(type, scale, scale._defaults);\n  }); // Load to register built-in adapters (as side effects)\n  // Loading built-in plugins\n\n  for (var k in plugins) {\n    if (plugins.hasOwnProperty(k)) {\n      core_controller.plugins.register(plugins[k]);\n    }\n  }\n\n  core_controller.platform.initialize();\n  var src = core_controller;\n\n  if (typeof window !== 'undefined') {\n    window.Chart = core_controller;\n  } // DEPRECATIONS\n\n  /**\n   * Provided for backward compatibility, not available anymore\n   * @namespace Chart.Chart\n   * @deprecated since version 2.8.0\n   * @todo remove at version 3\n   * @private\n   */\n\n\n  core_controller.Chart = core_controller;\n  /**\n   * Provided for backward compatibility, not available anymore\n   * @namespace Chart.Legend\n   * @deprecated since version 2.1.5\n   * @todo remove at version 3\n   * @private\n   */\n\n  core_controller.Legend = plugins.legend._element;\n  /**\n   * Provided for backward compatibility, not available anymore\n   * @namespace Chart.Title\n   * @deprecated since version 2.1.5\n   * @todo remove at version 3\n   * @private\n   */\n\n  core_controller.Title = plugins.title._element;\n  /**\n   * Provided for backward compatibility, use Chart.plugins instead\n   * @namespace Chart.pluginService\n   * @deprecated since version 2.1.5\n   * @todo remove at version 3\n   * @private\n   */\n\n  core_controller.pluginService = core_controller.plugins;\n  /**\n   * Provided for backward compatibility, inheriting from Chart.PlugingBase has no\n   * effect, instead simply create/register plugins via plain JavaScript objects.\n   * @interface Chart.PluginBase\n   * @deprecated since version 2.5.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  core_controller.PluginBase = core_controller.Element.extend({});\n  /**\n   * Provided for backward compatibility, use Chart.helpers.canvas instead.\n   * @namespace Chart.canvasHelpers\n   * @deprecated since version 2.6.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  core_controller.canvasHelpers = core_controller.helpers.canvas;\n  /**\n   * Provided for backward compatibility, use Chart.layouts instead.\n   * @namespace Chart.layoutService\n   * @deprecated since version 2.7.3\n   * @todo remove at version 3\n   * @private\n   */\n\n  core_controller.layoutService = core_controller.layouts;\n  /**\n   * Provided for backward compatibility, not available anymore.\n   * @namespace Chart.LinearScaleBase\n   * @deprecated since version 2.8\n   * @todo remove at version 3\n   * @private\n   */\n\n  core_controller.LinearScaleBase = scale_linearbase;\n  /**\n   * Provided for backward compatibility, instead we should create a new Chart\n   * by setting the type in the config (`new Chart(id, {type: '{chart-type}'}`).\n   * @deprecated since version 2.8.0\n   * @todo remove at version 3\n   */\n\n  core_controller.helpers.each(['Bar', 'Bubble', 'Doughnut', 'Line', 'PolarArea', 'Radar', 'Scatter'], function (klass) {\n    core_controller[klass] = function (ctx, cfg) {\n      return new core_controller(ctx, core_controller.helpers.merge(cfg || {}, {\n        type: klass.charAt(0).toLowerCase() + klass.slice(1)\n      }));\n    };\n  });\n  return src;\n});","var _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nfunction _objectWithoutProperties(obj, keys) {\n  var target = {};\n\n  for (var i in obj) {\n    if (keys.indexOf(i) >= 0) continue;\n    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;\n    target[i] = obj[i];\n  }\n\n  return target;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Chart from 'chart.js';\nimport isEqual from 'lodash/isEqual';\nimport keyBy from 'lodash/keyBy';\nvar NODE_ENV = typeof process !== 'undefined' && process.env && process.env.NODE_ENV;\n\nvar ChartComponent = function (_React$Component) {\n  _inherits(ChartComponent, _React$Component);\n\n  function ChartComponent() {\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, ChartComponent);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, _React$Component.call.apply(_React$Component, [this].concat(args))), _this), _this.handleOnClick = function (event) {\n      var instance = _this.chartInstance;\n      var _this$props = _this.props,\n          getDatasetAtEvent = _this$props.getDatasetAtEvent,\n          getElementAtEvent = _this$props.getElementAtEvent,\n          getElementsAtEvent = _this$props.getElementsAtEvent,\n          onElementsClick = _this$props.onElementsClick;\n      getDatasetAtEvent && getDatasetAtEvent(instance.getDatasetAtEvent(event), event);\n      getElementAtEvent && getElementAtEvent(instance.getElementAtEvent(event), event);\n      getElementsAtEvent && getElementsAtEvent(instance.getElementsAtEvent(event), event);\n      onElementsClick && onElementsClick(instance.getElementsAtEvent(event), event); // Backward compatibility\n    }, _this.ref = function (element) {\n      _this.element = element;\n    }, _temp), _possibleConstructorReturn(_this, _ret);\n  }\n\n  ChartComponent.prototype.componentWillMount = function componentWillMount() {\n    this.chartInstance = undefined;\n  };\n\n  ChartComponent.prototype.componentDidMount = function componentDidMount() {\n    this.renderChart();\n  };\n\n  ChartComponent.prototype.componentDidUpdate = function componentDidUpdate() {\n    if (this.props.redraw) {\n      this.destroyChart();\n      this.renderChart();\n      return;\n    }\n\n    this.updateChart();\n  };\n\n  ChartComponent.prototype.shouldComponentUpdate = function shouldComponentUpdate(nextProps) {\n    var _props = this.props,\n        redraw = _props.redraw,\n        type = _props.type,\n        options = _props.options,\n        plugins = _props.plugins,\n        legend = _props.legend,\n        height = _props.height,\n        width = _props.width;\n\n    if (nextProps.redraw === true) {\n      return true;\n    }\n\n    if (height !== nextProps.height || width !== nextProps.width) {\n      return true;\n    }\n\n    if (type !== nextProps.type) {\n      return true;\n    }\n\n    if (!isEqual(legend, nextProps.legend)) {\n      return true;\n    }\n\n    if (!isEqual(options, nextProps.options)) {\n      return true;\n    }\n\n    var nextData = this.transformDataProp(nextProps);\n\n    if (!isEqual(this.shadowDataProp, nextData)) {\n      return true;\n    }\n\n    return !isEqual(plugins, nextProps.plugins);\n  };\n\n  ChartComponent.prototype.componentWillUnmount = function componentWillUnmount() {\n    this.destroyChart();\n  };\n\n  ChartComponent.prototype.transformDataProp = function transformDataProp(props) {\n    var data = props.data;\n\n    if (typeof data == 'function') {\n      var node = this.element;\n      return data(node);\n    } else {\n      return data;\n    }\n  }; // Chart.js directly mutates the data.dataset objects by adding _meta proprerty\n  // this makes impossible to compare the current and next data changes\n  // therefore we memoize the data prop while sending a fake to Chart.js for mutation.\n  // see https://github.com/chartjs/Chart.js/blob/master/src/core/core.controller.js#L615-L617\n\n\n  ChartComponent.prototype.memoizeDataProps = function memoizeDataProps() {\n    if (!this.props.data) {\n      return;\n    }\n\n    var data = this.transformDataProp(this.props);\n    this.shadowDataProp = _extends({}, data, {\n      datasets: data.datasets && data.datasets.map(function (set) {\n        return _extends({}, set);\n      })\n    });\n    this.saveCurrentDatasets(); // to remove the dataset metadata from this chart when the chart is destroyed\n\n    return data;\n  };\n\n  ChartComponent.prototype.checkDatasets = function checkDatasets(datasets) {\n    var isDev = NODE_ENV !== 'production' && NODE_ENV !== 'prod';\n    var usingCustomKeyProvider = this.props.datasetKeyProvider !== ChartComponent.getLabelAsKey;\n    var multipleDatasets = datasets.length > 1;\n\n    if (isDev && multipleDatasets && !usingCustomKeyProvider) {\n      var shouldWarn = false;\n      datasets.forEach(function (dataset) {\n        if (!dataset.label) {\n          shouldWarn = true;\n        }\n      });\n\n      if (shouldWarn) {\n        console.error('[react-chartjs-2] Warning: Each dataset needs a unique key. By default, the \"label\" property on each dataset is used. Alternatively, you may provide a \"datasetKeyProvider\" as a prop that returns a unique key.');\n      }\n    }\n  };\n\n  ChartComponent.prototype.getCurrentDatasets = function getCurrentDatasets() {\n    return this.chartInstance && this.chartInstance.config.data && this.chartInstance.config.data.datasets || [];\n  };\n\n  ChartComponent.prototype.saveCurrentDatasets = function saveCurrentDatasets() {\n    var _this2 = this;\n\n    this.datasets = this.datasets || {};\n    var currentDatasets = this.getCurrentDatasets();\n    currentDatasets.forEach(function (d) {\n      _this2.datasets[_this2.props.datasetKeyProvider(d)] = d;\n    });\n  };\n\n  ChartComponent.prototype.updateChart = function updateChart() {\n    var _this3 = this;\n\n    var options = this.props.options;\n    var data = this.memoizeDataProps(this.props);\n    if (!this.chartInstance) return;\n\n    if (options) {\n      this.chartInstance.options = Chart.helpers.configMerge(this.chartInstance.options, options);\n    } // Pipe datasets to chart instance datasets enabling\n    // seamless transitions\n\n\n    var currentDatasets = this.getCurrentDatasets();\n    var nextDatasets = data.datasets || [];\n    this.checkDatasets(currentDatasets);\n    var currentDatasetsIndexed = keyBy(currentDatasets, this.props.datasetKeyProvider); // We can safely replace the dataset array, as long as we retain the _meta property\n    // on each dataset.\n\n    this.chartInstance.config.data.datasets = nextDatasets.map(function (next) {\n      var current = currentDatasetsIndexed[_this3.props.datasetKeyProvider(next)];\n\n      if (current && current.type === next.type) {\n        // The data array must be edited in place. As chart.js adds listeners to it.\n        current.data.splice(next.data.length);\n        next.data.forEach(function (point, pid) {\n          current.data[pid] = next.data[pid];\n        });\n\n        var _data = next.data,\n            otherProps = _objectWithoutProperties(next, ['data']); // Merge properties. Notice a weakness here. If a property is removed\n        // from next, it will be retained by current and never disappears.\n        // Workaround is to set value to null or undefined in next.\n\n\n        return _extends({}, current, otherProps);\n      } else {\n        return next;\n      }\n    });\n\n    var datasets = data.datasets,\n        rest = _objectWithoutProperties(data, ['datasets']);\n\n    this.chartInstance.config.data = _extends({}, this.chartInstance.config.data, rest);\n    this.chartInstance.update();\n  };\n\n  ChartComponent.prototype.renderChart = function renderChart() {\n    var _props2 = this.props,\n        options = _props2.options,\n        legend = _props2.legend,\n        type = _props2.type,\n        plugins = _props2.plugins;\n    var node = this.element;\n    var data = this.memoizeDataProps();\n\n    if (typeof legend !== 'undefined' && !isEqual(ChartComponent.defaultProps.legend, legend)) {\n      options.legend = legend;\n    }\n\n    this.chartInstance = new Chart(node, {\n      type: type,\n      data: data,\n      options: options,\n      plugins: plugins\n    });\n  };\n\n  ChartComponent.prototype.destroyChart = function destroyChart() {\n    // Put all of the datasets that have existed in the chart back on the chart\n    // so that the metadata associated with this chart get destroyed.\n    // This allows the datasets to be used in another chart. This can happen,\n    // for example, in a tabbed UI where the chart gets created each time the\n    // tab gets switched to the chart and uses the same data).\n    this.saveCurrentDatasets();\n    var datasets = Object.values(this.datasets);\n    this.chartInstance.config.data.datasets = datasets;\n    this.chartInstance.destroy();\n  };\n\n  ChartComponent.prototype.render = function render() {\n    var _props3 = this.props,\n        height = _props3.height,\n        width = _props3.width,\n        id = _props3.id;\n    return React.createElement('canvas', {\n      ref: this.ref,\n      height: height,\n      width: width,\n      id: id,\n      onClick: this.handleOnClick\n    });\n  };\n\n  return ChartComponent;\n}(React.Component);\n\nChartComponent.getLabelAsKey = function (d) {\n  return d.label;\n};\n\nChartComponent.propTypes = {\n  data: PropTypes.oneOfType([PropTypes.object, PropTypes.func]).isRequired,\n  getDatasetAtEvent: PropTypes.func,\n  getElementAtEvent: PropTypes.func,\n  getElementsAtEvent: PropTypes.func,\n  height: PropTypes.number,\n  legend: PropTypes.object,\n  onElementsClick: PropTypes.func,\n  options: PropTypes.object,\n  plugins: PropTypes.arrayOf(PropTypes.object),\n  redraw: PropTypes.bool,\n  type: function type(props, propName, componentName) {\n    if (!Chart.controllers[props[propName]]) {\n      return new Error('Invalid chart type `' + props[propName] + '` supplied to' + ' `' + componentName + '`.');\n    }\n  },\n  width: PropTypes.number,\n  datasetKeyProvider: PropTypes.func\n};\nChartComponent.defaultProps = {\n  legend: {\n    display: true,\n    position: 'bottom'\n  },\n  type: 'doughnut',\n  height: 150,\n  width: 300,\n  redraw: false,\n  options: {},\n  datasetKeyProvider: ChartComponent.getLabelAsKey\n};\nexport default ChartComponent;\nexport var Doughnut = function (_React$Component2) {\n  _inherits(Doughnut, _React$Component2);\n\n  function Doughnut() {\n    _classCallCheck(this, Doughnut);\n\n    return _possibleConstructorReturn(this, _React$Component2.apply(this, arguments));\n  }\n\n  Doughnut.prototype.render = function render() {\n    var _this5 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref) {\n        return _this5.chartInstance = _ref && _ref.chartInstance;\n      },\n      type: 'doughnut'\n    }));\n  };\n\n  return Doughnut;\n}(React.Component);\nexport var Pie = function (_React$Component3) {\n  _inherits(Pie, _React$Component3);\n\n  function Pie() {\n    _classCallCheck(this, Pie);\n\n    return _possibleConstructorReturn(this, _React$Component3.apply(this, arguments));\n  }\n\n  Pie.prototype.render = function render() {\n    var _this7 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref2) {\n        return _this7.chartInstance = _ref2 && _ref2.chartInstance;\n      },\n      type: 'pie'\n    }));\n  };\n\n  return Pie;\n}(React.Component);\nexport var Line = function (_React$Component4) {\n  _inherits(Line, _React$Component4);\n\n  function Line() {\n    _classCallCheck(this, Line);\n\n    return _possibleConstructorReturn(this, _React$Component4.apply(this, arguments));\n  }\n\n  Line.prototype.render = function render() {\n    var _this9 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref3) {\n        return _this9.chartInstance = _ref3 && _ref3.chartInstance;\n      },\n      type: 'line'\n    }));\n  };\n\n  return Line;\n}(React.Component);\nexport var Bar = function (_React$Component5) {\n  _inherits(Bar, _React$Component5);\n\n  function Bar() {\n    _classCallCheck(this, Bar);\n\n    return _possibleConstructorReturn(this, _React$Component5.apply(this, arguments));\n  }\n\n  Bar.prototype.render = function render() {\n    var _this11 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref4) {\n        return _this11.chartInstance = _ref4 && _ref4.chartInstance;\n      },\n      type: 'bar'\n    }));\n  };\n\n  return Bar;\n}(React.Component);\nexport var HorizontalBar = function (_React$Component6) {\n  _inherits(HorizontalBar, _React$Component6);\n\n  function HorizontalBar() {\n    _classCallCheck(this, HorizontalBar);\n\n    return _possibleConstructorReturn(this, _React$Component6.apply(this, arguments));\n  }\n\n  HorizontalBar.prototype.render = function render() {\n    var _this13 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref5) {\n        return _this13.chartInstance = _ref5 && _ref5.chartInstance;\n      },\n      type: 'horizontalBar'\n    }));\n  };\n\n  return HorizontalBar;\n}(React.Component);\nexport var Radar = function (_React$Component7) {\n  _inherits(Radar, _React$Component7);\n\n  function Radar() {\n    _classCallCheck(this, Radar);\n\n    return _possibleConstructorReturn(this, _React$Component7.apply(this, arguments));\n  }\n\n  Radar.prototype.render = function render() {\n    var _this15 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref6) {\n        return _this15.chartInstance = _ref6 && _ref6.chartInstance;\n      },\n      type: 'radar'\n    }));\n  };\n\n  return Radar;\n}(React.Component);\nexport var Polar = function (_React$Component8) {\n  _inherits(Polar, _React$Component8);\n\n  function Polar() {\n    _classCallCheck(this, Polar);\n\n    return _possibleConstructorReturn(this, _React$Component8.apply(this, arguments));\n  }\n\n  Polar.prototype.render = function render() {\n    var _this17 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref7) {\n        return _this17.chartInstance = _ref7 && _ref7.chartInstance;\n      },\n      type: 'polarArea'\n    }));\n  };\n\n  return Polar;\n}(React.Component);\nexport var Bubble = function (_React$Component9) {\n  _inherits(Bubble, _React$Component9);\n\n  function Bubble() {\n    _classCallCheck(this, Bubble);\n\n    return _possibleConstructorReturn(this, _React$Component9.apply(this, arguments));\n  }\n\n  Bubble.prototype.render = function render() {\n    var _this19 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref8) {\n        return _this19.chartInstance = _ref8 && _ref8.chartInstance;\n      },\n      type: 'bubble'\n    }));\n  };\n\n  return Bubble;\n}(React.Component);\nexport var Scatter = function (_React$Component10) {\n  _inherits(Scatter, _React$Component10);\n\n  function Scatter() {\n    _classCallCheck(this, Scatter);\n\n    return _possibleConstructorReturn(this, _React$Component10.apply(this, arguments));\n  }\n\n  Scatter.prototype.render = function render() {\n    var _this21 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref9) {\n        return _this21.chartInstance = _ref9 && _ref9.chartInstance;\n      },\n      type: 'scatter'\n    }));\n  };\n\n  return Scatter;\n}(React.Component);\nexport var defaults = Chart.defaults;\nexport { Chart };","var baseAssignValue = require('./_baseAssignValue'),\n    createAggregator = require('./_createAggregator');\n/**\n * Creates an object composed of keys generated from the results of running\n * each element of `collection` thru `iteratee`. The corresponding value of\n * each key is the last element responsible for generating the key. The\n * iteratee is invoked with one argument: (value).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [iteratee=_.identity] The iteratee to transform keys.\n * @returns {Object} Returns the composed aggregate object.\n * @example\n *\n * var array = [\n *   { 'dir': 'left', 'code': 97 },\n *   { 'dir': 'right', 'code': 100 }\n * ];\n *\n * _.keyBy(array, function(o) {\n *   return String.fromCharCode(o.code);\n * });\n * // => { 'a': { 'dir': 'left', 'code': 97 }, 'd': { 'dir': 'right', 'code': 100 } }\n *\n * _.keyBy(array, 'dir');\n * // => { 'left': { 'dir': 'left', 'code': 97 }, 'right': { 'dir': 'right', 'code': 100 } }\n */\n\n\nvar keyBy = createAggregator(function (result, value, key) {\n  baseAssignValue(result, key, value);\n});\nmodule.exports = keyBy;","var defineProperty = require('./_defineProperty');\n/**\n * The base implementation of `assignValue` and `assignMergeValue` without\n * value checks.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {string} key The key of the property to assign.\n * @param {*} value The value to assign.\n */\n\n\nfunction baseAssignValue(object, key, value) {\n  if (key == '__proto__' && defineProperty) {\n    defineProperty(object, key, {\n      'configurable': true,\n      'enumerable': true,\n      'value': value,\n      'writable': true\n    });\n  } else {\n    object[key] = value;\n  }\n}\n\nmodule.exports = baseAssignValue;","var getNative = require('./_getNative');\n\nvar defineProperty = function () {\n  try {\n    var func = getNative(Object, 'defineProperty');\n    func({}, '', {});\n    return func;\n  } catch (e) {}\n}();\n\nmodule.exports = defineProperty;","var arrayAggregator = require('./_arrayAggregator'),\n    baseAggregator = require('./_baseAggregator'),\n    baseIteratee = require('./_baseIteratee'),\n    isArray = require('./isArray');\n/**\n * Creates a function like `_.groupBy`.\n *\n * @private\n * @param {Function} setter The function to set accumulator values.\n * @param {Function} [initializer] The accumulator object initializer.\n * @returns {Function} Returns the new aggregator function.\n */\n\n\nfunction createAggregator(setter, initializer) {\n  return function (collection, iteratee) {\n    var func = isArray(collection) ? arrayAggregator : baseAggregator,\n        accumulator = initializer ? initializer() : {};\n    return func(collection, setter, baseIteratee(iteratee, 2), accumulator);\n  };\n}\n\nmodule.exports = createAggregator;","/**\n * A specialized version of `baseAggregator` for arrays.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} setter The function to set `accumulator` values.\n * @param {Function} iteratee The iteratee to transform keys.\n * @param {Object} accumulator The initial aggregated object.\n * @returns {Function} Returns `accumulator`.\n */\nfunction arrayAggregator(array, setter, iteratee, accumulator) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    var value = array[index];\n    setter(accumulator, value, iteratee(value), array);\n  }\n\n  return accumulator;\n}\n\nmodule.exports = arrayAggregator;","var baseEach = require('./_baseEach');\n/**\n * Aggregates elements of `collection` on `accumulator` with keys transformed\n * by `iteratee` and values set by `setter`.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} setter The function to set `accumulator` values.\n * @param {Function} iteratee The iteratee to transform keys.\n * @param {Object} accumulator The initial aggregated object.\n * @returns {Function} Returns `accumulator`.\n */\n\n\nfunction baseAggregator(collection, setter, iteratee, accumulator) {\n  baseEach(collection, function (value, key, collection) {\n    setter(accumulator, value, iteratee(value), collection);\n  });\n  return accumulator;\n}\n\nmodule.exports = baseAggregator;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar CardHeader = function CardHeader(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"tag\"]);\n\n  var classes = mapToCssModules(classNames(className, 'card-header'), cssModule);\n  return React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nCardHeader.propTypes = propTypes;\nCardHeader.defaultProps = defaultProps;\nexport default CardHeader;"],"sourceRoot":""}